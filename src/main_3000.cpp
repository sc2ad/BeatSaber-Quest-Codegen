// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnvironmentSizeData/FloorType _floorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentSizeData::FloorType& GlobalNamespace::EnvironmentSizeData::dyn__floorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::dyn__floorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSizeData::FloorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentSizeData/CeilingType _ceilingType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentSizeData::CeilingType& GlobalNamespace::EnvironmentSizeData::dyn__ceilingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::dyn__ceilingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ceilingType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSizeData::CeilingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentSizeData/TrackLaneType _trackLaneType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentSizeData::TrackLaneType& GlobalNamespace::EnvironmentSizeData::dyn__trackLaneType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::dyn__trackLaneType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSizeData::TrackLaneType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentSizeData.get_floorType
::GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::get_floorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::get_floorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentSizeData::FloorType, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSizeData.get_ceilingType
::GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::get_ceilingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::get_ceilingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ceilingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentSizeData::CeilingType, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSizeData.get_trackLaneType
::GlobalNamespace::EnvironmentSizeData::TrackLaneType GlobalNamespace::EnvironmentSizeData::get_trackLaneType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::get_trackLaneType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackLaneType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentSizeData::TrackLaneType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData/FloorType
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/FloorType NoFloor
::GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::FloorType::_get_NoFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::_get_NoFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::FloorType>("", "EnvironmentSizeData/FloorType", "NoFloor"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/FloorType NoFloor
void GlobalNamespace::EnvironmentSizeData::FloorType::_set_NoFloor(::GlobalNamespace::EnvironmentSizeData::FloorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::_set_NoFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/FloorType", "NoFloor", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/FloorType CloseTo0
::GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::FloorType::_get_CloseTo0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::_get_CloseTo0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::FloorType>("", "EnvironmentSizeData/FloorType", "CloseTo0"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/FloorType CloseTo0
void GlobalNamespace::EnvironmentSizeData::FloorType::_set_CloseTo0(::GlobalNamespace::EnvironmentSizeData::FloorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::_set_CloseTo0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/FloorType", "CloseTo0", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentSizeData::FloorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData/CeilingType
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/CeilingType NoCeiling
::GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::CeilingType::_get_NoCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::_get_NoCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::CeilingType>("", "EnvironmentSizeData/CeilingType", "NoCeiling"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/CeilingType NoCeiling
void GlobalNamespace::EnvironmentSizeData::CeilingType::_set_NoCeiling(::GlobalNamespace::EnvironmentSizeData::CeilingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::_set_NoCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/CeilingType", "NoCeiling", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/CeilingType LowCeiling
::GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::CeilingType::_get_LowCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::_get_LowCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::CeilingType>("", "EnvironmentSizeData/CeilingType", "LowCeiling"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/CeilingType LowCeiling
void GlobalNamespace::EnvironmentSizeData::CeilingType::_set_LowCeiling(::GlobalNamespace::EnvironmentSizeData::CeilingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::_set_LowCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/CeilingType", "LowCeiling", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentSizeData::CeilingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData/TrackLaneType
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/TrackLaneType None
::GlobalNamespace::EnvironmentSizeData::TrackLaneType GlobalNamespace::EnvironmentSizeData::TrackLaneType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::TrackLaneType>("", "EnvironmentSizeData/TrackLaneType", "None"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/TrackLaneType None
void GlobalNamespace::EnvironmentSizeData::TrackLaneType::_set_None(::GlobalNamespace::EnvironmentSizeData::TrackLaneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/TrackLaneType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/TrackLaneType Normal
::GlobalNamespace::EnvironmentSizeData::TrackLaneType GlobalNamespace::EnvironmentSizeData::TrackLaneType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::TrackLaneType>("", "EnvironmentSizeData/TrackLaneType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/TrackLaneType Normal
void GlobalNamespace::EnvironmentSizeData::TrackLaneType::_set_Normal(::GlobalNamespace::EnvironmentSizeData::TrackLaneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/TrackLaneType", "Normal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentSizeData::TrackLaneType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeNameLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::EnvironmentTypeSO::dyn__typeNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentTypeSO::dyn__typeNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeNameLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentTypeSO.get_typeNameLocalizationKey
::StringW GlobalNamespace::EnvironmentTypeSO::get_typeNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentTypeSO::get_typeNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_typeNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO[] _environmentInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::EnvironmentInfoSO*>& GlobalNamespace::EnvironmentsListSO::dyn__environmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::dyn__environmentInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::EnvironmentInfoSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentsListSO.get_environmentInfos
::ArrayW<::GlobalNamespace::EnvironmentInfoSO*> GlobalNamespace::EnvironmentsListSO::get_environmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::get_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::EnvironmentInfoSO*>, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentsListSO.GetEnvironmentInfoBySerializedName
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EnvironmentsListSO::GetEnvironmentInfoBySerializedName(::StringW environmentSerializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::GetEnvironmentInfoBySerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnvironmentInfoBySerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentSerializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentSerializedName);
}
// Autogenerated method: EnvironmentsListSO.GetAllEnvironmentInfosWithType
::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>* GlobalNamespace::EnvironmentsListSO::GetAllEnvironmentInfosWithType(::GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::GetAllEnvironmentInfosWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllEnvironmentInfosWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>*, false>(this, ___internal__method, environmentType);
}
// Autogenerated method: EnvironmentsListSO.GetFirstEnvironmentInfoWithType
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EnvironmentsListSO::GetFirstEnvironmentInfoWithType(::GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::GetFirstEnvironmentInfoWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstEnvironmentInfoWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentType);
}
// Autogenerated method: EnvironmentsListSO.GetLastEnvironmentInfoWithType
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EnvironmentsListSO::GetLastEnvironmentInfoWithType(::GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::GetLastEnvironmentInfoWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastEnvironmentInfoWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongSpeedData
#include "GlobalNamespace/SongSpeedData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single speedMul
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongSpeedData::dyn_speedMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSpeedData::dyn_speedMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IExperimentModel
#include "GlobalNamespace/IExperimentModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IExperimentData
#include "GlobalNamespace/IExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IExperimentModel.IsEmployee
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::IExperimentModel::IsEmployee() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IExperimentModel::IsEmployee");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmployee", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: IExperimentModel.IsInTest
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::IExperimentModel::IsInTest(::GlobalNamespace::IExperimentData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IExperimentModel::IsInTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IExperimentData
#include "GlobalNamespace/IExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IExperimentData.get_experimentPlatformKey
::StringW GlobalNamespace::IExperimentData::get_experimentPlatformKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IExperimentData::get_experimentPlatformKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_experimentPlatformKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoExperimentModel
#include "GlobalNamespace/NoExperimentModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IExperimentData
#include "GlobalNamespace/IExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoExperimentModel.IsEmployee
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::NoExperimentModel::IsEmployee() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoExperimentModel::IsEmployee");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmployee", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: NoExperimentModel.IsInTest
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::NoExperimentModel::IsInTest(::GlobalNamespace::IExperimentData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoExperimentModel::IsInTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeviceConfigExperimentModel
#include "GlobalNamespace/OculusDeviceConfigExperimentModel.hpp"
// Including type: OculusDeviceConfigExperimentModel/<Initialize>d__6
#include "GlobalNamespace/OculusDeviceConfigExperimentModel_-Initialize-d__6.hpp"
// Including type: OculusDeviceConfigExperimentModel/<GetBooleanAsync>d__7
#include "GlobalNamespace/OculusDeviceConfigExperimentModel_-GetBooleanAsync-d__7.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IExperimentData
#include "GlobalNamespace/IExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kInitTimeoutMs
int GlobalNamespace::OculusDeviceConfigExperimentModel::_get_kInitTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::_get_kInitTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OculusDeviceConfigExperimentModel", "kInitTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kInitTimeoutMs
void GlobalNamespace::OculusDeviceConfigExperimentModel::_set_kInitTimeoutMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::_set_kInitTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfigExperimentModel", "kInitTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kIsEmployeeKey
::StringW GlobalNamespace::OculusDeviceConfigExperimentModel::_get_kIsEmployeeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::_get_kIsEmployeeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusDeviceConfigExperimentModel", "kIsEmployeeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kIsEmployeeKey
void GlobalNamespace::OculusDeviceConfigExperimentModel::_set_kIsEmployeeKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::_set_kIsEmployeeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfigExperimentModel", "kIsEmployeeKey", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task _initializationTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& GlobalNamespace::OculusDeviceConfigExperimentModel::dyn__initializationTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::dyn__initializationTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initializationTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusDeviceConfigExperimentModel.IsEmployee
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusDeviceConfigExperimentModel::IsEmployee() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::IsEmployee");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmployee", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeviceConfigExperimentModel.IsInTest
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusDeviceConfigExperimentModel::IsInTest(::GlobalNamespace::IExperimentData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::IsInTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, data);
}
// Autogenerated method: OculusDeviceConfigExperimentModel.Initialize
::System::Threading::Tasks::Task* GlobalNamespace::OculusDeviceConfigExperimentModel::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeviceConfigExperimentModel.GetBooleanAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusDeviceConfigExperimentModel::GetBooleanAsync(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::GetBooleanAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBooleanAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeviceConfigExperimentModel/<Initialize>d__6
#include "GlobalNamespace/OculusDeviceConfigExperimentModel_-Initialize-d__6.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch <stopwatch>5__2
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$stopwatch$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$stopwatch$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stopwatch>5__2"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusDeviceConfigExperimentModel/<Initialize>d__6.MoveNext
void GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeviceConfigExperimentModel/<Initialize>d__6.SetStateMachine
void GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeviceConfigExperimentModel/<GetBooleanAsync>d__7
#include "GlobalNamespace/OculusDeviceConfigExperimentModel_-GetBooleanAsync-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusDeviceConfigExperimentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusDeviceConfigExperimentModel*& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusDeviceConfigExperimentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String key
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusDeviceConfigExperimentModel/<GetBooleanAsync>d__7.MoveNext
void GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeviceConfigExperimentModel/<GetBooleanAsync>d__7.SetStateMachine
void GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusTestExperiment
#include "GlobalNamespace/OculusTestExperiment.hpp"
// Including type: OculusTestExperiment/ExperimentData
#include "GlobalNamespace/OculusTestExperiment_ExperimentData.hpp"
// Including type: OculusTestExperiment/<Init>d__3
#include "GlobalNamespace/OculusTestExperiment_-Init-d__3.hpp"
// Including type: IExperimentModel
#include "GlobalNamespace/IExperimentModel.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kIsInTest1Key
::StringW GlobalNamespace::OculusTestExperiment::_get_kIsInTest1Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::_get_kIsInTest1Key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusTestExperiment", "kIsInTest1Key"));
}
// Autogenerated static field setter
// Set static field: static private System.String kIsInTest1Key
void GlobalNamespace::OculusTestExperiment::_set_kIsInTest1Key(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::_set_kIsInTest1Key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusTestExperiment", "kIsInTest1Key", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IExperimentModel _experimentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IExperimentModel*& GlobalNamespace::OculusTestExperiment::dyn__experimentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::dyn__experimentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_experimentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IExperimentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusTestExperiment.Init
void GlobalNamespace::OculusTestExperiment::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusTestExperiment/ExperimentData
#include "GlobalNamespace/OculusTestExperiment_ExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _experimentPlatformKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusTestExperiment::ExperimentData::dyn__experimentPlatformKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::ExperimentData::dyn__experimentPlatformKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_experimentPlatformKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusTestExperiment/ExperimentData.get_experimentPlatformKey
::StringW GlobalNamespace::OculusTestExperiment::ExperimentData::get_experimentPlatformKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::ExperimentData::get_experimentPlatformKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_experimentPlatformKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusTestExperiment/<Init>d__3
#include "GlobalNamespace/OculusTestExperiment_-Init-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusTestExperiment <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusTestExperiment*& GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusTestExperiment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusTestExperiment/<Init>d__3.MoveNext
void GlobalNamespace::OculusTestExperiment::$Init$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusTestExperiment/<Init>d__3.SetStateMachine
void GlobalNamespace::OculusTestExperiment::$Init$d__3::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileBrowserModel
#include "GlobalNamespace/FileBrowserModel.hpp"
// Including type: FileBrowserModel/<>c__DisplayClass0_0
#include "GlobalNamespace/FileBrowserModel_--c__DisplayClass0_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileBrowserModel.GetContentOfDirectory
void GlobalNamespace::FileBrowserModel::GetContentOfDirectory(::StringW direcotryPath, ::ArrayW<::StringW> extensions, ::System::Action_1<::ArrayW<::GlobalNamespace::FileBrowserItem*>>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::GetContentOfDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "GetContentOfDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direcotryPath), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direcotryPath, extensions, callback);
}
// Autogenerated method: FileBrowserModel.GetContentOfDirectory
::ArrayW<::GlobalNamespace::FileBrowserItem*> GlobalNamespace::FileBrowserModel::GetContentOfDirectory(::StringW directoryPath, ::ArrayW<::StringW> extensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::GetContentOfDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "GetContentOfDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directoryPath), ::il2cpp_utils::ExtractType(extensions)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::FileBrowserItem*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directoryPath, extensions);
}
// Autogenerated method: FileBrowserModel.CanOpenDirectory
bool GlobalNamespace::FileBrowserModel::CanOpenDirectory(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::CanOpenDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "CanOpenDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileBrowserModel/<>c__DisplayClass0_0
#include "GlobalNamespace/FileBrowserModel_--c__DisplayClass0_0.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FileBrowserItem[] items
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FileBrowserItem*>& GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FileBrowserItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String direcotryPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_direcotryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_direcotryPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direcotryPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] extensions
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensions"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<FileBrowserItem[]> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<::GlobalNamespace::FileBrowserItem*>>*& GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<::GlobalNamespace::FileBrowserItem*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FileBrowserModel/<>c__DisplayClass0_0.<GetContentOfDirectory>b__0
void GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::$GetContentOfDirectory$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::<GetContentOfDirectory>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContentOfDirectory>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserModel/<>c__DisplayClass0_0.<GetContentOfDirectory>b__1
void GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::$GetContentOfDirectory$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::<GetContentOfDirectory>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContentOfDirectory>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <displayName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FileBrowserItem::dyn_$displayName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::dyn_$displayName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<displayName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <fullPath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FileBrowserItem::dyn_$fullPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::dyn_$fullPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fullPath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDirectory>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FileBrowserItem::dyn_$isDirectory$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::dyn_$isDirectory$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDirectory>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FileBrowserItem.get_displayName
::StringW GlobalNamespace::FileBrowserItem::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::get_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_displayName
void GlobalNamespace::FileBrowserItem::set_displayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::set_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserItem.get_fullPath
::StringW GlobalNamespace::FileBrowserItem::get_fullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::get_fullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_fullPath
void GlobalNamespace::FileBrowserItem::set_fullPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::set_fullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserItem.get_isDirectory
bool GlobalNamespace::FileBrowserItem::get_isDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::get_isDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_isDirectory
void GlobalNamespace::FileBrowserItem::set_isDirectory(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::set_isDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberMovementData
#include "GlobalNamespace/SaberMovementData.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace/ISaberMovementDataProcessor.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kOutOfRangeBladeSpeed
float GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kOutOfRangeBladeSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kOutOfRangeBladeSpeed
void GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kOutOfRangeBladeSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothUpBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothUpBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothUpBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothUpBladeSpeedCoef", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothDownBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothDownBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothDownBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothDownBladeSpeedCoef", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BladeMovementDataElement[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BladeMovementDataElement>& GlobalNamespace::SaberMovementData::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BladeMovementDataElement>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<ISaberMovementDataProcessor> _dataProcessors
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberMovementDataProcessor*>*& GlobalNamespace::SaberMovementData::dyn__dataProcessors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__dataProcessors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataProcessors"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberMovementDataProcessor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nextAddIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SaberMovementData::dyn__nextAddIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__nextAddIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextAddIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _validCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SaberMovementData::dyn__validCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__validCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_validCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bladeSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SaberMovementData::dyn__bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__bladeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bladeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberMovementData.get_bladeSpeed
float GlobalNamespace::SaberMovementData::get_bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::get_bladeSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bladeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_lastAddedData
::GlobalNamespace::BladeMovementDataElement GlobalNamespace::SaberMovementData::get_lastAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::get_lastAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_prevAddedData
::GlobalNamespace::BladeMovementDataElement GlobalNamespace::SaberMovementData::get_prevAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::get_prevAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.AddDataProcessor
void GlobalNamespace::SaberMovementData::AddDataProcessor(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::AddDataProcessor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDataProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.RemoveDataProcessor
void GlobalNamespace::SaberMovementData::RemoveDataProcessor(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::RemoveDataProcessor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDataProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.RequestLastDataProcessing
void GlobalNamespace::SaberMovementData::RequestLastDataProcessing(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::RequestLastDataProcessing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestLastDataProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.AddNewData
void GlobalNamespace::SaberMovementData::AddNewData(::UnityEngine::Vector3 topPos, ::UnityEngine::Vector3 bottomPos, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::AddNewData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNewData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topPos), ::il2cpp_utils::ExtractType(bottomPos), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topPos, bottomPos, time);
}
// Autogenerated method: SaberMovementData.ComputeAdditionalData
void GlobalNamespace::SaberMovementData::ComputeAdditionalData(::UnityEngine::Vector3 topPos, ::UnityEngine::Vector3 bottomPos, int idxOffset, ByRef<::UnityEngine::Vector3> segmentNormal, ByRef<float> segmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeAdditionalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeAdditionalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topPos), ::il2cpp_utils::ExtractType(bottomPos), ::il2cpp_utils::ExtractType(idxOffset), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topPos, bottomPos, idxOffset, byref(segmentNormal), byref(segmentAngle));
}
// Autogenerated method: SaberMovementData.ComputePlaneNormal
::UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputePlaneNormal(::UnityEngine::Vector3 tp0, ::UnityEngine::Vector3 bp0, ::UnityEngine::Vector3 tp1, ::UnityEngine::Vector3 bp1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputePlaneNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputePlaneNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tp0), ::il2cpp_utils::ExtractType(bp0), ::il2cpp_utils::ExtractType(tp1), ::il2cpp_utils::ExtractType(bp1)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, tp0, bp0, tp1, bp1);
}
// Autogenerated method: SaberMovementData.ComputeCutPlaneNormal
::UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCutPlaneNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(float overrideSegmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeSwingRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideSegmentAngle)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, overrideSegmentAngle);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeSwingRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(bool overrideSegmenAngle, float overrideValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeSwingRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideSegmenAngle), ::il2cpp_utils::ExtractType(overrideValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, overrideSegmenAngle, overrideValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRating
#include "GlobalNamespace/SaberSwingRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kMaxNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kToleranceNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kToleranceNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kToleranceNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kToleranceNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxBeforeCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxBeforeCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxBeforeCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxBeforeCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxAfterCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxAfterCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxAfterCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxAfterCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kBeforeCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kBeforeCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kBeforeCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kBeforeCutAngleFor1Rating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kAfterCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kAfterCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kAfterCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kAfterCutAngleFor1Rating", value));
}
// Autogenerated method: SaberSwingRating.NormalRating
float GlobalNamespace::SaberSwingRating::NormalRating(float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::NormalRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "NormalRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, normalDiff);
}
// Autogenerated method: SaberSwingRating.BeforeCutStepRating
float GlobalNamespace::SaberSwingRating::BeforeCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::BeforeCutStepRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "BeforeCutStepRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleDiff), ::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated method: SaberSwingRating.AfterCutStepRating
float GlobalNamespace::SaberSwingRating::AfterCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::AfterCutStepRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "AfterCutStepRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleDiff), ::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRatingCounter
#include "GlobalNamespace/SaberSwingRatingCounter.hpp"
// Including type: ISaberMovementData
#include "GlobalNamespace/ISaberMovementData.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: ISaberSwingRatingCounterDidChangeReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidChangeReceiver.hpp"
// Including type: ISaberSwingRatingCounterDidFinishReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidFinishReceiver.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ISaberMovementData _saberMovementData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ISaberMovementData*& GlobalNamespace::SaberSwingRatingCounter::dyn__saberMovementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__saberMovementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberMovementData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ISaberMovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cutPlaneNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__cutPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__cutPlaneNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutPlaneNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SaberSwingRatingCounter::dyn__cutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__cutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _afterCutRating
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutRating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterCutRating"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beforeCutRating
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutRating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutRating"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Plane _notePlane
[[deprecated("Use field access instead!")]] ::UnityEngine::Plane& GlobalNamespace::SaberSwingRatingCounter::dyn__notePlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__notePlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notePlane"))->offset;
  return *reinterpret_cast<::UnityEngine::Plane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _notePlaneWasCut
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SaberSwingRatingCounter::dyn__notePlaneWasCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__notePlaneWasCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notePlaneWasCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _noteForward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__noteForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__noteForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteForward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rateBeforeCut
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SaberSwingRatingCounter::dyn__rateBeforeCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__rateBeforeCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rateBeforeCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rateAfterCut
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SaberSwingRatingCounter::dyn__rateAfterCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__rateAfterCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rateAfterCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<ISaberSwingRatingCounterDidChangeReceiver> _didChangeReceivers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver*>*& GlobalNamespace::SaberSwingRatingCounter::dyn__didChangeReceivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__didChangeReceivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didChangeReceivers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<ISaberSwingRatingCounterDidFinishReceiver> _didFinishReceivers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver*>*& GlobalNamespace::SaberSwingRatingCounter::dyn__didFinishReceivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__didFinishReceivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishReceivers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _notePlaneCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__notePlaneCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__notePlaneCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notePlaneCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _beforeCutTopPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutTopPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutTopPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutTopPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _beforeCutBottomPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutBottomPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutBottomPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutBottomPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _afterCutTopPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutTopPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutTopPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterCutTopPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _afterCutBottomPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutBottomPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutBottomPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterCutBottomPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _newPlaneNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__newPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__newPlaneNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPlaneNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cutTopPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__cutTopPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__cutTopPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutTopPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cutBottomPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__cutBottomPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__cutBottomPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutBottomPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SaberSwingRatingCounter::dyn__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberSwingRatingCounter.get_beforeCutRating
float GlobalNamespace::SaberSwingRatingCounter::get_beforeCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::get_beforeCutRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beforeCutRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.get_afterCutRating
float GlobalNamespace::SaberSwingRatingCounter::get_afterCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::get_afterCutRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_afterCutRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.RegisterDidChangeReceiver
void GlobalNamespace::SaberSwingRatingCounter::RegisterDidChangeReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::RegisterDidChangeReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.RegisterDidFinishReceiver
void GlobalNamespace::SaberSwingRatingCounter::RegisterDidFinishReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::RegisterDidFinishReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.UnregisterDidChangeReceiver
void GlobalNamespace::SaberSwingRatingCounter::UnregisterDidChangeReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::UnregisterDidChangeReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.UnregisterDidFinishReceiver
void GlobalNamespace::SaberSwingRatingCounter::UnregisterDidFinishReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::UnregisterDidFinishReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.Init
void GlobalNamespace::SaberSwingRatingCounter::Init(::GlobalNamespace::ISaberMovementData* saberMovementData, ::UnityEngine::Vector3 notePosition, ::UnityEngine::Quaternion noteRotation, bool rateBeforeCut, bool rateAfterCut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberMovementData), ::il2cpp_utils::ExtractType(notePosition), ::il2cpp_utils::ExtractType(noteRotation), ::il2cpp_utils::ExtractType(rateBeforeCut), ::il2cpp_utils::ExtractType(rateAfterCut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberMovementData, notePosition, noteRotation, rateBeforeCut, rateAfterCut);
}
// Autogenerated method: SaberSwingRatingCounter.ProcessNewData
void GlobalNamespace::SaberSwingRatingCounter::ProcessNewData(::GlobalNamespace::BladeMovementDataElement newData, ::GlobalNamespace::BladeMovementDataElement prevData, bool prevDataAreValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::ProcessNewData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNewData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newData), ::il2cpp_utils::ExtractType(prevData), ::il2cpp_utils::ExtractType(prevDataAreValid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newData, prevData, prevDataAreValid);
}
// Autogenerated method: SaberSwingRatingCounter.Finish
void GlobalNamespace::SaberSwingRatingCounter::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.DrawGizmos
void GlobalNamespace::SaberSwingRatingCounter::DrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::DrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _modifierNameLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameplayModifierParamsSO::dyn__modifierNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__modifierNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifierNameLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _descriptionLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameplayModifierParamsSO::dyn__descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__descriptionLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_descriptionLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _multiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GameplayModifierParamsSO::dyn__multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__multiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _multiplierConditionallyValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameplayModifierParamsSO::dyn__multiplierConditionallyValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__multiplierConditionallyValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierConditionallyValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _icon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::GameplayModifierParamsSO::dyn__icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_icon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO[] _mutuallyExclusives
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>& GlobalNamespace::GameplayModifierParamsSO::dyn__mutuallyExclusives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__mutuallyExclusives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mutuallyExclusives"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO[] _requires
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>& GlobalNamespace::GameplayModifierParamsSO::dyn__requires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__requires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requires"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO[] _requiredBy
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>& GlobalNamespace::GameplayModifierParamsSO::dyn__requiredBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__requiredBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requiredBy"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInBeta
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameplayModifierParamsSO::dyn__isInBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__isInBeta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInBeta"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifierParamsSO.get_modifierNameLocalizationKey
::StringW GlobalNamespace::GameplayModifierParamsSO::get_modifierNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_modifierNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modifierNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_descriptionLocalizationKey
::StringW GlobalNamespace::GameplayModifierParamsSO::get_descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_descriptionLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_descriptionLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_multiplier
float GlobalNamespace::GameplayModifierParamsSO::get_multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_multiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_multiplierConditionallyValid
bool GlobalNamespace::GameplayModifierParamsSO::get_multiplierConditionallyValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_multiplierConditionallyValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplierConditionallyValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_icon
::UnityEngine::Sprite* GlobalNamespace::GameplayModifierParamsSO::get_icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_mutuallyExclusives
::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*> GlobalNamespace::GameplayModifierParamsSO::get_mutuallyExclusives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_mutuallyExclusives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mutuallyExclusives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_requires
::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*> GlobalNamespace::GameplayModifierParamsSO::get_requires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_requires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_requiredBy
::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*> GlobalNamespace::GameplayModifierParamsSO::get_requiredBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_requiredBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiredBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_isInBeta
bool GlobalNamespace::GameplayModifierParamsSO::get_isInBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_isInBeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInBeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
// Including type: GameplayModifiersModelSO/<>c
#include "GlobalNamespace/GameplayModifiersModelSO_--c.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: GameplayModifiers/SongSpeed
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierMask
#include "GlobalNamespace/GameplayModifierMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _batteryEnergy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__batteryEnergy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__batteryEnergy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batteryEnergy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _instaFail
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__instaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__instaFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instaFail"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _noObstacles
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__noObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__noObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noObstacles"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _noBombs
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__noBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__noBombs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noBombs"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _fastNotes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__fastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__fastNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fastNotes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _strictAngles
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__strictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__strictAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strictAngles"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _disappearingArrows
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__disappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__disappearingArrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearingArrows"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _fasterSong
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__fasterSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__fasterSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fasterSong"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _slowerSong
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__slowerSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__slowerSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slowerSong"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _noArrows
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__noArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__noArrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noArrows"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _ghostNotes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__ghostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__ghostNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostNotes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _noFailOn0Energy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__noFailOn0Energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__noFailOn0Energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noFailOn0Energy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _superFastSong
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__superFastSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__superFastSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_superFastSong"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _proMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__proMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__proMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _zenMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__zenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__zenMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zenMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _smallCubes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__smallCubes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__smallCubes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallCubes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<GameplayModifierParamsSO,GameplayModifiersModelSO/GameplayModifierBoolGetter> _gameplayModifierGetters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::GameplayModifierParamsSO*, ::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>*& GlobalNamespace::GameplayModifiersModelSO::dyn__gameplayModifierGetters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__gameplayModifierGetters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifierGetters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::GameplayModifierParamsSO*, ::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifiersModelSO.CreateGameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplayModifiersModelSO::CreateGameplayModifiers(::System::Func_2<::GlobalNamespace::GameplayModifierParamsSO*, bool>* valueGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::CreateGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, valueGetter);
}
// Autogenerated method: GameplayModifiersModelSO.GetModifierBoolValue
bool GlobalNamespace::GameplayModifiersModelSO::GetModifierBoolValue(::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::GameplayModifierParamsSO* gameplayModifierParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetModifierBoolValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifierBoolValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(gameplayModifierParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers, gameplayModifierParams);
}
// Autogenerated method: GameplayModifiersModelSO.CreateModifierParamsList
::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* GlobalNamespace::GameplayModifiersModelSO::CreateModifierParamsList(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::CreateModifierParamsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateModifierParamsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>*, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO.GetTotalMultiplier
float GlobalNamespace::GameplayModifiersModelSO::GetTotalMultiplier(::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetTotalMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.MaxModifiedScoreForMaxMultipliedScore
int GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxMultipliedScore(int maxMultipliedScore, ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxMultipliedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxModifiedScoreForMaxMultipliedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxMultipliedScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, maxMultipliedScore, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.MaxModifiedScoreForMaxMultipliedScore
int GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxMultipliedScore(int maxMultipliedScore, ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, ::GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxMultipliedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxModifiedScoreForMaxMultipliedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxMultipliedScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(gameplayModifiersModel), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, maxMultipliedScore, modifierParams, gameplayModifiersModel, energy);
}
// Autogenerated method: GameplayModifiersModelSO.GetModifiedScoreForGameplayModifiers
int GlobalNamespace::GameplayModifiersModelSO::GetModifiedScoreForGameplayModifiers(int multipliedScore, ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetModifiedScoreForGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedScoreForGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, multipliedScore, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.GetGameplayModifierParams
::GlobalNamespace::GameplayModifierParamsSO* GlobalNamespace::GameplayModifiersModelSO::GetGameplayModifierParams(::GlobalNamespace::GameplayModifierMask modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetGameplayModifierParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplayModifierParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifierParamsSO*, false>(this, ___internal__method, modifier);
}
// Autogenerated method: GameplayModifiersModelSO.GetSongSpeedFromValueGetter
::GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiersModelSO::GetSongSpeedFromValueGetter(::System::Func_2<::GlobalNamespace::GameplayModifierParamsSO*, bool>* valueGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetSongSpeedFromValueGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongSpeedFromValueGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers::SongSpeed, false>(this, ___internal__method, valueGetter);
}
// Autogenerated method: GameplayModifiersModelSO.OnEnable
void GlobalNamespace::GameplayModifiersModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.Invoke
bool GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::Invoke(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.BeginInvoke
::System::IAsyncResult* GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::BeginInvoke(::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, gameplayModifiers, callback, object);
}
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.EndInvoke
bool GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersModelSO/<>c
#include "GlobalNamespace/GameplayModifiersModelSO_--c.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GameplayModifiersModelSO/<>c <>9
::GlobalNamespace::GameplayModifiersModelSO::$$c* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::$$c*>("", "GameplayModifiersModelSO/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GameplayModifiersModelSO/<>c <>9
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9(::GlobalNamespace::GameplayModifiersModelSO::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_0
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_0
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_0(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_0", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_1
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_1")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_1
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_1(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_1", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_2
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_2")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_2
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_2(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_2", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_3
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_3")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_3
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_3(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_3", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_4
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_4")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_4
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_4(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_4", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_5
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_5")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_5
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_5(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_5", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_6
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_6")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_6
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_6(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_6", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_7
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_7")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_7
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_7(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_7", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_8
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_8")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_8
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_8(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_8", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_9
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_9")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_9
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_9(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_9", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_10
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_10")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_10
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_10(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_10", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_11
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_11")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_11
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_11(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_11", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_12
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_12")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_12
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_12(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_12", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_13
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_13")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_13
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_13(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_13", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_14
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_14")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_14
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_14(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_14", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_15
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_15")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_15
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_15(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_15", value)));
}
// Autogenerated method: GameplayModifiersModelSO/<>c..cctor
void GlobalNamespace::GameplayModifiersModelSO::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayModifiersModelSO/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_0
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_0(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_1
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_1(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_2
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_2(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_3
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_3(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_4
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_4(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_5
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_5(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_6
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_6(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_7
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_7(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_8
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_8(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_9
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_9(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_10
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_10(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_11
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_11(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_12
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_12(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_13
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_13(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_14
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_14(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_15
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_15(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreFormatter
#include "GlobalNamespace/ScoreFormatter.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10DAC90
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.NumberFormatInfo _numberFormatInfo
::System::Globalization::NumberFormatInfo* GlobalNamespace::ScoreFormatter::_get__numberFormatInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreFormatter::_get__numberFormatInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberFormatInfo*>("", "ScoreFormatter", "_numberFormatInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.NumberFormatInfo _numberFormatInfo
void GlobalNamespace::ScoreFormatter::_set__numberFormatInfo(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreFormatter::_set__numberFormatInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreFormatter", "_numberFormatInfo", value));
}
// Autogenerated method: ScoreFormatter..cctor
void GlobalNamespace::ScoreFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ScoreFormatter.Format
::StringW GlobalNamespace::ScoreFormatter::Format(int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreFormatter::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreFormatter", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, score);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardPlayerInfo
#include "GlobalNamespace/LeaderboardPlayerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serverKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_serverKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_serverKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerKey>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerKey$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerKey$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerKey>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <authType>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$authType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$authType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<authType>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerFriends>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerFriends$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerFriends$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerFriends>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <succeeded>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LeaderboardPlayerInfo::dyn_$succeeded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$succeeded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<succeeded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerId
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerId
void GlobalNamespace::LeaderboardPlayerInfo::set_playerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerName
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerName
void GlobalNamespace::LeaderboardPlayerInfo::set_playerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerKey
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_playerKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_playerKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerKey
void GlobalNamespace::LeaderboardPlayerInfo::set_playerKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_playerKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_authType
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_authType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_authType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_authType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_authType
void GlobalNamespace::LeaderboardPlayerInfo::set_authType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_authType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_authType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerFriends
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_playerFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_playerFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerFriends
void GlobalNamespace::LeaderboardPlayerInfo::set_playerFriends(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_playerFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_succeeded
bool GlobalNamespace::LeaderboardPlayerInfo::get_succeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_succeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_succeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_succeeded
void GlobalNamespace::LeaderboardPlayerInfo::set_succeeded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_succeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_succeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardUploadData
#include "GlobalNamespace/LeaderboardUploadData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String score
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "score"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String leaderboardId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_leaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_leaderboardId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaderboardId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String songName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String songSubName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSubName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String authorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_authorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_authorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String bpm
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_bpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_bpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String difficulty
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String infoHash
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_infoHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_infoHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infoHash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> modifiers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::LeaderboardUploadData::dyn_modifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_modifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsModel
#include "GlobalNamespace/LeaderboardsModel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardsModel.GetLeaderboardID
::StringW GlobalNamespace::LeaderboardsModel::GetLeaderboardID(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardsModel::GetLeaderboardID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LeaderboardsModel", "GetLeaderboardID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader
#include "GlobalNamespace/LeaderboardScoreUploader.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: LeaderboardScoreUploader/ScoresToUploadData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoresToUploadData.hpp"
// Including type: LeaderboardScoreUploader/UploadScoreCallback
#include "GlobalNamespace/LeaderboardScoreUploader_UploadScoreCallback.hpp"
// Including type: LeaderboardScoreUploader/<>c__DisplayClass14_0
#include "GlobalNamespace/LeaderboardScoreUploader_--c__DisplayClass14_0.hpp"
// Including type: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14
#include "GlobalNamespace/LeaderboardScoreUploader_-UploadScoresCoroutine-d__14.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kScoresToUploadFileName
::StringW GlobalNamespace::LeaderboardScoreUploader::_get_kScoresToUploadFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::_get_kScoresToUploadFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LeaderboardScoreUploader", "kScoresToUploadFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kScoresToUploadFileName
void GlobalNamespace::LeaderboardScoreUploader::_set_kScoresToUploadFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::_set_kScoresToUploadFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LeaderboardScoreUploader", "kScoresToUploadFileName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action allScoresDidUploadEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LeaderboardScoreUploader::dyn_allScoresDidUploadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn_allScoresDidUploadEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allScoresDidUploadEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LeaderboardScoreUploader/ScoreData> _scoresToUpload
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>*& GlobalNamespace::LeaderboardScoreUploader::dyn__scoresToUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__scoresToUpload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoresToUpload"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LeaderboardScoreUploader/ScoreData> _scoresToUploadForCurrentPlayer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>*& GlobalNamespace::LeaderboardScoreUploader::dyn__scoresToUploadForCurrentPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__scoresToUploadForCurrentPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoresToUploadForCurrentPlayer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LeaderboardScoreUploader/UploadScoreCallback _uploadScoreCallback
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback*& GlobalNamespace::LeaderboardScoreUploader::dyn__uploadScoreCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__uploadScoreCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uploadScoreCallback"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardScoreUploader::dyn__playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _uploading
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LeaderboardScoreUploader::dyn__uploading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__uploading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uploading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardScoreUploader.add_allScoresDidUploadEvent
void GlobalNamespace::LeaderboardScoreUploader::add_allScoresDidUploadEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::add_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader.remove_allScoresDidUploadEvent
void GlobalNamespace::LeaderboardScoreUploader::remove_allScoresDidUploadEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::remove_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader.Init
void GlobalNamespace::LeaderboardScoreUploader::Init(::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback* uploadScoreCallback, ::StringW playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uploadScoreCallback), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uploadScoreCallback, playerId);
}
// Autogenerated method: LeaderboardScoreUploader.OnApplicationQuit
void GlobalNamespace::LeaderboardScoreUploader::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.UploadScoresCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LeaderboardScoreUploader::UploadScoresCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::UploadScoresCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScoresCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.LoadScoresToUploadFromFile
void GlobalNamespace::LeaderboardScoreUploader::LoadScoresToUploadFromFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::LoadScoresToUploadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScoresToUploadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.SaveScoresToUploadToFile
void GlobalNamespace::LeaderboardScoreUploader::SaveScoresToUploadToFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::SaveScoresToUploadToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveScoresToUploadToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.AddScore
void GlobalNamespace::LeaderboardScoreUploader::AddScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scoreData);
}
// Autogenerated method: LeaderboardScoreUploader.<UploadScoresCoroutine>b__14_1
bool GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$b__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::<UploadScoresCoroutine>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScoresCoroutine>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <playerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$playerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$playerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap <beatmap>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$beatmap$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$beatmap$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmap>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers <gameplayModifiers>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers*& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$gameplayModifiers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$gameplayModifiers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gameplayModifiers>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <multipliedScore>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$multipliedScore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$multipliedScore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multipliedScore>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <modifiedScore>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$modifiedScore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$modifiedScore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<modifiedScore>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <fullCombo>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$fullCombo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$fullCombo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fullCombo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <goodCutsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$goodCutsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$goodCutsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<goodCutsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <badCutsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$badCutsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$badCutsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<badCutsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <missedCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$missedCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$missedCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missedCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <maxCombo>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$maxCombo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$maxCombo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxCombo>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 uploadAttemptCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_uploadAttemptCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_uploadAttemptCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uploadAttemptCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentUploadAttemptCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_currentUploadAttemptCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_currentUploadAttemptCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentUploadAttemptCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_playerId
::StringW GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_playerId
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_playerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_beatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_beatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_beatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_beatmap
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_beatmap(::GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_beatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_gameplayModifiers
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_gameplayModifiers(::GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_multipliedScore
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_multipliedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_multipliedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipliedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_multipliedScore
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_multipliedScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_multipliedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multipliedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_modifiedScore
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_modifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_modifiedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modifiedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_modifiedScore
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_modifiedScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_modifiedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modifiedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_fullCombo
bool GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_fullCombo
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_fullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_goodCutsCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_goodCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_goodCutsCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_goodCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_badCutsCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_badCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_badCutsCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_badCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_missedCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_missedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_missedCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missedCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_missedCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_missedCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_missedCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missedCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_maxCombo
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_maxCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_maxCombo
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_maxCombo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_maxCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader/ScoresToUploadData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoresToUploadData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<LeaderboardScoreUploader/ScoreData> scores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>*& GlobalNamespace::LeaderboardScoreUploader::ScoresToUploadData::dyn_scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoresToUploadData::dyn_scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardScoreUploader/UploadScoreCallback
#include "GlobalNamespace/LeaderboardScoreUploader_UploadScoreCallback.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.Invoke
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::Invoke(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::BeginInvoke(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, scoreData, completionHandler, callback, object);
}
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.EndInvoke
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader/<>c__DisplayClass14_0
#include "GlobalNamespace/LeaderboardScoreUploader_--c__DisplayClass14_0.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LeaderboardScoreUploader/ScoreData scoreData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader::ScoreData*& GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::dyn_scoreData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::dyn_scoreData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader::ScoreData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LeaderboardScoreUploader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader*& GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardScoreUploader/<>c__DisplayClass14_0.<UploadScoresCoroutine>b__0
void GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::$UploadScoresCoroutine$b__0(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::<UploadScoresCoroutine>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScoresCoroutine>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14
#include "GlobalNamespace/LeaderboardScoreUploader_-UploadScoresCoroutine-d__14.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LeaderboardScoreUploader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader*& GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.IDisposable.Dispose
void GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.MoveNext
bool GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
// Including type: LocalLeaderboardsModel/SavedLeaderboardsData
#include "GlobalNamespace/LocalLeaderboardsModel_SavedLeaderboardsData.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kLocalLeaderboardsFileName
::StringW GlobalNamespace::LocalLeaderboardsModel::_get_kLocalLeaderboardsFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::_get_kLocalLeaderboardsFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LocalLeaderboardsModel", "kLocalLeaderboardsFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLocalLeaderboardsFileName
void GlobalNamespace::LocalLeaderboardsModel::_set_kLocalLeaderboardsFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::_set_kLocalLeaderboardsFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel", "kLocalLeaderboardsFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kLocalDailyLeaderboardsFileName
::StringW GlobalNamespace::LocalLeaderboardsModel::_get_kLocalDailyLeaderboardsFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::_get_kLocalDailyLeaderboardsFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LocalLeaderboardsModel", "kLocalDailyLeaderboardsFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLocalDailyLeaderboardsFileName
void GlobalNamespace::LocalLeaderboardsModel::_set_kLocalDailyLeaderboardsFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::_set_kLocalDailyLeaderboardsFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel", "kLocalDailyLeaderboardsFileName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxNumberOfScoresInLeaderboard
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalLeaderboardsModel::dyn__maxNumberOfScoresInLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__maxNumberOfScoresInLeaderboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxNumberOfScoresInLeaderboard"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,LocalLeaderboardsModel/LeaderboardType> newScoreWasAddedToLeaderboardEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>*& GlobalNamespace::LocalLeaderboardsModel::dyn_newScoreWasAddedToLeaderboardEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn_newScoreWasAddedToLeaderboardEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newScoreWasAddedToLeaderboardEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<LocalLeaderboardsModel/LeaderboardType,System.Int32> _lastScorePositions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType, int>*& GlobalNamespace::LocalLeaderboardsModel::dyn__lastScorePositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__lastScorePositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScorePositions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _lastScoreLeaderboardId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalLeaderboardsModel::dyn__lastScoreLeaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__lastScoreLeaderboardId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScoreLeaderboardId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LocalLeaderboardsModel/LeaderboardData> _leaderboardsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*& GlobalNamespace::LocalLeaderboardsModel::dyn__leaderboardsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__leaderboardsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LocalLeaderboardsModel/LeaderboardData> _dailyLeaderboardsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*& GlobalNamespace::LocalLeaderboardsModel::dyn__dailyLeaderboardsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__dailyLeaderboardsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dailyLeaderboardsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalLeaderboardsModel.add_newScoreWasAddedToLeaderboardEvent
void GlobalNamespace::LocalLeaderboardsModel::add_newScoreWasAddedToLeaderboardEvent(::System::Action_2<::StringW, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::add_newScoreWasAddedToLeaderboardEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_newScoreWasAddedToLeaderboardEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalLeaderboardsModel.remove_newScoreWasAddedToLeaderboardEvent
void GlobalNamespace::LocalLeaderboardsModel::remove_newScoreWasAddedToLeaderboardEvent(::System::Action_2<::StringW, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::remove_newScoreWasAddedToLeaderboardEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_newScoreWasAddedToLeaderboardEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalLeaderboardsModel.OnDisable
void GlobalNamespace::LocalLeaderboardsModel::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.LoadLeaderboardsData
void GlobalNamespace::LocalLeaderboardsModel::LoadLeaderboardsData(::StringW filename, ByRef<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*> leaderboardsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LoadLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel", "LoadLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, byref(leaderboardsData));
}
// Autogenerated method: LocalLeaderboardsModel.SaveLeaderboardsData
void GlobalNamespace::LocalLeaderboardsModel::SaveLeaderboardsData(::StringW filename, ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* leaderboardsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::SaveLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel", "SaveLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(leaderboardsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, leaderboardsData);
}
// Autogenerated method: LocalLeaderboardsModel.Load
void GlobalNamespace::LocalLeaderboardsModel::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.Save
void GlobalNamespace::LocalLeaderboardsModel::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.GetLeaderboardsData
::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardsData(::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*, false>(this, ___internal__method, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetLeaderboardData
::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData* GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardData(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetCurrentTimestamp
int64_t GlobalNamespace::LocalLeaderboardsModel::GetCurrentTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetCurrentTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.UpdateDailyLeaderboard
void GlobalNamespace::LocalLeaderboardsModel::UpdateDailyLeaderboard(::StringW leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::UpdateDailyLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDailyLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: LocalLeaderboardsModel.AddScore
void GlobalNamespace::LocalLeaderboardsModel::AddScore(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, ::StringW playerName, int score, bool fullCombo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(fullCombo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId, leaderboardType, playerName, score, fullCombo);
}
// Autogenerated method: LocalLeaderboardsModel.WillScoreGoIntoLeaderboard
bool GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoIntoLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaderboardId, leaderboardType, score);
}
// Autogenerated method: LocalLeaderboardsModel.GetScores
::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* GlobalNamespace::LocalLeaderboardsModel::GetScores(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>*, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetHighScore
int GlobalNamespace::LocalLeaderboardsModel::GetHighScore(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetHighScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHighScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetPositionInLeaderboard
int GlobalNamespace::LocalLeaderboardsModel::GetPositionInLeaderboard(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetPositionInLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionInLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType, score);
}
// Autogenerated method: LocalLeaderboardsModel.GetLastScorePosition
int GlobalNamespace::LocalLeaderboardsModel::GetLastScorePosition(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetLastScorePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastScorePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.ClearLastScorePosition
void GlobalNamespace::LocalLeaderboardsModel::ClearLastScorePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ClearLastScorePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLastScorePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.AddScore
void GlobalNamespace::LocalLeaderboardsModel::AddScore(::StringW leaderboardId, ::StringW playerName, int score, bool fullCombo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(fullCombo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId, playerName, score, fullCombo);
}
// Autogenerated method: LocalLeaderboardsModel.WillScoreGoIntoLeaderboard
bool GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard(::StringW leaderboardId, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoIntoLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaderboardId, score);
}
// Autogenerated method: LocalLeaderboardsModel.ClearLeaderboard
void GlobalNamespace::LocalLeaderboardsModel::ClearLeaderboard(::StringW leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ClearLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: LocalLeaderboardsModel.ClearAllLeaderboards
void GlobalNamespace::LocalLeaderboardsModel::ClearAllLeaderboards(bool deleteLeaderboardFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ClearAllLeaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllLeaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deleteLeaderboardFile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deleteLeaderboardFile);
}
// Autogenerated method: LocalLeaderboardsModel.OnEnable
void GlobalNamespace::LocalLeaderboardsModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/LeaderboardType
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocalLeaderboardsModel/LeaderboardType AllTime
::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_AllTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_AllTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>("", "LocalLeaderboardsModel/LeaderboardType", "AllTime"));
}
// Autogenerated static field setter
// Set static field: static public LocalLeaderboardsModel/LeaderboardType AllTime
void GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_AllTime(::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_AllTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/LeaderboardType", "AllTime", value));
}
// Autogenerated static field getter
// Get static field: static public LocalLeaderboardsModel/LeaderboardType Daily
::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_Daily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_Daily");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>("", "LocalLeaderboardsModel/LeaderboardType", "Daily"));
}
// Autogenerated static field setter
// Set static field: static public LocalLeaderboardsModel/LeaderboardType Daily
void GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_Daily(::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_Daily");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/LeaderboardType", "Daily", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 _score
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_score"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String _playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _fullCombo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__fullCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullCombo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 _timestamp
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timestamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String _leaderboardId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalLeaderboardsModel::LeaderboardData::dyn__leaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData::dyn__leaderboardId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<LocalLeaderboardsModel/ScoreData> _scores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>*& GlobalNamespace::LocalLeaderboardsModel::LeaderboardData::dyn__scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData::dyn__scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/SavedLeaderboardsData
#include "GlobalNamespace/LocalLeaderboardsModel_SavedLeaderboardsData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<LocalLeaderboardsModel/LeaderboardData> _leaderboardsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*& GlobalNamespace::LocalLeaderboardsModel::SavedLeaderboardsData::dyn__leaderboardsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::SavedLeaderboardsData::dyn__leaderboardsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass3_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass3_0.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass5_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass5_0.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass6_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass6_0.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt64> _oculusRequestIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint64_t>*& GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__oculusRequestIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__oculusRequestIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusRequestIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.AddOculusRequest
void GlobalNamespace::OculusPlatformLeaderboardsHandler::AddOculusRequest(::Oculus::Platform::Request* oculusRequest, ::GlobalNamespace::HMAsyncRequest* asyncRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::AddOculusRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOculusRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oculusRequest), ::il2cpp_utils::ExtractType(asyncRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oculusRequest, asyncRequest);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.CheckMessageForValidRequest
bool GlobalNamespace::OculusPlatformLeaderboardsHandler::CheckMessageForValidRequest(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::CheckMessageForValidRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckMessageForValidRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::OculusPlatformLeaderboardsHandler::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::StringW referencePlayerId, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::OculusPlatformLeaderboardsHandler::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler/<>c
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OculusPlatformLeaderboardsHandler/<>c <>9
::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c* GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c*>("", "OculusPlatformLeaderboardsHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OculusPlatformLeaderboardsHandler/<>c <>9
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_set_$$9(::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OculusPlatformLeaderboardsHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.LeaderboardEntryList> <>9__2_0
typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>::Callback* GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>::Callback*>("", "OculusPlatformLeaderboardsHandler/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.LeaderboardEntryList> <>9__2_0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_set_$$9__2_0(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>::Callback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OculusPlatformLeaderboardsHandler/<>c", "<>9__2_0", value)));
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c..cctor
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusPlatformLeaderboardsHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c.<.ctor>b__2_0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::$_ctor$b__2_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::<.ctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass3_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass3_0.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusPlatformLeaderboardsHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformLeaderboardsHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass3_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass3_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Request oculusRequest
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Request*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass3_0::dyn_oculusRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass3_0::dyn_oculusRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusRequest"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Request**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c__DisplayClass3_0.<AddOculusRequest>b__0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass3_0::$AddOculusRequest$b__0(::GlobalNamespace::HMAsyncRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass3_0::<AddOculusRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddOculusRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass5_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass5_0.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusPlatformLeaderboardsHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformLeaderboardsHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardsModel/GetScoresCompletionHandler completionHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass5_0::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass5_0::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String referencePlayerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass5_0::dyn_referencePlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass5_0::dyn_referencePlayerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referencePlayerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c__DisplayClass5_0.<GetScores>b__0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass5_0::$GetScores$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass5_0::<GetScores>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetScores>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass6_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass6_0.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusPlatformLeaderboardsHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformLeaderboardsHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardsModel/UploadScoreCompletionHandler completionHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c__DisplayClass6_0.<UploadScore>b__0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::$UploadScore$b__0(::Oculus::Platform::Message_1<bool>* messsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::<UploadScore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messsage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messsage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsHandler
#include "GlobalNamespace/PlatformLeaderboardsHandler.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformLeaderboardsHandler.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsHandler::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::StringW referencePlayerId, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsHandler::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsHandler.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsHandler::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsHandler::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformLeaderboardsHandler
#include "GlobalNamespace/TestPlatformLeaderboardsHandler.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformLeaderboardsHandler.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::TestPlatformLeaderboardsHandler::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::StringW referencePlayerId, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformLeaderboardsHandler::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: TestPlatformLeaderboardsHandler.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::TestPlatformLeaderboardsHandler::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformLeaderboardsHandler::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
// Including type: PlatformLeaderboardsModel/<Initialize>d__18
#include "GlobalNamespace/PlatformLeaderboardsModel_-Initialize-d__18.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: PlatformLeaderboardsHandler
#include "GlobalNamespace/PlatformLeaderboardsHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::PlatformLeaderboardsModel::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LeaderboardScoreUploader _leaderboardScoreUploader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader*& GlobalNamespace::PlatformLeaderboardsModel::dyn__leaderboardScoreUploader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__leaderboardScoreUploader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardScoreUploader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPlatformUserModel*& GlobalNamespace::PlatformLeaderboardsModel::dyn__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__platformUserModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformUserModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPlatformUserModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformLeaderboardsHandler _platformLeaderboardsHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsHandler*& GlobalNamespace::PlatformLeaderboardsModel::dyn__platformLeaderboardsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__platformLeaderboardsHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformLeaderboardsHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action allScoresDidUploadEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::PlatformLeaderboardsModel::dyn_allScoresDidUploadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn_allScoresDidUploadEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allScoresDidUploadEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlatformLeaderboardsModel/State _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel::State& GlobalNamespace::PlatformLeaderboardsModel::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformLeaderboardsModel::dyn__playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformLeaderboardsModel.get_initialized
bool GlobalNamespace::PlatformLeaderboardsModel::get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::get_initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardsModel.add_allScoresDidUploadEvent
void GlobalNamespace::PlatformLeaderboardsModel::add_allScoresDidUploadEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::add_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlatformLeaderboardsModel.remove_allScoresDidUploadEvent
void GlobalNamespace::PlatformLeaderboardsModel::remove_allScoresDidUploadEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::remove_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlatformLeaderboardsModel.Initialize
void GlobalNamespace::PlatformLeaderboardsModel::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardsModel.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.HandleAllScoresDidUpload
void GlobalNamespace::PlatformLeaderboardsModel::HandleAllScoresDidUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::HandleAllScoresDidUpload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAllScoresDidUpload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardsModel.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.GetScoresAroundPlayer
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::GetScoresAroundPlayer(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresAroundPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScoresAroundPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.GetFriendsScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::GetFriendsScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetFriendsScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendsScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.UploadScore
void GlobalNamespace::PlatformLeaderboardsModel::UploadScore(::GlobalNamespace::IDifficultyBeatmap* beatmap, int multipliedScore, int modifiedScore, int maxPossibleMultipliedScore, bool fullCombo, int goodCutsCount, int badCutsCount, int missedCount, int maxCombo, float energy, ::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(modifiedScore), ::il2cpp_utils::ExtractType(maxPossibleMultipliedScore), ::il2cpp_utils::ExtractType(fullCombo), ::il2cpp_utils::ExtractType(goodCutsCount), ::il2cpp_utils::ExtractType(badCutsCount), ::il2cpp_utils::ExtractType(missedCount), ::il2cpp_utils::ExtractType(maxCombo), ::il2cpp_utils::ExtractType(energy), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmap, multipliedScore, modifiedScore, maxPossibleMultipliedScore, fullCombo, goodCutsCount, badCutsCount, missedCount, maxCombo, energy, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/State
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/State NotInitialized
::GlobalNamespace::PlatformLeaderboardsModel::State GlobalNamespace::PlatformLeaderboardsModel::State::_get_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_get_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::State>("", "PlatformLeaderboardsModel/State", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/State NotInitialized
void GlobalNamespace::PlatformLeaderboardsModel::State::_set_NotInitialized(::GlobalNamespace::PlatformLeaderboardsModel::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_set_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/State", "NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/State Initializing
::GlobalNamespace::PlatformLeaderboardsModel::State GlobalNamespace::PlatformLeaderboardsModel::State::_get_Initializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_get_Initializing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::State>("", "PlatformLeaderboardsModel/State", "Initializing"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/State Initializing
void GlobalNamespace::PlatformLeaderboardsModel::State::_set_Initializing(::GlobalNamespace::PlatformLeaderboardsModel::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_set_Initializing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/State", "Initializing", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/State Initialized
::GlobalNamespace::PlatformLeaderboardsModel::State GlobalNamespace::PlatformLeaderboardsModel::State::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::State>("", "PlatformLeaderboardsModel/State", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/State Initialized
void GlobalNamespace::PlatformLeaderboardsModel::State::_set_Initialized(::GlobalNamespace::PlatformLeaderboardsModel::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/State", "Initialized", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/GetScoresResult Ok
::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult>("", "PlatformLeaderboardsModel/GetScoresResult", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/GetScoresResult Ok
void GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_set_Ok(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/GetScoresResult", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/GetScoresResult Failed
::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult>("", "PlatformLeaderboardsModel/GetScoresResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/GetScoresResult Failed
void GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_set_Failed(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/GetScoresResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/UploadScoreResult Ok
::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult>("", "PlatformLeaderboardsModel/UploadScoreResult", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/UploadScoreResult Ok
void GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_set_Ok(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/UploadScoreResult", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/UploadScoreResult Failed
::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult>("", "PlatformLeaderboardsModel/UploadScoreResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/UploadScoreResult Failed
void GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_set_Failed(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/UploadScoreResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/ScoresScope Global
::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_Global");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>("", "PlatformLeaderboardsModel/ScoresScope", "Global"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/ScoresScope Global
void GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_Global(::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_Global");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/ScoresScope", "Global", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/ScoresScope AroundPlayer
::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_AroundPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_AroundPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>("", "PlatformLeaderboardsModel/ScoresScope", "AroundPlayer"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/ScoresScope AroundPlayer
void GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_AroundPlayer(::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_AroundPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/ScoresScope", "AroundPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/ScoresScope Friends
::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>("", "PlatformLeaderboardsModel/ScoresScope", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/ScoresScope Friends
void GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_Friends(::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/ScoresScope", "Friends", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformLeaderboardsModel/GetScoresCompletionHandler.Invoke
void GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::Invoke(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult result, ::ArrayW<::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*> scores, int referencePlayerScoreIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(referencePlayerScoreIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, scores, referencePlayerScoreIndex);
}
// Autogenerated method: PlatformLeaderboardsModel/GetScoresCompletionHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::BeginInvoke(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult result, ::ArrayW<::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*> scores, int referencePlayerScoreIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(referencePlayerScoreIndex), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, result, scores, referencePlayerScoreIndex, callback, object);
}
// Autogenerated method: PlatformLeaderboardsModel/GetScoresCompletionHandler.EndInvoke
void GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformLeaderboardsModel/UploadScoreCompletionHandler.Invoke
void GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::Invoke(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: PlatformLeaderboardsModel/UploadScoreCompletionHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::BeginInvoke(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, result, callback, object);
}
// Autogenerated method: PlatformLeaderboardsModel/UploadScoreCompletionHandler.EndInvoke
void GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 score
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "score"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 rank
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_rank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/<Initialize>d__18
#include "GlobalNamespace/PlatformLeaderboardsModel_-Initialize-d__18.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardsModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel*& GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>& GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformLeaderboardsModel/<Initialize>d__18.MoveNext
void GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardsModel/<Initialize>d__18.SetStateMachine
void GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCompletionResultsHelper
#include "GlobalNamespace/LevelCompletionResultsHelper.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapObjectExecutionRating
#include "GlobalNamespace/BeatmapObjectExecutionRating.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCompletionResultsHelper.Create
::GlobalNamespace::LevelCompletionResults* GlobalNamespace::LevelCompletionResultsHelper::Create(::GlobalNamespace::IReadonlyBeatmapData* beatmapData, ::ArrayW<::GlobalNamespace::BeatmapObjectExecutionRating*> beatmapObjectExecutionRatings, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel, int multipliedScore, int modifiedScore, int maxCombo, ::ArrayW<float> saberActivityValues, float leftSaberMovementDistance, float rightSaberMovementDistance, ::ArrayW<float> handActivityValues, float leftHandMovementDistance, float rightHandMovementDistance, ::GlobalNamespace::LevelCompletionResults::LevelEndStateType levelEndStateType, ::GlobalNamespace::LevelCompletionResults::LevelEndAction levelEndAction, float energy, float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResultsHelper::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelCompletionResultsHelper", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(beatmapObjectExecutionRatings), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(gameplayModifiersModel), ::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(modifiedScore), ::il2cpp_utils::ExtractType(maxCombo), ::il2cpp_utils::ExtractType(saberActivityValues), ::il2cpp_utils::ExtractType(leftSaberMovementDistance), ::il2cpp_utils::ExtractType(rightSaberMovementDistance), ::il2cpp_utils::ExtractType(handActivityValues), ::il2cpp_utils::ExtractType(leftHandMovementDistance), ::il2cpp_utils::ExtractType(rightHandMovementDistance), ::il2cpp_utils::ExtractType(levelEndStateType), ::il2cpp_utils::ExtractType(levelEndAction), ::il2cpp_utils::ExtractType(energy), ::il2cpp_utils::ExtractType(songTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LevelCompletionResults*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, beatmapObjectExecutionRatings, gameplayModifiers, gameplayModifiersModel, multipliedScore, modifiedScore, maxCombo, saberActivityValues, leftSaberMovementDistance, rightSaberMovementDistance, handActivityValues, leftHandMovementDistance, rightHandMovementDistance, levelEndStateType, levelEndAction, energy, songTime);
}
// Autogenerated method: LevelCompletionResultsHelper.ProcessScore
void GlobalNamespace::LevelCompletionResultsHelper::ProcessScore(::GlobalNamespace::PlayerData* playerData, ::GlobalNamespace::PlayerLevelStatsData* playerLevelStats, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IReadonlyBeatmapData* transformedBeatmapData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::PlatformLeaderboardsModel* platformLeaderboardsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResultsHelper::ProcessScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelCompletionResultsHelper", "ProcessScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerData), ::il2cpp_utils::ExtractType(playerLevelStats), ::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(transformedBeatmapData), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(platformLeaderboardsModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerData, playerLevelStats, levelCompletionResults, transformedBeatmapData, difficultyBeatmap, platformLeaderboardsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelMissionParser
#include "GlobalNamespace/LevelMissionParser.hpp"
// Including type: LevelMissionParser/ParserFunction
#include "GlobalNamespace/LevelMissionParser_ParserFunction.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,LevelMissionParser/ParserFunction> _functions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LevelMissionParser::ParserFunction*>*& GlobalNamespace::LevelMissionParser::dyn__functions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::dyn__functions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_functions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LevelMissionParser::ParserFunction*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelMissionParser.AddFunction
void GlobalNamespace::LevelMissionParser::AddFunction(::StringW name, ::GlobalNamespace::LevelMissionParser::ParserFunction* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::AddFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(function)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, function);
}
// Autogenerated method: LevelMissionParser.Parse
bool GlobalNamespace::LevelMissionParser::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated method: LevelMissionParser.Parse
bool GlobalNamespace::LevelMissionParser::Parse(::StringW s, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, start, length);
}
// Autogenerated method: LevelMissionParser.ParseFunction
bool GlobalNamespace::LevelMissionParser::ParseFunction(::StringW s, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::ParseFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, start, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelMissionParser/ParserFunction
#include "GlobalNamespace/LevelMissionParser_ParserFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelMissionParser/ParserFunction.Invoke
bool GlobalNamespace::LevelMissionParser::ParserFunction::Invoke(::ArrayW<float> functionParams, int paramCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::ParserFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(functionParams), ::il2cpp_utils::ExtractType(paramCount)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, functionParams, paramCount);
}
// Autogenerated method: LevelMissionParser/ParserFunction.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LevelMissionParser::ParserFunction::BeginInvoke(::ArrayW<float> functionParams, int paramCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::ParserFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(functionParams), ::il2cpp_utils::ExtractType(paramCount), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, functionParams, paramCount, callback, object);
}
// Autogenerated method: LevelMissionParser/ParserFunction.EndInvoke
bool GlobalNamespace::LevelMissionParser::ParserFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::ParserFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _ignore360MovementCharacteristics
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__ignore360MovementCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__ignore360MovementCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignore360MovementCharacteristics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO[] _beatmapCharacteristics
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>& GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__beatmapCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__beatmapCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristics"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO[] _no360beatmapCharacteristics
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>& GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__no360beatmapCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__no360beatmapCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_no360beatmapCharacteristics"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.get_beatmapCharacteristics
::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::BeatmapCharacteristicCollectionSO::get_beatmapCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::get_beatmapCharacteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.GetBeatmapCharacteristicBySerializedName
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicCollectionSO::GetBeatmapCharacteristicBySerializedName(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::GetBeatmapCharacteristicBySerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapCharacteristicBySerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.ContainsBeatmapCharacteristic
bool GlobalNamespace::BeatmapCharacteristicCollectionSO::ContainsBeatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::ContainsBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.InitData
void GlobalNamespace::BeatmapCharacteristicCollectionSO::InitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::InitData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.GetCharacteristicsWithout360Movement
::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::BeatmapCharacteristicCollectionSO::GetCharacteristicsWithout360Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::GetCharacteristicsWithout360Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacteristicsWithout360Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.OnEnable
void GlobalNamespace::BeatmapCharacteristicCollectionSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _icon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::BeatmapCharacteristicSO::dyn__icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_icon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _descriptionLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicSO::dyn__descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__descriptionLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_descriptionLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _characteristicNameLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicSO::dyn__characteristicNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__characteristicNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characteristicNameLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _serializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicSO::dyn__serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _compoundIdPartName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicSO::dyn__compoundIdPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__compoundIdPartName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compoundIdPartName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sortingOrder
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapCharacteristicSO::dyn__sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__sortingOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortingOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _containsRotationEvents
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapCharacteristicSO::dyn__containsRotationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__containsRotationEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_containsRotationEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _requires360Movement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapCharacteristicSO::dyn__requires360Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__requires360Movement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requires360Movement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfColors
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapCharacteristicSO::dyn__numberOfColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__numberOfColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfColors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicSO.get_icon
::UnityEngine::Sprite* GlobalNamespace::BeatmapCharacteristicSO::get_icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_descriptionLocalizationKey
::StringW GlobalNamespace::BeatmapCharacteristicSO::get_descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_descriptionLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_descriptionLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_characteristicNameLocalizationKey
::StringW GlobalNamespace::BeatmapCharacteristicSO::get_characteristicNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_characteristicNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characteristicNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_serializedName
::StringW GlobalNamespace::BeatmapCharacteristicSO::get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_serializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_compoundIdPartName
::StringW GlobalNamespace::BeatmapCharacteristicSO::get_compoundIdPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_compoundIdPartName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compoundIdPartName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_sortingOrder
int GlobalNamespace::BeatmapCharacteristicSO::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_containsRotationEvents
bool GlobalNamespace::BeatmapCharacteristicSO::get_containsRotationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_containsRotationEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containsRotationEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_requires360Movement
bool GlobalNamespace::BeatmapCharacteristicSO::get_requires360Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_requires360Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requires360Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_numberOfColors
int GlobalNamespace::BeatmapCharacteristicSO::get_numberOfColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_numberOfColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviewDifficultyBeatmapSetExtensions
#include "GlobalNamespace/PreviewDifficultyBeatmapSetExtensions.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewDifficultyBeatmapSetExtensions.GetBeatmapCharacteristics
::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::PreviewDifficultyBeatmapSetExtensions::GetBeatmapCharacteristics(::ArrayW<::GlobalNamespace::PreviewDifficultyBeatmapSet*> previewDifficultyBeatmapSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviewDifficultyBeatmapSetExtensions::GetBeatmapCharacteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PreviewDifficultyBeatmapSetExtensions", "GetBeatmapCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewDifficultyBeatmapSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previewDifficultyBeatmapSet);
}
// Autogenerated method: PreviewDifficultyBeatmapSetExtensions.GetPreviewDifficultyBeatmapSetWithout360Movement
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::PreviewDifficultyBeatmapSetExtensions::GetPreviewDifficultyBeatmapSetWithout360Movement(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>* previewDifficultyBeatmapSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviewDifficultyBeatmapSetExtensions::GetPreviewDifficultyBeatmapSetWithout360Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PreviewDifficultyBeatmapSetExtensions", "GetPreviewDifficultyBeatmapSetWithout360Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewDifficultyBeatmapSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previewDifficultyBeatmapSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ISortedList`1
#include "GlobalNamespace/ISortedList_1.hpp"
// Including type: BeatmapDataSortedListForTypes`1
#include "GlobalNamespace/BeatmapDataSortedListForTypes_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapObjectsInTimeRowProcessor
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <cuttableNotesCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapData::dyn_$cuttableNotesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_$cuttableNotesCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cuttableNotesCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <obstaclesCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapData::dyn_$obstaclesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_$obstaclesCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<obstaclesCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <bombsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapData::dyn_$bombsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_$bombsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bombsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<BeatmapEventData,System.Collections.Generic.LinkedListNode`1<BeatmapDataItem>> beatmapEventDataWasInsertedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>*& GlobalNamespace::BeatmapData::dyn_beatmapEventDataWasInsertedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_beatmapEventDataWasInsertedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapEventDataWasInsertedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<BeatmapEventData,System.Collections.Generic.LinkedListNode`1<BeatmapDataItem>> beatmapEventDataWillBeRemovedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>*& GlobalNamespace::BeatmapData::dyn_beatmapEventDataWillBeRemovedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_beatmapEventDataWillBeRemovedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapEventDataWillBeRemovedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapEventData> beatmapEventDataWasRemovedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::BeatmapEventData*>*& GlobalNamespace::BeatmapData::dyn_beatmapEventDataWasRemovedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_beatmapEventDataWasRemovedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapEventDataWasRemovedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BeatmapEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ISortedList`1<BeatmapDataItem> _allBeatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ISortedList_1<::GlobalNamespace::BeatmapDataItem*>*& GlobalNamespace::BeatmapData::dyn__allBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__allBeatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allBeatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ISortedList_1<::GlobalNamespace::BeatmapDataItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDataSortedListForTypes`1<BeatmapDataItem> _beatmapDataItemsPerType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSortedListForTypes_1<::GlobalNamespace::BeatmapDataItem*>*& GlobalNamespace::BeatmapData::dyn__beatmapDataItemsPerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__beatmapDataItemsPerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataItemsPerType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSortedListForTypes_1<::GlobalNamespace::BeatmapDataItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _numberOfLines
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapData::dyn__numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__numberOfLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _specialBasicBeatmapEventKeywords
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::BeatmapData::dyn__specialBasicBeatmapEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__specialBasicBeatmapEventKeywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialBasicBeatmapEventKeywords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectsInTimeRowProcessor _beatmapObjectsInTimeRowProcessor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapObjectsInTimeRowProcessor*& GlobalNamespace::BeatmapData::dyn__beatmapObjectsInTimeRowProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__beatmapObjectsInTimeRowProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectsInTimeRowProcessor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectsInTimeRowProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevAddedBeatmapObjectDataTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapData::dyn__prevAddedBeatmapObjectDataTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__prevAddedBeatmapObjectDataTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevAddedBeatmapObjectDataTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isCreatingFilteredCopy
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapData::dyn__isCreatingFilteredCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__isCreatingFilteredCopy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCreatingFilteredCopy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapData.get_allBeatmapDataItems
::System::Collections::Generic::LinkedList_1<::GlobalNamespace::BeatmapDataItem*>* GlobalNamespace::BeatmapData::get_allBeatmapDataItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_allBeatmapDataItems");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allBeatmapDataItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedList_1<::GlobalNamespace::BeatmapDataItem*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.get_numberOfLines
int GlobalNamespace::BeatmapData::get_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_numberOfLines");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.get_cuttableNotesCount
int GlobalNamespace::BeatmapData::get_cuttableNotesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_cuttableNotesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cuttableNotesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.set_cuttableNotesCount
void GlobalNamespace::BeatmapData::set_cuttableNotesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::set_cuttableNotesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cuttableNotesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.get_obstaclesCount
int GlobalNamespace::BeatmapData::get_obstaclesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_obstaclesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.set_obstaclesCount
void GlobalNamespace::BeatmapData::set_obstaclesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::set_obstaclesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.get_bombsCount
int GlobalNamespace::BeatmapData::get_bombsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_bombsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.set_bombsCount
void GlobalNamespace::BeatmapData::set_bombsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::set_bombsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.get_spawnRotationEventsCount
int GlobalNamespace::BeatmapData::get_spawnRotationEventsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_spawnRotationEventsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spawnRotationEventsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.get_specialBasicBeatmapEventKeywords
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::BeatmapData::get_specialBasicBeatmapEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_specialBasicBeatmapEventKeywords");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specialBasicBeatmapEventKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.add_beatmapEventDataWasInsertedEvent
void GlobalNamespace::BeatmapData::add_beatmapEventDataWasInsertedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::add_beatmapEventDataWasInsertedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWasInsertedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.remove_beatmapEventDataWasInsertedEvent
void GlobalNamespace::BeatmapData::remove_beatmapEventDataWasInsertedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::remove_beatmapEventDataWasInsertedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWasInsertedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.add_beatmapEventDataWillBeRemovedEvent
void GlobalNamespace::BeatmapData::add_beatmapEventDataWillBeRemovedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::add_beatmapEventDataWillBeRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWillBeRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.remove_beatmapEventDataWillBeRemovedEvent
void GlobalNamespace::BeatmapData::remove_beatmapEventDataWillBeRemovedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::remove_beatmapEventDataWillBeRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWillBeRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.add_beatmapEventDataWasRemovedEvent
void GlobalNamespace::BeatmapData::add_beatmapEventDataWasRemovedEvent(::System::Action_1<::GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::add_beatmapEventDataWasRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWasRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.remove_beatmapEventDataWasRemovedEvent
void GlobalNamespace::BeatmapData::remove_beatmapEventDataWasRemovedEvent(::System::Action_1<::GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::remove_beatmapEventDataWasRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWasRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.AddBeatmapObjectData
void GlobalNamespace::BeatmapData::AddBeatmapObjectData(::GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::AddBeatmapObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBeatmapObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated method: BeatmapData.InsertBeatmapEventData
void GlobalNamespace::BeatmapData::InsertBeatmapEventData(::GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::InsertBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertBeatmapEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapData.RemoveBeatmapEventData
void GlobalNamespace::BeatmapData::RemoveBeatmapEventData(::GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::RemoveBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBeatmapEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapData.AddSpecialBasicBeatmapEventKeyword
void GlobalNamespace::BeatmapData::AddSpecialBasicBeatmapEventKeyword(::StringW specialBasicBeatmapEventKeyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::AddSpecialBasicBeatmapEventKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpecialBasicBeatmapEventKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specialBasicBeatmapEventKeyword)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, specialBasicBeatmapEventKeyword);
}
// Autogenerated method: BeatmapData.Clear
void GlobalNamespace::BeatmapData::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.ProcessRemainingData
void GlobalNamespace::BeatmapData::ProcessRemainingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::ProcessRemainingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRemainingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.GetCopy
::GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.GetFilteredCopy
::GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapData::GetFilteredCopy(::System::Func_2<::GlobalNamespace::BeatmapDataItem*, ::GlobalNamespace::BeatmapDataItem*>* processDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::GetFilteredCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFilteredCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(this, ___internal__method, processDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataBasicInfo
#include "GlobalNamespace/BeatmapDataBasicInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <numberOfLines>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataBasicInfo::dyn_$numberOfLines$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$numberOfLines$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numberOfLines>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <cuttableNotesCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataBasicInfo::dyn_$cuttableNotesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$cuttableNotesCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cuttableNotesCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <obstaclesCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataBasicInfo::dyn_$obstaclesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$obstaclesCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<obstaclesCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <bombsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataBasicInfo::dyn_$bombsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$bombsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bombsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IEnumerable`1<System.String> <specialBasicBeatmapEventKeywords>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& GlobalNamespace::BeatmapDataBasicInfo::dyn_$specialBasicBeatmapEventKeywords$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$specialBasicBeatmapEventKeywords$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<specialBasicBeatmapEventKeywords>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataBasicInfo.get_numberOfLines
int GlobalNamespace::BeatmapDataBasicInfo::get_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_numberOfLines");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataBasicInfo.get_cuttableNotesCount
int GlobalNamespace::BeatmapDataBasicInfo::get_cuttableNotesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_cuttableNotesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cuttableNotesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataBasicInfo.get_obstaclesCount
int GlobalNamespace::BeatmapDataBasicInfo::get_obstaclesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_obstaclesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataBasicInfo.get_bombsCount
int GlobalNamespace::BeatmapDataBasicInfo::get_bombsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_bombsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataBasicInfo.get_specialBasicBeatmapEventKeywords
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::BeatmapDataBasicInfo::get_specialBasicBeatmapEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_specialBasicBeatmapEventKeywords");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specialBasicBeatmapEventKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO
#include "GlobalNamespace/BeatmapDataSO.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass1_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass1_0.hpp"
// Including type: BeatmapDataSO/<GetBeatmapDataBasicInfoAsync>d__1
#include "GlobalNamespace/BeatmapDataSO_-GetBeatmapDataBasicInfoAsync-d__1.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass2_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass2_0.hpp"
// Including type: BeatmapDataSO/<GetBeatmapDataAsync>d__2
#include "GlobalNamespace/BeatmapDataSO_-GetBeatmapDataAsync-d__2.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass5_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass5_0.hpp"
// Including type: BeatmapDataSO/<LoadBeatmapSaveDataAsync>d__5
#include "GlobalNamespace/BeatmapDataSO_-LoadBeatmapSaveDataAsync-d__5.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass6_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass6_0.hpp"
// Including type: BeatmapDataSO/<RunTaskAndLogException>d__6
#include "GlobalNamespace/BeatmapDataSO_-RunTaskAndLogException-d__6.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String _jsonData
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapDataSO::dyn__jsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::dyn__jsonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jsonData"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapDataBasicInfo _beatmapDataBasic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapDataBasicInfo*& GlobalNamespace::BeatmapDataSO::dyn__beatmapDataBasic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::dyn__beatmapDataBasic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataBasic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapDataBasicInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO.GetBeatmapDataBasicInfoAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>* GlobalNamespace::BeatmapDataSO::GetBeatmapDataBasicInfoAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::GetBeatmapDataBasicInfoAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataBasicInfoAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO.GetBeatmapDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>* GlobalNamespace::BeatmapDataSO::GetBeatmapDataAsync(::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, float beatsPerMinute, bool loadingForDesignatedEnvironment, ::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::GetBeatmapDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatsPerMinute), ::il2cpp_utils::ExtractType(loadingForDesignatedEnvironment), ::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>*, false>(this, ___internal__method, beatmapDifficulty, beatsPerMinute, loadingForDesignatedEnvironment, environmentInfo, playerSpecificSettings);
}
// Autogenerated method: BeatmapDataSO.SetJsonData
void GlobalNamespace::BeatmapDataSO::SetJsonData(::StringW jsonData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::SetJsonData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJsonData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonData);
}
// Autogenerated method: BeatmapDataSO.LoadBeatmapSaveDataAsync
::System::Threading::Tasks::Task_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>* GlobalNamespace::BeatmapDataSO::LoadBeatmapSaveDataAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::LoadBeatmapSaveDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBeatmapSaveDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO.RunTaskAndLogException
::System::Threading::Tasks::Task* GlobalNamespace::BeatmapDataSO::RunTaskAndLogException(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::RunTaskAndLogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunTaskAndLogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, action);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<>c__DisplayClass1_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass1_0.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IBeatmapDataBasicInfo beatmapDataBasicInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapDataBasicInfo*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::dyn_beatmapDataBasicInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::dyn_beatmapDataBasicInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDataBasicInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapDataBasicInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapSaveDataVersion3.BeatmapSaveData beatmapSaveData
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::dyn_beatmapSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::dyn_beatmapSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapSaveData"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<>c__DisplayClass1_0.<GetBeatmapDataBasicInfoAsync>b__0
void GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::$GetBeatmapDataBasicInfoAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::<GetBeatmapDataBasicInfoAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetBeatmapDataBasicInfoAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<GetBeatmapDataBasicInfoAsync>d__1
#include "GlobalNamespace/BeatmapDataSO_-GetBeatmapDataBasicInfoAsync-d__1.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass1_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass1_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapDataBasicInfo> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataSO/<>c__DisplayClass1_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapSaveDataVersion3.BeatmapSaveData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<GetBeatmapDataBasicInfoAsync>d__1.MoveNext
void GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO/<GetBeatmapDataBasicInfoAsync>d__1.SetStateMachine
void GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<>c__DisplayClass2_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass2_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IReadonlyBeatmapData readonlyBeatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_readonlyBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_readonlyBeatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readonlyBeatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapSaveDataVersion3.BeatmapSaveData beatmapSaveData
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatmapSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatmapSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapSaveData"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single beatsPerMinute
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean loadingForDesignatedEnvironment
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_loadingForDesignatedEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_loadingForDesignatedEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingForDesignatedEnvironment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<>c__DisplayClass2_0.<GetBeatmapDataAsync>b__0
void GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::$GetBeatmapDataAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::<GetBeatmapDataAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetBeatmapDataAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<GetBeatmapDataAsync>d__2
#include "GlobalNamespace/BeatmapDataSO_-GetBeatmapDataAsync-d__2.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass2_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass2_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IReadonlyBeatmapData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_beatmapDifficulty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single beatsPerMinute
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_beatsPerMinute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean loadingForDesignatedEnvironment
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_loadingForDesignatedEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_loadingForDesignatedEnvironment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingForDesignatedEnvironment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_environmentInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_playerSpecificSettings");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataSO/<>c__DisplayClass2_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapSaveDataVersion3.BeatmapSaveData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<GetBeatmapDataAsync>d__2.MoveNext
void GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO/<GetBeatmapDataAsync>d__2.SetStateMachine
void GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<>c__DisplayClass5_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass5_0.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapSaveDataVersion3.BeatmapSaveData beatmapSaveData
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::dyn_beatmapSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::dyn_beatmapSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapSaveData"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<>c__DisplayClass5_0.<LoadBeatmapSaveDataAsync>b__0
void GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::$LoadBeatmapSaveDataAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::<LoadBeatmapSaveDataAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadBeatmapSaveDataAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<LoadBeatmapSaveDataAsync>d__5
#include "GlobalNamespace/BeatmapDataSO_-LoadBeatmapSaveDataAsync-d__5.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass5_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapSaveDataVersion3.BeatmapSaveData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataSO/<>c__DisplayClass5_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0*& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<LoadBeatmapSaveDataAsync>d__5.MoveNext
void GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO/<LoadBeatmapSaveDataAsync>d__5.SetStateMachine
void GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<>c__DisplayClass6_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass6_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass6_0::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass6_0::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<>c__DisplayClass6_0.<RunTaskAndLogException>b__0
void GlobalNamespace::BeatmapDataSO::$$c__DisplayClass6_0::$RunTaskAndLogException$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass6_0::<RunTaskAndLogException>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunTaskAndLogException>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<RunTaskAndLogException>d__6
#include "GlobalNamespace/BeatmapDataSO_-RunTaskAndLogException-d__6.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_action");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<RunTaskAndLogException>d__6.MoveNext
void GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO/<RunTaskAndLogException>d__6.SetStateMachine
void GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatToTimeConvertor
#include "GlobalNamespace/IBeatToTimeConvertor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatToTimeConvertor.ConvertBeatToTime
float GlobalNamespace::IBeatToTimeConvertor::ConvertBeatToTime(float beat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatToTimeConvertor::ConvertBeatToTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertBeatToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beat)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, beat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapDataBasicInfo.get_numberOfLines
int GlobalNamespace::IBeatmapDataBasicInfo::get_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_numberOfLines");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapDataBasicInfo.get_cuttableNotesCount
int GlobalNamespace::IBeatmapDataBasicInfo::get_cuttableNotesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_cuttableNotesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cuttableNotesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapDataBasicInfo.get_obstaclesCount
int GlobalNamespace::IBeatmapDataBasicInfo::get_obstaclesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_obstaclesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapDataBasicInfo.get_bombsCount
int GlobalNamespace::IBeatmapDataBasicInfo::get_bombsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_bombsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapDataBasicInfo.get_specialBasicBeatmapEventKeywords
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::IBeatmapDataBasicInfo::get_specialBasicBeatmapEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_specialBasicBeatmapEventKeywords");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specialBasicBeatmapEventKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IReadonlyBeatmapData.get_allBeatmapDataItems
::System::Collections::Generic::LinkedList_1<::GlobalNamespace::BeatmapDataItem*>* GlobalNamespace::IReadonlyBeatmapData::get_allBeatmapDataItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::get_allBeatmapDataItems");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allBeatmapDataItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedList_1<::GlobalNamespace::BeatmapDataItem*>*, false>(this, ___internal__method);
}
// Autogenerated method: IReadonlyBeatmapData.get_spawnRotationEventsCount
int GlobalNamespace::IReadonlyBeatmapData::get_spawnRotationEventsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::get_spawnRotationEventsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spawnRotationEventsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IReadonlyBeatmapData.add_beatmapEventDataWasInsertedEvent
void GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWasInsertedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWasInsertedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWasInsertedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.remove_beatmapEventDataWasInsertedEvent
void GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWasInsertedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWasInsertedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWasInsertedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.add_beatmapEventDataWillBeRemovedEvent
void GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWillBeRemovedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWillBeRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWillBeRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.remove_beatmapEventDataWillBeRemovedEvent
void GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWillBeRemovedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWillBeRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWillBeRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.add_beatmapEventDataWasRemovedEvent
void GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWasRemovedEvent(::System::Action_1<::GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWasRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWasRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.remove_beatmapEventDataWasRemovedEvent
void GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWasRemovedEvent(::System::Action_1<::GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWasRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWasRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.GetCopy
::GlobalNamespace::BeatmapData* GlobalNamespace::IReadonlyBeatmapData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated method: IReadonlyBeatmapData.GetFilteredCopy
::GlobalNamespace::BeatmapData* GlobalNamespace::IReadonlyBeatmapData::GetFilteredCopy(::System::Func_2<::GlobalNamespace::BeatmapDataItem*, ::GlobalNamespace::BeatmapDataItem*>* processDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::GetFilteredCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFilteredCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(this, ___internal__method, processDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader
#include "GlobalNamespace/BeatmapDataLoader.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
// Including type: BeatmapDataLoader/BasicEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_BasicEventConvertor.hpp"
// Including type: BeatmapDataLoader/BeatmapDataItemConvertor`3
#include "GlobalNamespace/BeatmapDataLoader_BeatmapDataItemConvertor_3.hpp"
// Including type: BeatmapDataLoader/BombNoteConvertor
#include "GlobalNamespace/BeatmapDataLoader_BombNoteConvertor.hpp"
// Including type: BeatmapDataLoader/BpmEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_BpmEventConvertor.hpp"
// Including type: BeatmapDataLoader/ColorBoostEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_ColorBoostEventConvertor.hpp"
// Including type: BeatmapDataLoader/ColorNoteConvertor
#include "GlobalNamespace/BeatmapDataLoader_ColorNoteConvertor.hpp"
// Including type: BeatmapDataLoader/BeatmapEventDataBoxDistributionParamTypeConvertor
#include "GlobalNamespace/BeatmapDataLoader_BeatmapEventDataBoxDistributionParamTypeConvertor.hpp"
// Including type: BeatmapDataLoader/EventBoxGroupConvertor
#include "GlobalNamespace/BeatmapDataLoader_EventBoxGroupConvertor.hpp"
// Including type: BeatmapDataLoader/IndexFilterConvertor
#include "GlobalNamespace/BeatmapDataLoader_IndexFilterConvertor.hpp"
// Including type: BeatmapDataLoader/LightColorEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightColorEventBoxConvertor.hpp"
// Including type: BeatmapDataLoader/LightColoBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightColoBaseDataConvertor.hpp"
// Including type: BeatmapDataLoader/LightRotationEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightRotationEventBoxConvertor.hpp"
// Including type: BeatmapDataLoader/LightRotationBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightRotationBaseDataConvertor.hpp"
// Including type: BeatmapDataLoader/ObstacleConvertor
#include "GlobalNamespace/BeatmapDataLoader_ObstacleConvertor.hpp"
// Including type: BeatmapDataLoader/RotationEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_RotationEventConvertor.hpp"
// Including type: BeatmapDataLoader/SliderConvertor
#include "GlobalNamespace/BeatmapDataLoader_SliderConvertor.hpp"
// Including type: BeatmapDataLoader/BurstSliderConvertor
#include "GlobalNamespace/BeatmapDataLoader_BurstSliderConvertor.hpp"
// Including type: BeatmapDataLoader/WaypointConvertor
#include "GlobalNamespace/BeatmapDataLoader_WaypointConvertor.hpp"
// Including type: BeatmapDataLoader/SpecialEventsFilter
#include "GlobalNamespace/BeatmapDataLoader_SpecialEventsFilter.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: EnvironmentKeywords
#include "GlobalNamespace/EnvironmentKeywords.hpp"
// Including type: EnvironmentLightGroups
#include "GlobalNamespace/EnvironmentLightGroups.hpp"
// Including type: DefaultEnvironmentEvents
#include "GlobalNamespace/DefaultEnvironmentEvents.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: BeatmapDataBasicInfo
#include "GlobalNamespace/BeatmapDataBasicInfo.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: BeatmapEventTransitionType
#include "GlobalNamespace/BeatmapEventTransitionType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_NoteColorType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EnvironmentColorType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_TransitionType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis
#include "BeatmapSaveDataVersion3/BeatmapSaveData_Axis.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_SliderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultNumberOfLines
int GlobalNamespace::BeatmapDataLoader::_get_kDefaultNumberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::_get_kDefaultNumberOfLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapDataLoader", "kDefaultNumberOfLines"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultNumberOfLines
void GlobalNamespace::BeatmapDataLoader::_set_kDefaultNumberOfLines(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::_set_kDefaultNumberOfLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataLoader", "kDefaultNumberOfLines", value));
}
// Autogenerated method: BeatmapDataLoader.GetBeatmapDataFromBeatmapSaveData
::GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapDataLoader::GetBeatmapDataFromBeatmapSaveData(::BeatmapSaveDataVersion3::BeatmapSaveData* beatmapSaveData, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, float startBpm, bool loadingForDesignatedEnvironment, ::GlobalNamespace::EnvironmentKeywords* environmentKeywords, ::GlobalNamespace::EnvironmentLightGroups* environmentLightGroups, ::GlobalNamespace::DefaultEnvironmentEvents* defaultEnvironmentEvents, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::GetBeatmapDataFromBeatmapSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "GetBeatmapDataFromBeatmapSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(startBpm), ::il2cpp_utils::ExtractType(loadingForDesignatedEnvironment), ::il2cpp_utils::ExtractType(environmentKeywords), ::il2cpp_utils::ExtractType(environmentLightGroups), ::il2cpp_utils::ExtractType(defaultEnvironmentEvents), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData, beatmapDifficulty, startBpm, loadingForDesignatedEnvironment, environmentKeywords, environmentLightGroups, defaultEnvironmentEvents, playerSpecificSettings);
}
// Autogenerated method: BeatmapDataLoader.GetBeatmapDataBasicInfoFromSaveData
::GlobalNamespace::BeatmapDataBasicInfo* GlobalNamespace::BeatmapDataLoader::GetBeatmapDataBasicInfoFromSaveData(::BeatmapSaveDataVersion3::BeatmapSaveData* beatmapSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::GetBeatmapDataBasicInfoFromSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "GetBeatmapDataBasicInfoFromSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataBasicInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData);
}
// Autogenerated method: BeatmapDataLoader.GetBeatmapDataFromSaveData
::GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapDataLoader::GetBeatmapDataFromSaveData(::BeatmapSaveDataVersion3::BeatmapSaveData* beatmapSaveData, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, float startBpm, bool loadingForDesignatedEnvironment, ::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::GetBeatmapDataFromSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "GetBeatmapDataFromSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(startBpm), ::il2cpp_utils::ExtractType(loadingForDesignatedEnvironment), ::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData, beatmapDifficulty, startBpm, loadingForDesignatedEnvironment, environmentInfo, playerSpecificSettings);
}
// Autogenerated method: BeatmapDataLoader.ConvertColorType
::GlobalNamespace::ColorType GlobalNamespace::BeatmapDataLoader::ConvertColorType(::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType noteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertColorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertColorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, noteType);
}
// Autogenerated method: BeatmapDataLoader.ConvertColorType
::GlobalNamespace::EnvironmentColorType GlobalNamespace::BeatmapDataLoader::ConvertColorType(::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType environmentColorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertColorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertColorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentColorType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, environmentColorType);
}
// Autogenerated method: BeatmapDataLoader.ConvertBeatmapEventTransitionType
::GlobalNamespace::BeatmapEventTransitionType GlobalNamespace::BeatmapDataLoader::ConvertBeatmapEventTransitionType(::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertBeatmapEventTransitionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertBeatmapEventTransitionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventTransitionType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transitionType);
}
// Autogenerated method: BeatmapDataLoader.ConvertAxis
::GlobalNamespace::LightRotationBeatmapEventData::Axis GlobalNamespace::BeatmapDataLoader::ConvertAxis(::BeatmapSaveDataVersion3::BeatmapSaveData::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightRotationBeatmapEventData::Axis, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis);
}
// Autogenerated method: BeatmapDataLoader.ConvertEaseType
::GlobalNamespace::EaseType GlobalNamespace::BeatmapDataLoader::ConvertEaseType(::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType easeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertEaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertEaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(easeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EaseType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, easeType);
}
// Autogenerated method: BeatmapDataLoader.ConvertNoteLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::BeatmapDataLoader::ConvertNoteLineLayer(int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertNoteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertNoteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer);
}
// Autogenerated method: BeatmapDataLoader.ConvertSliderType
::GlobalNamespace::SliderData::Type GlobalNamespace::BeatmapDataLoader::ConvertSliderType(::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType sliderType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertSliderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertSliderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData::Type, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sliderType);
}
// Autogenerated method: BeatmapDataLoader.ConvertRotationOrientation
::GlobalNamespace::LightRotationDirection GlobalNamespace::BeatmapDataLoader::ConvertRotationOrientation(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection rotationDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertRotationOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertRotationOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightRotationDirection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotationDirection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BpmChangeEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BpmChangeEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatmapDataLoader/BpmTimeProcessor/BpmChangeData> _bpmChangeDataList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData>*& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::dyn__bpmChangeDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::dyn__bpmChangeDataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bpmChangeDataList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentBpmChangesDataIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::dyn_currentBpmChangesDataIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::dyn_currentBpmChangesDataIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentBpmChangesDataIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/BpmTimeProcessor.ConvertBeatToTime
float GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::ConvertBeatToTime(float beat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::ConvertBeatToTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertBeatToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beat)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, beat);
}
// Autogenerated method: BeatmapDataLoader/BpmTimeProcessor.Reset
void GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BpmTimeProcessor/BpmChangeData
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single bpmChangeStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpmChangeStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpmChangeStartTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpmChangeStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single bpmChangeStartBpmTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpmChangeStartBpmTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpmChangeStartBpmTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpmChangeStartBpmTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single bpm
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpm");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/BpmTimeProcessor/BpmChangeData..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::BpmChangeData(float bpmChangeStartTime, float bpmChangeStartBpmTime, float bpm)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BasicEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_BasicEventConvertor.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
// Including type: BasicBeatmapEventType
#include "GlobalNamespace/BasicBeatmapEventType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventData.hpp"
// Including type: BeatmapDataLoader/SpecialEventsFilter
#include "GlobalNamespace/BeatmapDataLoader_SpecialEventsFilter.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDataLoader/SpecialEventsFilter _specialEventsFilter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter*& GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::dyn__specialEventsFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::dyn__specialEventsFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialEventsFilter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/BasicEventConvertor.Convert
::GlobalNamespace::BasicBeatmapEventData* GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData* basicEventSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicEventSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BasicBeatmapEventData*, false>(this, ___internal__method, basicEventSaveData);
}
// Autogenerated method: BeatmapDataLoader/BasicEventConvertor.ConvertFromBeatmapSaveDataBeatmapEventType
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::ConvertFromBeatmapSaveDataBeatmapEventType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType beatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::ConvertFromBeatmapSaveDataBeatmapEventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/BasicEventConvertor", "ConvertFromBeatmapSaveDataBeatmapEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BasicBeatmapEventType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapEventType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BombNoteConvertor
#include "GlobalNamespace/BeatmapDataLoader_BombNoteConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BombNoteData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BombNoteData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/BombNoteConvertor.Convert
::GlobalNamespace::NoteData* GlobalNamespace::BeatmapDataLoader::BombNoteConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData* bombNoteSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BombNoteConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bombNoteSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(this, ___internal__method, bombNoteSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BpmEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_BpmEventConvertor.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: BPMChangeBeatmapEventData
#include "GlobalNamespace/BPMChangeBeatmapEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BpmChangeEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BpmChangeEventData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/BpmEventConvertor.Convert
::GlobalNamespace::BPMChangeBeatmapEventData* GlobalNamespace::BeatmapDataLoader::BpmEventConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::BpmChangeEventData* bpmChangeEventSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmEventConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpmChangeEventSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BPMChangeBeatmapEventData*, false>(this, ___internal__method, bpmChangeEventSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/ColorBoostEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_ColorBoostEventConvertor.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: ColorBoostBeatmapEventData
#include "GlobalNamespace/ColorBoostBeatmapEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorBoostEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ColorBoostEventData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/ColorBoostEventConvertor.Convert
::GlobalNamespace::ColorBoostBeatmapEventData* GlobalNamespace::BeatmapDataLoader::ColorBoostEventConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::ColorBoostEventData* colorBoostEventSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ColorBoostEventConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBoostEventSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorBoostBeatmapEventData*, false>(this, ___internal__method, colorBoostEventSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/ColorNoteConvertor
#include "GlobalNamespace/BeatmapDataLoader_ColorNoteConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ColorNoteData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/ColorNoteConvertor.Convert
::GlobalNamespace::NoteData* GlobalNamespace::BeatmapDataLoader::ColorNoteConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData* colorNoteSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ColorNoteConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorNoteSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(this, ___internal__method, colorNoteSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BeatmapEventDataBoxDistributionParamTypeConvertor
#include "GlobalNamespace/BeatmapDataLoader_BeatmapEventDataBoxDistributionParamTypeConvertor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/BeatmapEventDataBoxDistributionParamTypeConvertor.Convert
::GlobalNamespace::BeatmapEventDataBox::DistributionParamType GlobalNamespace::BeatmapDataLoader::BeatmapEventDataBoxDistributionParamTypeConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType distributionParamType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BeatmapEventDataBoxDistributionParamTypeConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/BeatmapEventDataBoxDistributionParamTypeConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distributionParamType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBox::DistributionParamType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, distributionParamType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/EventBoxGroupConvertor
#include "GlobalNamespace/BeatmapDataLoader_EventBoxGroupConvertor.hpp"
// Including type: DataConvertor`2
#include "GlobalNamespace/DataConvertor_2.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: BeatmapEventDataBoxGroup
#include "GlobalNamespace/BeatmapEventDataBoxGroup.hpp"
// Including type: EnvironmentLightGroups/LightGroupData
#include "GlobalNamespace/EnvironmentLightGroups_LightGroupData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBoxGroup
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBoxGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly DataConvertor`2<BeatmapEventDataBox,EnvironmentLightGroups/LightGroupData> _dataConvertor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DataConvertor_2<::GlobalNamespace::BeatmapEventDataBox*, ::GlobalNamespace::EnvironmentLightGroups::LightGroupData*>*& GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::dyn__dataConvertor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::dyn__dataConvertor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataConvertor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DataConvertor_2<::GlobalNamespace::BeatmapEventDataBox*, ::GlobalNamespace::EnvironmentLightGroups::LightGroupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentLightGroups _lightGroups
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentLightGroups*& GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::dyn__lightGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::dyn__lightGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroups"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentLightGroups**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/EventBoxGroupConvertor.Convert
::GlobalNamespace::BeatmapEventDataBoxGroup* GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::EventBoxGroup* eventBoxGroupSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventBoxGroupSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBoxGroup*, false>(this, ___internal__method, eventBoxGroupSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/IndexFilterConvertor
#include "GlobalNamespace/BeatmapDataLoader_IndexFilterConvertor.hpp"
// Including type: IIndexFilter
#include "GlobalNamespace/IIndexFilter.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter
#include "BeatmapSaveDataVersion3/BeatmapSaveData_IndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/IndexFilterConvertor.Convert
::GlobalNamespace::IIndexFilter* GlobalNamespace::BeatmapDataLoader::IndexFilterConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter* indexFilter, int groupSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::IndexFilterConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/IndexFilterConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexFilter), ::il2cpp_utils::ExtractType(groupSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IIndexFilter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, indexFilter, groupSize);
}
// Autogenerated method: BeatmapDataLoader/IndexFilterConvertor.IsIndexFilterValid
bool GlobalNamespace::BeatmapDataLoader::IndexFilterConvertor::IsIndexFilterValid(::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter* indexFilter, int groupSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::IndexFilterConvertor::IsIndexFilterValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/IndexFilterConvertor", "IsIndexFilterValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexFilter), ::il2cpp_utils::ExtractType(groupSize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, indexFilter, groupSize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightColorEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightColorEventBoxConvertor.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: LightColorBeatmapEventDataBox
#include "GlobalNamespace/LightColorBeatmapEventDataBox.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorEventBox.hpp"
// Including type: EnvironmentLightGroups/LightGroupData
#include "GlobalNamespace/EnvironmentLightGroups_LightGroupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightColorEventBoxConvertor.Convert
::GlobalNamespace::LightColorBeatmapEventDataBox* GlobalNamespace::BeatmapDataLoader::LightColorEventBoxConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox* saveData, ::GlobalNamespace::EnvironmentLightGroups::LightGroupData* lightGroupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightColorEventBoxConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData), ::il2cpp_utils::ExtractType(lightGroupData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightColorBeatmapEventDataBox*, false>(this, ___internal__method, saveData, lightGroupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightColoBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightColoBaseDataConvertor.hpp"
// Including type: LightColorBaseData
#include "GlobalNamespace/LightColorBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightColoBaseDataConvertor.Convert
::GlobalNamespace::LightColorBaseData* GlobalNamespace::BeatmapDataLoader::LightColoBaseDataConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData* saveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightColoBaseDataConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/LightColoBaseDataConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightColorBaseData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightRotationEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightRotationEventBoxConvertor.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: LightRotationBeatmapEventDataBox
#include "GlobalNamespace/LightRotationBeatmapEventDataBox.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationEventBox.hpp"
// Including type: EnvironmentLightGroups/LightGroupData
#include "GlobalNamespace/EnvironmentLightGroups_LightGroupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightRotationEventBoxConvertor.Convert
::GlobalNamespace::LightRotationBeatmapEventDataBox* GlobalNamespace::BeatmapDataLoader::LightRotationEventBoxConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox* saveData, ::GlobalNamespace::EnvironmentLightGroups::LightGroupData* lightGroupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightRotationEventBoxConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData), ::il2cpp_utils::ExtractType(lightGroupData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightRotationBeatmapEventDataBox*, false>(this, ___internal__method, saveData, lightGroupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightRotationBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightRotationBaseDataConvertor.hpp"
// Including type: LightRotationBaseData
#include "GlobalNamespace/LightRotationBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightRotationBaseDataConvertor.Convert
::GlobalNamespace::LightRotationBaseData* GlobalNamespace::BeatmapDataLoader::LightRotationBaseDataConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData* saveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightRotationBaseDataConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/LightRotationBaseDataConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightRotationBaseData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/ObstacleConvertor
#include "GlobalNamespace/BeatmapDataLoader_ObstacleConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ObstacleData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/ObstacleConvertor.Convert
::GlobalNamespace::ObstacleData* GlobalNamespace::BeatmapDataLoader::ObstacleConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData* obstacleSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ObstacleConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObstacleData*, false>(this, ___internal__method, obstacleSaveData);
}
// Autogenerated method: BeatmapDataLoader/ObstacleConvertor.GetNoteLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::BeatmapDataLoader::ObstacleConvertor::GetNoteLineLayer(int lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ObstacleConvertor::GetNoteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/ObstacleConvertor", "GetNoteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineLayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/RotationEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_RotationEventConvertor.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.RotationEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_RotationEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ExecutionTime.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/RotationEventConvertor.Convert
::GlobalNamespace::SpawnRotationBeatmapEventData* GlobalNamespace::BeatmapDataLoader::RotationEventConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData* rotationEventSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::RotationEventConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationEventSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SpawnRotationBeatmapEventData*, false>(this, ___internal__method, rotationEventSaveData);
}
// Autogenerated method: BeatmapDataLoader/RotationEventConvertor.SpawnRotationEventType
::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType GlobalNamespace::BeatmapDataLoader::RotationEventConvertor::SpawnRotationEventType(::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime executionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::RotationEventConvertor::SpawnRotationEventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/RotationEventConvertor", "SpawnRotationEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/SliderConvertor
#include "GlobalNamespace/BeatmapDataLoader_SliderConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_SliderData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/SliderConvertor.Convert
::GlobalNamespace::SliderData* GlobalNamespace::BeatmapDataLoader::SliderConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData* sliderSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::SliderConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData*, false>(this, ___internal__method, sliderSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BurstSliderConvertor
#include "GlobalNamespace/BeatmapDataLoader_BurstSliderConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BurstSliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BurstSliderData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/BurstSliderConvertor.Convert
::GlobalNamespace::SliderData* GlobalNamespace::BeatmapDataLoader::BurstSliderConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData* sliderSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BurstSliderConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData*, false>(this, ___internal__method, sliderSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/WaypointConvertor
#include "GlobalNamespace/BeatmapDataLoader_WaypointConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: WaypointData
#include "GlobalNamespace/WaypointData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.WaypointData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_WaypointData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/WaypointConvertor.Convert
::GlobalNamespace::WaypointData* GlobalNamespace::BeatmapDataLoader::WaypointConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData* waypointSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::WaypointConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waypointSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::WaypointData*, false>(this, ___internal__method, waypointSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/SpecialEventsFilter
#include "GlobalNamespace/BeatmapDataLoader_SpecialEventsFilter.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: EnvironmentKeywords
#include "GlobalNamespace/EnvironmentKeywords.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventTypesWithKeywords.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType> _eventTypesToFilter
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>*& GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter::dyn__eventTypesToFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter::dyn__eventTypesToFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventTypesToFilter"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/SpecialEventsFilter.IsEventValid
bool GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter::IsEventValid(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType basicBeatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter::IsEventValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEventValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, basicBeatmapEventType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DefaultEnvironmentEventsFactory
#include "GlobalNamespace/DefaultEnvironmentEventsFactory.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: BeatmapEventDataBoxGroupLists
#include "GlobalNamespace/BeatmapEventDataBoxGroupLists.hpp"
// Including type: DefaultEnvironmentEvents
#include "GlobalNamespace/DefaultEnvironmentEvents.hpp"
// Including type: EnvironmentLightGroups
#include "GlobalNamespace/EnvironmentLightGroups.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DefaultEnvironmentEventsFactory.InsertDefaultEnvironmentEvents
void GlobalNamespace::DefaultEnvironmentEventsFactory::InsertDefaultEnvironmentEvents(::GlobalNamespace::BeatmapData* beatmapData, ::GlobalNamespace::BeatmapEventDataBoxGroupLists* beatmapEventDataBoxGroupLists, ::GlobalNamespace::DefaultEnvironmentEvents* defaultEnvironmentEvents, ::GlobalNamespace::EnvironmentLightGroups* environmentLightGroups) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEventsFactory::InsertDefaultEnvironmentEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DefaultEnvironmentEventsFactory", "InsertDefaultEnvironmentEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(beatmapEventDataBoxGroupLists), ::il2cpp_utils::ExtractType(defaultEnvironmentEvents), ::il2cpp_utils::ExtractType(environmentLightGroups)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, beatmapEventDataBoxGroupLists, defaultEnvironmentEvents, environmentLightGroups);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEnvironmentHelper
#include "GlobalNamespace/BeatmapEnvironmentHelper.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEnvironmentHelper.GetEnvironmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::BeatmapEnvironmentHelper::GetEnvironmentInfo(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEnvironmentHelper::GetEnvironmentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEnvironmentHelper", "GetEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: IBeatToTimeConvertor
#include "GlobalNamespace/IBeatToTimeConvertor.hpp"
// Including type: IIndexFilter
#include "GlobalNamespace/IIndexFilter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IIndexFilter <indexFilter>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IIndexFilter*& GlobalNamespace::BeatmapEventDataBox::dyn_$indexFilter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::dyn_$indexFilter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<indexFilter>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IIndexFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _beatDistributionParam
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapEventDataBox::dyn__beatDistributionParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::dyn__beatDistributionParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatDistributionParam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapEventDataBox/DistributionParamType _beatDistributionParamType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventDataBox::DistributionParamType& GlobalNamespace::BeatmapEventDataBox::dyn__beatDistributionParamType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::dyn__beatDistributionParamType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatDistributionParamType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventDataBox::DistributionParamType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEventDataBox.get_subtypeIdentifier
int GlobalNamespace::BeatmapEventDataBox::get_subtypeIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::get_subtypeIdentifier");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subtypeIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBox.get_beatStep
float GlobalNamespace::BeatmapEventDataBox::get_beatStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::get_beatStep");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBox.get_indexFilter
::GlobalNamespace::IIndexFilter* GlobalNamespace::BeatmapEventDataBox::get_indexFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::get_indexFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_indexFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IIndexFilter*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBox.get_numberOfElements
int GlobalNamespace::BeatmapEventDataBox::get_numberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::get_numberOfElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBox.Unpack
void GlobalNamespace::BeatmapEventDataBox::Unpack(float groupBoxBeat, int groupId, int elementId, int orderIndex, float maxBeat, ::GlobalNamespace::IBeatToTimeConvertor* beatToTimeConvertor, ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapEventData*>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::Unpack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupBoxBeat), ::il2cpp_utils::ExtractType(groupId), ::il2cpp_utils::ExtractType(elementId), ::il2cpp_utils::ExtractType(orderIndex), ::il2cpp_utils::ExtractType(maxBeat), ::il2cpp_utils::ExtractType(beatToTimeConvertor), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupBoxBeat, groupId, elementId, orderIndex, maxBeat, beatToTimeConvertor, output);
}
// Autogenerated method: BeatmapEventDataBox.GetBeatStep
float GlobalNamespace::BeatmapEventDataBox::GetBeatStep(float lastBaseEventRelativeBeat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::GetBeatStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastBaseEventRelativeBeat)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lastBaseEventRelativeBeat);
}
// Autogenerated method: BeatmapEventDataBox.DistributionParamToStep
float GlobalNamespace::BeatmapEventDataBox::DistributionParamToStep(float distributionParam, ::GlobalNamespace::BeatmapEventDataBox::DistributionParamType distributionParamType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::DistributionParamToStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DistributionParamToStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distributionParam), ::il2cpp_utils::ExtractType(distributionParamType)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, distributionParam, distributionParamType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataBox/DistributionParamType
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapEventDataBox/DistributionParamType Wave
::GlobalNamespace::BeatmapEventDataBox::DistributionParamType GlobalNamespace::BeatmapEventDataBox::DistributionParamType::_get_Wave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::DistributionParamType::_get_Wave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapEventDataBox::DistributionParamType>("", "BeatmapEventDataBox/DistributionParamType", "Wave"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapEventDataBox/DistributionParamType Wave
void GlobalNamespace::BeatmapEventDataBox::DistributionParamType::_set_Wave(::GlobalNamespace::BeatmapEventDataBox::DistributionParamType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::DistributionParamType::_set_Wave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataBox/DistributionParamType", "Wave", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapEventDataBox/DistributionParamType Step
::GlobalNamespace::BeatmapEventDataBox::DistributionParamType GlobalNamespace::BeatmapEventDataBox::DistributionParamType::_get_Step() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::DistributionParamType::_get_Step");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapEventDataBox::DistributionParamType>("", "BeatmapEventDataBox/DistributionParamType", "Step"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapEventDataBox/DistributionParamType Step
void GlobalNamespace::BeatmapEventDataBox::DistributionParamType::_set_Step(::GlobalNamespace::BeatmapEventDataBox::DistributionParamType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::DistributionParamType::_set_Step");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataBox/DistributionParamType", "Step", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapEventDataBox::DistributionParamType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBox::DistributionParamType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataBoxGroup
#include "GlobalNamespace/BeatmapEventDataBoxGroup.hpp"
// Including type: BeatmapEventDataBoxGroup/ElementData
#include "GlobalNamespace/BeatmapEventDataBoxGroup_ElementData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: IBeatToTimeConvertor
#include "GlobalNamespace/IBeatToTimeConvertor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Single beat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapEventDataBoxGroup::dyn_beat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::dyn_beat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.ValueTuple`3<System.Int32,System.Type,System.Int32>,BeatmapEventDataBoxGroup/ElementData> _elementDataDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::ValueTuple_3<int, ::System::Type*, int>, ::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData*>*& GlobalNamespace::BeatmapEventDataBoxGroup::dyn__elementDataDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::dyn__elementDataDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementDataDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::ValueTuple_3<int, ::System::Type*, int>, ::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatmapEventData> _unpackedBeatmapEventData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapEventData*>*& GlobalNamespace::BeatmapEventDataBoxGroup::dyn__unpackedBeatmapEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::dyn__unpackedBeatmapEventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unpackedBeatmapEventData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyCollection`1<BeatmapEventDataBox> _beatmapEventDataBoxList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::BeatmapEventDataBox*>*& GlobalNamespace::BeatmapEventDataBoxGroup::dyn__beatmapEventDataBoxList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::dyn__beatmapEventDataBoxList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventDataBoxList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::BeatmapEventDataBox*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEventDataBoxGroup.get_elementDataDict
::System::Collections::Generic::IReadOnlyDictionary_2<::System::ValueTuple_3<int, ::System::Type*, int>, ::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData*>* GlobalNamespace::BeatmapEventDataBoxGroup::get_elementDataDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::get_elementDataDict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_elementDataDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyDictionary_2<::System::ValueTuple_3<int, ::System::Type*, int>, ::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBoxGroup.GetCopyWithNewBeat
::GlobalNamespace::BeatmapEventDataBoxGroup* GlobalNamespace::BeatmapEventDataBoxGroup::GetCopyWithNewBeat(float newBeat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::GetCopyWithNewBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopyWithNewBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBeat)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBoxGroup*, false>(this, ___internal__method, newBeat);
}
// Autogenerated method: BeatmapEventDataBoxGroup.RemoveBeatmapEventDataFromBeatmapData
void GlobalNamespace::BeatmapEventDataBoxGroup::RemoveBeatmapEventDataFromBeatmapData(::GlobalNamespace::BeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::RemoveBeatmapEventDataFromBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBeatmapEventDataFromBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapData);
}
// Autogenerated method: BeatmapEventDataBoxGroup.SyncWithBeatmapData
void GlobalNamespace::BeatmapEventDataBoxGroup::SyncWithBeatmapData(int groupId, ::GlobalNamespace::BeatmapData* beatmapData, ::GlobalNamespace::IBeatToTimeConvertor* beatToTimeConvertor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::SyncWithBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncWithBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId), ::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(beatToTimeConvertor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupId, beatmapData, beatToTimeConvertor);
}
// Autogenerated method: BeatmapEventDataBoxGroup.CompareTo
int GlobalNamespace::BeatmapEventDataBoxGroup::CompareTo(::GlobalNamespace::BeatmapEventDataBoxGroup* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataBoxGroup/ElementData
#include "GlobalNamespace/BeatmapEventDataBoxGroup_ElementData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single startBeat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_startBeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_startBeat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startBeat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 elementId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_elementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_elementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 orderIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_orderIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_orderIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orderIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Type eventBoxType
[[deprecated("Use field access instead!")]] ::System::Type*& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_eventBoxType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_eventBoxType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventBoxType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 eventBoxSubtypeIdentifier
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_eventBoxSubtypeIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_eventBoxSubtypeIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventBoxSubtypeIdentifier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapEventDataBox eventBox
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventDataBox*& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_eventBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_eventBox");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventBox"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventDataBox**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapEventDataBoxGroup boxGroup
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventDataBoxGroup*& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_boxGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn_boxGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boxGroup"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventDataBoxGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventDataBoxGroup/ElementData _next
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData*& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn__next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn__next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_next"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventDataBoxGroup/ElementData _previous
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData*& GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn__previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::dyn__previous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previous"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEventDataBoxGroup/ElementData.get_next
::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData* GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::get_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::get_next");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBoxGroup/ElementData.get_previous
::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData* GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::get_previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::get_previous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBoxGroup/ElementData.ResetConnections
void GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::ResetConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::ResetConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBoxGroup/ElementData.ConnectWithPrevious
void GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::ConnectWithPrevious(::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData* prevElementData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::ConnectWithPrevious");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectWithPrevious", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prevElementData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prevElementData);
}
// Autogenerated method: BeatmapEventDataBoxGroup/ElementData.ConnectWithNext
void GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::ConnectWithNext(::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData* nextElementData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroup::ElementData::ConnectWithNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectWithNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextElementData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextElementData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataBoxGroupFactory
#include "GlobalNamespace/BeatmapEventDataBoxGroupFactory.hpp"
// Including type: BeatmapEventDataBoxGroup
#include "GlobalNamespace/BeatmapEventDataBoxGroup.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEventDataBoxGroupFactory.CreateExtendColorBeatmapEventDataBoxGroup
::GlobalNamespace::BeatmapEventDataBoxGroup* GlobalNamespace::BeatmapEventDataBoxGroupFactory::CreateExtendColorBeatmapEventDataBoxGroup(float beat, int numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupFactory::CreateExtendColorBeatmapEventDataBoxGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataBoxGroupFactory", "CreateExtendColorBeatmapEventDataBoxGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beat), ::il2cpp_utils::ExtractType(numberOfElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBoxGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beat, numberOfElements);
}
// Autogenerated method: BeatmapEventDataBoxGroupFactory.CreateExtendRotationBeatmapEventDataBoxGroup
::GlobalNamespace::BeatmapEventDataBoxGroup* GlobalNamespace::BeatmapEventDataBoxGroupFactory::CreateExtendRotationBeatmapEventDataBoxGroup(float beat, int numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupFactory::CreateExtendRotationBeatmapEventDataBoxGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataBoxGroupFactory", "CreateExtendRotationBeatmapEventDataBoxGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beat), ::il2cpp_utils::ExtractType(numberOfElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBoxGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beat, numberOfElements);
}
// Autogenerated method: BeatmapEventDataBoxGroupFactory.CreateSingleLightBeatmapEventDataBoxGroup
::GlobalNamespace::BeatmapEventDataBoxGroup* GlobalNamespace::BeatmapEventDataBoxGroupFactory::CreateSingleLightBeatmapEventDataBoxGroup(float beat, int numberOfElements, ::GlobalNamespace::EnvironmentColorType colorType, float brightness, float rotationX, float rotationY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupFactory::CreateSingleLightBeatmapEventDataBoxGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataBoxGroupFactory", "CreateSingleLightBeatmapEventDataBoxGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beat), ::il2cpp_utils::ExtractType(numberOfElements), ::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(brightness), ::il2cpp_utils::ExtractType(rotationX), ::il2cpp_utils::ExtractType(rotationY)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBoxGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beat, numberOfElements, colorType, brightness, rotationX, rotationY);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataBoxGroupList
#include "GlobalNamespace/BeatmapEventDataBoxGroupList.hpp"
// Including type: BeatmapEventDataBoxGroupProcessor
#include "GlobalNamespace/BeatmapEventDataBoxGroupProcessor.hpp"
// Including type: SortedList`2
#include "GlobalNamespace/SortedList_2.hpp"
// Including type: BeatmapEventDataBoxGroup
#include "GlobalNamespace/BeatmapEventDataBoxGroup.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: IBeatToTimeConvertor
#include "GlobalNamespace/IBeatToTimeConvertor.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<BeatmapEventDataBoxGroup> _usedBeatmapEventDataBoxes
::System::Collections::Generic::HashSet_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* GlobalNamespace::BeatmapEventDataBoxGroupList::_get__usedBeatmapEventDataBoxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::_get__usedBeatmapEventDataBoxes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>*>("", "BeatmapEventDataBoxGroupList", "_usedBeatmapEventDataBoxes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<BeatmapEventDataBoxGroup> _usedBeatmapEventDataBoxes
void GlobalNamespace::BeatmapEventDataBoxGroupList::_set__usedBeatmapEventDataBoxes(::System::Collections::Generic::HashSet_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::_set__usedBeatmapEventDataBoxes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataBoxGroupList", "_usedBeatmapEventDataBoxes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateBeatmapDataOnInsert
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapEventDataBoxGroupList::dyn_updateBeatmapDataOnInsert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::dyn_updateBeatmapDataOnInsert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateBeatmapDataOnInsert"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapEventDataBoxGroupProcessor _beatmapEventDataBoxGroupProcessor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventDataBoxGroupProcessor*& GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__beatmapEventDataBoxGroupProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__beatmapEventDataBoxGroupProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventDataBoxGroupProcessor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventDataBoxGroupProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SortedList`2<BeatmapEventDataBoxGroup,BeatmapEventDataBoxGroup> _sortedList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SortedList_2<::GlobalNamespace::BeatmapEventDataBoxGroup*, ::GlobalNamespace::BeatmapEventDataBoxGroup*>*& GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortedList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SortedList_2<::GlobalNamespace::BeatmapEventDataBoxGroup*, ::GlobalNamespace::BeatmapEventDataBoxGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _groupId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__groupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__groupId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapData _beatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapData*& GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatToTimeConvertor _beatToTimeConvertor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatToTimeConvertor*& GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__beatToTimeConvertor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__beatToTimeConvertor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatToTimeConvertor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatToTimeConvertor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _nonSyncedInsertsExist
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__nonSyncedInsertsExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::dyn__nonSyncedInsertsExist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonSyncedInsertsExist"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEventDataBoxGroupList..cctor
void GlobalNamespace::BeatmapEventDataBoxGroupList::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataBoxGroupList", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapEventDataBoxGroupList.NoDomainReloadInit
void GlobalNamespace::BeatmapEventDataBoxGroupList::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataBoxGroupList", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapEventDataBoxGroupList.Insert
::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* GlobalNamespace::BeatmapEventDataBoxGroupList::Insert(::GlobalNamespace::BeatmapEventDataBoxGroup* beatmapEventDataBoxGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventDataBoxGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>*, false>(this, ___internal__method, beatmapEventDataBoxGroup);
}
// Autogenerated method: BeatmapEventDataBoxGroupList.Remove
void GlobalNamespace::BeatmapEventDataBoxGroupList::Remove(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* nodeToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeToDelete);
}
// Autogenerated method: BeatmapEventDataBoxGroupList.SyncWithBeatmapData
void GlobalNamespace::BeatmapEventDataBoxGroupList::SyncWithBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupList::SyncWithBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncWithBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataBoxGroupLists
#include "GlobalNamespace/BeatmapEventDataBoxGroupLists.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BeatmapEventDataBoxGroupList
#include "GlobalNamespace/BeatmapEventDataBoxGroupList.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: IBeatToTimeConvertor
#include "GlobalNamespace/IBeatToTimeConvertor.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapEventDataBoxGroup
#include "GlobalNamespace/BeatmapEventDataBoxGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,BeatmapEventDataBoxGroupList> _beatmapEventDataBoxGroupListDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BeatmapEventDataBoxGroupList*>*& GlobalNamespace::BeatmapEventDataBoxGroupLists::dyn__beatmapEventDataBoxGroupListDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::dyn__beatmapEventDataBoxGroupListDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventDataBoxGroupListDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BeatmapEventDataBoxGroupList*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapData _beatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapData*& GlobalNamespace::BeatmapEventDataBoxGroupLists::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatToTimeConvertor _beatToTimeConvertor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatToTimeConvertor*& GlobalNamespace::BeatmapEventDataBoxGroupLists::dyn__beatToTimeConvertor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::dyn__beatToTimeConvertor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatToTimeConvertor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatToTimeConvertor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _updateBeatmapDataOnInsert
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapEventDataBoxGroupLists::dyn__updateBeatmapDataOnInsert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::dyn__updateBeatmapDataOnInsert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateBeatmapDataOnInsert"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEventDataBoxGroupLists.Insert
::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* GlobalNamespace::BeatmapEventDataBoxGroupLists::Insert(int groupId, ::GlobalNamespace::BeatmapEventDataBoxGroup* beatmapEventDataBoxGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId), ::il2cpp_utils::ExtractType(beatmapEventDataBoxGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>*, false>(this, ___internal__method, groupId, beatmapEventDataBoxGroup);
}
// Autogenerated method: BeatmapEventDataBoxGroupLists.Remove
void GlobalNamespace::BeatmapEventDataBoxGroupLists::Remove(int groupId, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* nodeToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId), ::il2cpp_utils::ExtractType(nodeToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupId, nodeToDelete);
}
// Autogenerated method: BeatmapEventDataBoxGroupLists.ToggleUpdateBeatmapDataOnInsert
void GlobalNamespace::BeatmapEventDataBoxGroupLists::ToggleUpdateBeatmapDataOnInsert(bool enableUpdateOnInsert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::ToggleUpdateBeatmapDataOnInsert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleUpdateBeatmapDataOnInsert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableUpdateOnInsert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enableUpdateOnInsert);
}
// Autogenerated method: BeatmapEventDataBoxGroupLists.SyncWithBeatmapData
void GlobalNamespace::BeatmapEventDataBoxGroupLists::SyncWithBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::SyncWithBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncWithBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBoxGroupLists.SyncWithBeatmapData
void GlobalNamespace::BeatmapEventDataBoxGroupLists::SyncWithBeatmapData(int groupId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupLists::SyncWithBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncWithBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataBoxGroupProcessor
#include "GlobalNamespace/BeatmapEventDataBoxGroupProcessor.hpp"
// Including type: BeatmapEventDataBoxGroup
#include "GlobalNamespace/BeatmapEventDataBoxGroup.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<BeatmapEventDataBoxGroup> _dirtyBoxGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>*& GlobalNamespace::BeatmapEventDataBoxGroupProcessor::dyn__dirtyBoxGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupProcessor::dyn__dirtyBoxGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dirtyBoxGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEventDataBoxGroupProcessor.get_dirtyBoxGroups
::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* GlobalNamespace::BeatmapEventDataBoxGroupProcessor::get_dirtyBoxGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupProcessor::get_dirtyBoxGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dirtyBoxGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventDataBoxGroupProcessor.ProcessInsertedData
void GlobalNamespace::BeatmapEventDataBoxGroupProcessor::ProcessInsertedData(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* insertedNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupProcessor::ProcessInsertedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInsertedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(insertedNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, insertedNode);
}
// Autogenerated method: BeatmapEventDataBoxGroupProcessor.ProcessBeforeDeleteData
void GlobalNamespace::BeatmapEventDataBoxGroupProcessor::ProcessBeforeDeleteData(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapEventDataBoxGroup*>* nodeToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupProcessor::ProcessBeforeDeleteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBeforeDeleteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeToDelete);
}
// Autogenerated method: BeatmapEventDataBoxGroupProcessor.ClearDirtyData
void GlobalNamespace::BeatmapEventDataBoxGroupProcessor::ClearDirtyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataBoxGroupProcessor::ClearDirtyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDirtyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseIndexFilter
#include "GlobalNamespace/BaseIndexFilter.hpp"
// Including type: BaseIndexFilter/<GetEnumerator>d__8
#include "GlobalNamespace/BaseIndexFilter_-GetEnumerator-d__8.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _start
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseIndexFilter::dyn__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::dyn__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _step
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseIndexFilter::dyn__step() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::dyn__step");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_step"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseIndexFilter::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentValue
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseIndexFilter::dyn__currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::dyn__currentValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseIndexFilter.get_Count
int GlobalNamespace::BaseIndexFilter::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BaseIndexFilter.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::BaseIndexFilter::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: BaseIndexFilter.GetEnumerator
::System::Collections::Generic::IEnumerator_1<int>* GlobalNamespace::BaseIndexFilter::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<int>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseIndexFilter/<GetEnumerator>d__8
#include "GlobalNamespace/BaseIndexFilter_-GetEnumerator-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>2__current
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BaseIndexFilter <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BaseIndexFilter*& GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BaseIndexFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <value>5__2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$value$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$value$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$i$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::dyn_$i$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseIndexFilter/<GetEnumerator>d__8.System.Collections.Generic.IEnumerator<System.Int32>.get_Current
int GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::System_Collections_Generic_IEnumerator$System_Int32$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::System.Collections.Generic.IEnumerator<System.Int32>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Int32>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BaseIndexFilter/<GetEnumerator>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseIndexFilter/<GetEnumerator>d__8.System.IDisposable.Dispose
void GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseIndexFilter/<GetEnumerator>d__8.MoveNext
bool GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseIndexFilter/<GetEnumerator>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseIndexFilter::$GetEnumerator$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RangeIndexFilter
#include "GlobalNamespace/RangeIndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorBeatmapEventDataBox
#include "GlobalNamespace/LightColorBeatmapEventDataBox.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: LightColorBaseData
#include "GlobalNamespace/LightColorBaseData.hpp"
// Including type: IIndexFilter
#include "GlobalNamespace/IIndexFilter.hpp"
// Including type: IBeatToTimeConvertor
#include "GlobalNamespace/IBeatToTimeConvertor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<LightColorBaseData> _lightColorBaseDataList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::LightColorBaseData*>*& GlobalNamespace::LightColorBeatmapEventDataBox::dyn__lightColorBaseDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataBox::dyn__lightColorBaseDataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColorBaseDataList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::LightColorBaseData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _brightnessStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightColorBeatmapEventDataBox::dyn__brightnessStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataBox::dyn__brightnessStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brightnessStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _beatStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightColorBeatmapEventDataBox::dyn__beatStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataBox::dyn__beatStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _brightnessDistributionShouldAffectFirstBaseEvent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LightColorBeatmapEventDataBox::dyn__brightnessDistributionShouldAffectFirstBaseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataBox::dyn__brightnessDistributionShouldAffectFirstBaseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brightnessDistributionShouldAffectFirstBaseEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightColorBeatmapEventDataBox.get_subtypeIdentifier
int GlobalNamespace::LightColorBeatmapEventDataBox::get_subtypeIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataBox::get_subtypeIdentifier");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subtypeIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightColorBeatmapEventDataBox.get_beatStep
float GlobalNamespace::LightColorBeatmapEventDataBox::get_beatStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataBox::get_beatStep");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LightColorBeatmapEventDataBox.Unpack
void GlobalNamespace::LightColorBeatmapEventDataBox::Unpack(float groupBoxBeat, int groupId, int elementId, int orderIndex, float maxBeat, ::GlobalNamespace::IBeatToTimeConvertor* beatToTimeConvertor, ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapEventData*>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataBox::Unpack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupBoxBeat), ::il2cpp_utils::ExtractType(groupId), ::il2cpp_utils::ExtractType(elementId), ::il2cpp_utils::ExtractType(orderIndex), ::il2cpp_utils::ExtractType(maxBeat), ::il2cpp_utils::ExtractType(beatToTimeConvertor), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupBoxBeat, groupId, elementId, orderIndex, maxBeat, beatToTimeConvertor, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorBaseData
#include "GlobalNamespace/LightColorBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single beat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightColorBaseData::dyn_beat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBaseData::dyn_beat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapEventTransitionType transitionType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventTransitionType& GlobalNamespace::LightColorBaseData::dyn_transitionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBaseData::dyn_transitionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventTransitionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly EnvironmentColorType colorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorType& GlobalNamespace::LightColorBaseData::dyn_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBaseData::dyn_colorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single brightness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightColorBaseData::dyn_brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBaseData::dyn_brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 strobeBeatFrequency
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightColorBaseData::dyn_strobeBeatFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBaseData::dyn_strobeBeatFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strobeBeatFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationBeatmapEventDataBox
#include "GlobalNamespace/LightRotationBeatmapEventDataBox.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: LightRotationBaseData
#include "GlobalNamespace/LightRotationBaseData.hpp"
// Including type: IIndexFilter
#include "GlobalNamespace/IIndexFilter.hpp"
// Including type: IBeatToTimeConvertor
#include "GlobalNamespace/IBeatToTimeConvertor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<LightRotationBaseData> _lightRotationBaseDataList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::LightRotationBaseData*>*& GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__lightRotationBaseDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__lightRotationBaseDataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightRotationBaseDataList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::LightRotationBaseData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LightRotationBeatmapEventData/Axis _axis
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightRotationBeatmapEventData::Axis& GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axis"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightRotationBeatmapEventData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _rotationDirection
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__rotationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__rotationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDirection"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _rotationStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__rotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__rotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _beatStep
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__beatStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__beatStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _rotationDistributionShouldAffectFirstBaseEvent
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__rotationDistributionShouldAffectFirstBaseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::dyn__rotationDistributionShouldAffectFirstBaseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDistributionShouldAffectFirstBaseEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightRotationBeatmapEventDataBox.get_subtypeIdentifier
int GlobalNamespace::LightRotationBeatmapEventDataBox::get_subtypeIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::get_subtypeIdentifier");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subtypeIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationBeatmapEventDataBox.get_beatStep
float GlobalNamespace::LightRotationBeatmapEventDataBox::get_beatStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::get_beatStep");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationBeatmapEventDataBox.Unpack
void GlobalNamespace::LightRotationBeatmapEventDataBox::Unpack(float groupBoxBeat, int groupId, int elementId, int orderIndex, float maxBeat, ::GlobalNamespace::IBeatToTimeConvertor* beatToTimeConvertor, ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapEventData*>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataBox::Unpack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupBoxBeat), ::il2cpp_utils::ExtractType(groupId), ::il2cpp_utils::ExtractType(elementId), ::il2cpp_utils::ExtractType(orderIndex), ::il2cpp_utils::ExtractType(maxBeat), ::il2cpp_utils::ExtractType(beatToTimeConvertor), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, groupBoxBeat, groupId, elementId, orderIndex, maxBeat, beatToTimeConvertor, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationBaseData
#include "GlobalNamespace/LightRotationBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single beat
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightRotationBaseData::dyn_beat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBaseData::dyn_beat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beat"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean usePreviousEventRotationValue
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LightRotationBaseData::dyn_usePreviousEventRotationValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBaseData::dyn_usePreviousEventRotationValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePreviousEventRotationValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly EaseType easeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::LightRotationBaseData::dyn_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBaseData::dyn_easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightRotationBaseData::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBaseData::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 loopsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightRotationBaseData::dyn_loopsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBaseData::dyn_loopsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly LightRotationDirection rotationDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightRotationDirection& GlobalNamespace::LightRotationBaseData::dyn_rotationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBaseData::dyn_rotationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightRotationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataAssetsModel
#include "GlobalNamespace/BeatmapDataAssetsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataAssetsModel.BeatmapLevelDataAssetNameForBeatmapLevel
::StringW GlobalNamespace::BeatmapDataAssetsModel::BeatmapLevelDataAssetNameForBeatmapLevel(::StringW levelID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAssetsModel::BeatmapLevelDataAssetNameForBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataAssetsModel", "BeatmapLevelDataAssetNameForBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelID);
}
// Autogenerated method: BeatmapDataAssetsModel.AssetBundleNameForBeatmapLevel
::StringW GlobalNamespace::BeatmapDataAssetsModel::AssetBundleNameForBeatmapLevel(::StringW levelID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAssetsModel::AssetBundleNameForBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataAssetsModel", "AssetBundleNameForBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelID)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO
#include "GlobalNamespace/BeatmapLevelDataLoaderSO.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_BeatmapLevelFromPreview.hpp"
// Including type: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelFormAssetBundleAsync>d__4
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_-LoadBeatmapLevelFormAssetBundleAsync-d__4.hpp"
// Including type: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelAsync>d__5
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_-LoadBeatmapLevelAsync-d__5.hpp"
// Including type: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_0
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_--c__DisplayClass6_0.hpp"
// Including type: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_1
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_--c__DisplayClass6_1.hpp"
// Including type: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_2
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_--c__DisplayClass6_2.hpp"
// Including type: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelDataAsync>d__6
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_-LoadBeatmapLevelDataAsync-d__6.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: AsyncCache`2
#include "GlobalNamespace/AsyncCache_2.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: BeatmapLevelDataSO
#include "GlobalNamespace/BeatmapLevelDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _allBeatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::BeatmapLevelDataLoaderSO::dyn__allBeatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::dyn__allBeatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allBeatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AsyncCache`2<System.String,IBeatmapLevel> _beatmapLevelsAsyncCache
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AsyncCache_2<::StringW, ::GlobalNamespace::IBeatmapLevel*>*& GlobalNamespace::BeatmapLevelDataLoaderSO::dyn__beatmapLevelsAsyncCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::dyn__beatmapLevelsAsyncCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsAsyncCache"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AsyncCache_2<::StringW, ::GlobalNamespace::IBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,BeatmapLevelDataLoaderSO/AssetBundleLevelInfo> _bundleLevelInfos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo>*& GlobalNamespace::BeatmapLevelDataLoaderSO::dyn__bundleLevelInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::dyn__bundleLevelInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bundleLevelInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO.LoadBeatmapLevelFormAssetBundleAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapLevel*>* GlobalNamespace::BeatmapLevelDataLoaderSO::LoadBeatmapLevelFormAssetBundleAsync(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::StringW assetBundlePath, ::StringW levelDataAssetName, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::LoadBeatmapLevelFormAssetBundleAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBeatmapLevelFormAssetBundleAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(assetBundlePath), ::il2cpp_utils::ExtractType(levelDataAssetName), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapLevel*>*, false>(this, ___internal__method, previewBeatmapLevel, assetBundlePath, levelDataAssetName, cancellationToken);
}
// Autogenerated method: BeatmapLevelDataLoaderSO.LoadBeatmapLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapLevel*>* GlobalNamespace::BeatmapLevelDataLoaderSO::LoadBeatmapLevelAsync(::StringW levelID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::LoadBeatmapLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBeatmapLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapLevel*>*, false>(this, ___internal__method, levelID);
}
// Autogenerated method: BeatmapLevelDataLoaderSO.LoadBeatmapLevelDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelDataSO*>* GlobalNamespace::BeatmapLevelDataLoaderSO::LoadBeatmapLevelDataAsync(::StringW assetBundlePath, ::StringW levelDataAssetName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::LoadBeatmapLevelDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBeatmapLevelDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetBundlePath), ::il2cpp_utils::ExtractType(levelDataAssetName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelDataSO*>*, false>(this, ___internal__method, assetBundlePath, levelDataAssetName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/AssetBundleLevelInfo
#include "GlobalNamespace/BeatmapLevelDataLoaderSO.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String assetBundlePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo::dyn_assetBundlePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo::dyn_assetBundlePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetBundlePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String levelDataAssetName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo::dyn_levelDataAssetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo::dyn_levelDataAssetName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDataAssetName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo::dyn_previewBeatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/AssetBundleLevelInfo..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapLevelDataLoaderSO::AssetBundleLevelInfo::AssetBundleLevelInfo(::StringW assetBundlePath, ::StringW levelDataAssetName, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_BeatmapLevelFromPreview.hpp"
// Including type: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_BeatmapLevelFromPreview_BeatmapLevelData.hpp"
// Including type: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/<GetCoverImageAsync>d__37
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_BeatmapLevelFromPreview_-GetCoverImageAsync-d__37.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: BeatmapLevelDataSO
#include "GlobalNamespace/BeatmapLevelDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IPreviewBeatmapLevel _level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData _beatmapLevelData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData*& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::dyn__beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::dyn__beatmapLevelData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_levelID
::StringW GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_songName
::StringW GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_songSubName
::StringW GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_songAuthorName
::StringW GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_levelAuthorName
::StringW GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_beatsPerMinute
float GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_songTimeOffset
float GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_songDuration
float GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_shuffle
float GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_shufflePeriod
float GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_previewStartTime
float GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_previewDuration
float GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_environmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_allDirectionsEnvironmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_previewDifficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_beatmapLevelData
::GlobalNamespace::IBeatmapLevelData* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_songPreviewAudioClip
::UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songPreviewAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songPreviewAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPreviewAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.get_songPreviewAudioClipPath
::StringW GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songPreviewAudioClipPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::get_songPreviewAudioClipPath");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPreviewAudioClipPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.GetCoverImageAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::GetCoverImageAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview.LoadData
void GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::LoadData(::GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection, ::GlobalNamespace::BeatmapLevelDataSO* beatmapLevelData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::LoadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristicCollection), ::il2cpp_utils::ExtractType(beatmapLevelData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapCharacteristicCollection, beatmapLevelData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_BeatmapLevelFromPreview_BeatmapLevelData.hpp"
// Including type: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_BeatmapLevelFromPreview_BeatmapLevelData_DifficultyBeatmapSet.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapLevelDataSO
#include "GlobalNamespace/BeatmapLevelDataSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.AudioClip _audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData/DifficultyBeatmapSet> _difficultyBeatmapSets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet*>*& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::dyn__difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::dyn__difficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData.get_audioClip
::UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::get_audioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData.get_difficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::get_difficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_BeatmapLevelFromPreview_BeatmapLevelData_DifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: BeatmapLevelDataSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelDataSO_DifficultyBeatmapSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCharacteristicSO _beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelDataSO/DifficultyBeatmapSet _difficultyBeatmapSet
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet::dyn__difficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet::dyn__difficultyBeatmapSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapSet"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData/DifficultyBeatmapSet.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/BeatmapLevelData/DifficultyBeatmapSet.get_difficultyBeatmaps
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::BeatmapLevelData::DifficultyBeatmapSet::get_difficultyBeatmaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/<GetCoverImageAsync>d__37
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_BeatmapLevelFromPreview_-GetCoverImageAsync-d__37.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview*& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/<GetCoverImageAsync>d__37.MoveNext
void GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/BeatmapLevelFromPreview/<GetCoverImageAsync>d__37.SetStateMachine
void GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::BeatmapLevelFromPreview::$GetCoverImageAsync$d__37::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelFormAssetBundleAsync>d__4
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_-LoadBeatmapLevelFormAssetBundleAsync-d__4.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapLevel> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapLevel*>& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapLevel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel previewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_previewBeatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelDataLoaderSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataLoaderSO*& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataLoaderSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String assetBundlePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_assetBundlePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_assetBundlePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetBundlePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelDataAssetName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_levelDataAssetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_levelDataAssetName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDataAssetName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <levelID>5__2
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$levelID$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$levelID$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelID>5__2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapLevel> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapLevel*>& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapLevel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelFormAssetBundleAsync>d__4.MoveNext
void GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelFormAssetBundleAsync>d__4.SetStateMachine
void GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelFormAssetBundleAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelAsync>d__5
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_-LoadBeatmapLevelAsync-d__5.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: BeatmapLevelDataSO
#include "GlobalNamespace/BeatmapLevelDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapLevel> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapLevel*>& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapLevel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelDataLoaderSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataLoaderSO*& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataLoaderSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapLevelDataSO> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapLevelDataSO*>& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapLevelDataSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelAsync>d__5.MoveNext
void GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelAsync>d__5.SetStateMachine
void GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_0
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_--c__DisplayClass6_0.hpp"
// Including type: UnityEngine.AssetBundleCreateRequest
#include "UnityEngine/AssetBundleCreateRequest.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: BeatmapLevelDataSO
#include "GlobalNamespace/BeatmapLevelDataSO.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AssetBundleCreateRequest assetBundleCreateRequest
[[deprecated("Use field access instead!")]] ::UnityEngine::AssetBundleCreateRequest*& GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0::dyn_assetBundleCreateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0::dyn_assetBundleCreateRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetBundleCreateRequest"))->offset;
  return *reinterpret_cast<::UnityEngine::AssetBundleCreateRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelDataAssetName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0::dyn_levelDataAssetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0::dyn_levelDataAssetName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDataAssetName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<BeatmapLevelDataSO> taskSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::BeatmapLevelDataSO*>*& GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0::dyn_taskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0::dyn_taskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taskSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::BeatmapLevelDataSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_0.<LoadBeatmapLevelDataAsync>b__0
void GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0::$LoadBeatmapLevelDataAsync$b__0(::UnityEngine::AsyncOperation* asyncOperation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0::<LoadBeatmapLevelDataAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadBeatmapLevelDataAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncOperation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncOperation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_1
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_--c__DisplayClass6_1.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_0
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_--c__DisplayClass6_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AssetBundle assetBundle
[[deprecated("Use field access instead!")]] ::UnityEngine::AssetBundle*& GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_1::dyn_assetBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_1::dyn_assetBundle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetBundle"))->offset;
  return *reinterpret_cast<::UnityEngine::AssetBundle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelDataLoaderSO/<>c__DisplayClass6_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0*& GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_2
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_--c__DisplayClass6_2.hpp"
// Including type: UnityEngine.AssetBundleRequest
#include "UnityEngine/AssetBundleRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_1
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_--c__DisplayClass6_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AssetBundleRequest assetBundleRequest
[[deprecated("Use field access instead!")]] ::UnityEngine::AssetBundleRequest*& GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_2::dyn_assetBundleRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_2::dyn_assetBundleRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetBundleRequest"))->offset;
  return *reinterpret_cast<::UnityEngine::AssetBundleRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelDataLoaderSO/<>c__DisplayClass6_1 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_1*& GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/<>c__DisplayClass6_2.<LoadBeatmapLevelDataAsync>b__1
void GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_2::$LoadBeatmapLevelDataAsync$b__1(::UnityEngine::AsyncOperation* asyncOperation2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$$c__DisplayClass6_2::<LoadBeatmapLevelDataAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadBeatmapLevelDataAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncOperation2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncOperation2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelDataAsync>d__6
#include "GlobalNamespace/BeatmapLevelDataLoaderSO_-LoadBeatmapLevelDataAsync-d__6.hpp"
// Including type: BeatmapLevelDataSO
#include "GlobalNamespace/BeatmapLevelDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapLevelDataSO> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::BeatmapLevelDataSO*>& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::BeatmapLevelDataSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelDataAssetName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_levelDataAssetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_levelDataAssetName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDataAssetName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String assetBundlePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_assetBundlePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_assetBundlePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assetBundlePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapLevelDataSO> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapLevelDataSO*>& GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapLevelDataSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelDataAsync>d__6.MoveNext
void GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataLoaderSO/<LoadBeatmapLevelDataAsync>d__6.SetStateMachine
void GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataLoaderSO::$LoadBeatmapLevelDataAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelLoader
#include "GlobalNamespace/BeatmapLevelLoader.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapLevelLoader/<LoadBeatmapLevelAsync>d__4
#include "GlobalNamespace/BeatmapLevelLoader_-LoadBeatmapLevelAsync-d__4.hpp"
// Including type: BeatmapLevelDataLoaderSO
#include "GlobalNamespace/BeatmapLevelDataLoaderSO.hpp"
// Including type: IBeatmapDataAssetFileModel
#include "GlobalNamespace/IBeatmapDataAssetFileModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelDataLoaderSO _beatmapLevelDataLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataLoaderSO*& GlobalNamespace::BeatmapLevelLoader::dyn__beatmapLevelDataLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::dyn__beatmapLevelDataLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelDataLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataLoaderSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapDataAssetFileModel _beatmapDataAssetFileModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapDataAssetFileModel*& GlobalNamespace::BeatmapLevelLoader::dyn__beatmapDataAssetFileModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::dyn__beatmapDataAssetFileModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataAssetFileModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapDataAssetFileModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelLoader.LoadBeatmapLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult>* GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelAsync(::GlobalNamespace::IPreviewBeatmapLevel* previewLevel, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBeatmapLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult>*, false>(this, ___internal__method, previewLevel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelLoader/LoadBeatmapLevelResult
#include "GlobalNamespace/BeatmapLevelLoader.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isError
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult::dyn_isError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult::dyn_isError");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevel beatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult::dyn_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult::dyn_beatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelLoader/LoadBeatmapLevelResult..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult::LoadBeatmapLevelResult(bool isError, ::GlobalNamespace::IBeatmapLevel* beatmapLevel)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelLoader/<LoadBeatmapLevelAsync>d__4
#include "GlobalNamespace/BeatmapLevelLoader_-LoadBeatmapLevelAsync-d__4.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapLevelLoader/LoadBeatmapLevelResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult>& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelLoader*& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel previewLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_previewLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_previewLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevel <level>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$level$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$level$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<level>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<GetAssetBundleFileResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::GetAssetBundleFileResult>& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::GetAssetBundleFileResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapLevel> <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapLevel*>& GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapLevel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelLoader/<LoadBeatmapLevelAsync>d__4.MoveNext
void GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelLoader/<LoadBeatmapLevelAsync>d__4.SetStateMachine
void GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelLoader::$LoadBeatmapLevelAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficultyMethods
#include "GlobalNamespace/BeatmapDifficultyMethods.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDifficultyMethods.Name
::StringW GlobalNamespace::BeatmapDifficultyMethods::Name(::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMethods::Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMethods", "Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficulty);
}
// Autogenerated method: BeatmapDifficultyMethods.ShortName
::StringW GlobalNamespace::BeatmapDifficultyMethods::ShortName(::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMethods::ShortName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMethods", "ShortName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficulty);
}
// Autogenerated method: BeatmapDifficultyMethods.DefaultRating
int GlobalNamespace::BeatmapDifficultyMethods::DefaultRating(::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMethods::DefaultRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMethods", "DefaultRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficulty);
}
// Autogenerated method: BeatmapDifficultyMethods.NoteJumpMovementSpeed
float GlobalNamespace::BeatmapDifficultyMethods::NoteJumpMovementSpeed(::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMethods::NoteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMethods", "NoteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficulty);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapIdentifierNetSerializableHelper
#include "GlobalNamespace/BeatmapIdentifierNetSerializableHelper.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapIdentifierNetSerializableHelper.GetIdentifier
::GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::BeatmapIdentifierNetSerializableHelper::GetIdentifier(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapIdentifierNetSerializableHelper::GetIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapIdentifierNetSerializableHelper", "GetIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated method: BeatmapIdentifierNetSerializableHelper.HasIdentifier
bool GlobalNamespace::BeatmapIdentifierNetSerializableHelper::HasIdentifier(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapIdentifierNetSerializableHelper::HasIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapIdentifierNetSerializableHelper", "HasIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(beatmapId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficultyBeatmap, beatmapId);
}
// Autogenerated method: BeatmapIdentifierNetSerializableHelper.ToPreviewDifficultyBeatmap
::GlobalNamespace::PreviewDifficultyBeatmap* GlobalNamespace::BeatmapIdentifierNetSerializableHelper::ToPreviewDifficultyBeatmap(::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::BeatmapLevelsModel* beatmapLevelsModel, ::GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapIdentifierNetSerializableHelper::ToPreviewDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapIdentifierNetSerializableHelper", "ToPreviewDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(beatmapLevelsModel), ::il2cpp_utils::ExtractType(beatmapCharacteristicCollection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PreviewDifficultyBeatmap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapId, beatmapLevelsModel, beatmapCharacteristicCollection);
}
// Autogenerated method: BeatmapIdentifierNetSerializableHelper.ToIdentifier
::GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::BeatmapIdentifierNetSerializableHelper::ToIdentifier(::GlobalNamespace::PreviewDifficultyBeatmap* previewDifficultyBeatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapIdentifierNetSerializableHelper::ToIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapIdentifierNetSerializableHelper", "ToIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewDifficultyBeatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previewDifficultyBeatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevelCollection.get_beatmapLevels
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::IBeatmapLevelCollection::get_beatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapLevelCollection::get_beatmapLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelCollection
#include "GlobalNamespace/BeatmapLevelCollection.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<IPreviewBeatmapLevel> _levels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::BeatmapLevelCollection::dyn__levels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelCollection::dyn__levels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelCollection.get_beatmapLevels
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::BeatmapLevelCollection::get_beatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelCollection::get_beatmapLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelCollection.CreateBeatmapLevelCollectionByUsingBeatmapCharacteristicFiltering
::GlobalNamespace::BeatmapLevelCollection* GlobalNamespace::BeatmapLevelCollection::CreateBeatmapLevelCollectionByUsingBeatmapCharacteristicFiltering(::GlobalNamespace::IBeatmapLevelCollection* beatmapLevelCollection, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelCollection::CreateBeatmapLevelCollectionByUsingBeatmapCharacteristicFiltering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelCollection", "CreateBeatmapLevelCollectionByUsingBeatmapCharacteristicFiltering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelCollection), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevelCollection, beatmapCharacteristic);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelCollectionSO
#include "GlobalNamespace/BeatmapLevelCollectionSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO[] _beatmapLevels
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelSO*>& GlobalNamespace::BeatmapLevelCollectionSO::dyn__beatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelCollectionSO::dyn__beatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevels"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelCollectionSO.get_beatmapLevels
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::BeatmapLevelCollectionSO::get_beatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelCollectionSO::get_beatmapLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelData
#include "GlobalNamespace/BeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.AudioClip _audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::BeatmapLevelData::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelData::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<IDifficultyBeatmapSet> _difficultyBeatmapSets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>*& GlobalNamespace::BeatmapLevelData::dyn__difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelData::dyn__difficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelData.get_audioClip
::UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelData::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelData::get_audioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelData.get_difficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelData::get_difficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataSO
#include "GlobalNamespace/BeatmapLevelDataSO.hpp"
// Including type: BeatmapLevelDataSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelDataSO_DifficultyBeatmapSet.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::BeatmapLevelDataSO::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelDataSO/DifficultyBeatmapSet[] _difficultyBeatmapSets
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*>& GlobalNamespace::BeatmapLevelDataSO::dyn__difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::dyn__difficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelDataSO/DifficultyBeatmapSet[] _no360MovementDifficultyBeatmapSets
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*>& GlobalNamespace::BeatmapLevelDataSO::dyn__no360MovementDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::dyn__no360MovementDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_no360MovementDifficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataSO.get_audioClip
::UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelDataSO::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::get_audioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataSO.get_difficultyBeatmapSets
::ArrayW<::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*> GlobalNamespace::BeatmapLevelDataSO::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::get_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelDataSO_DifficultyBeatmapSet.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmap
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _beatmapCharacteristicSerializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::dyn__beatmapCharacteristicSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::dyn__beatmapCharacteristicSerializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicSerializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO/DifficultyBeatmap[] _difficultyBeatmaps
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*>& GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::dyn__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::dyn__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelDataSO/DifficultyBeatmapSet.get_beatmapCharacteristicSerializedName
::StringW GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::get_beatmapCharacteristicSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::get_beatmapCharacteristicSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataSO/DifficultyBeatmapSet.get_difficultyBeatmaps
::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*> GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelFilterModel
#include "GlobalNamespace/BeatmapLevelFilterModel.hpp"
// Including type: BeatmapLevelFilterModel/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapLevelFilterModel_--c__DisplayClass0_0.hpp"
// Including type: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0
#include "GlobalNamespace/BeatmapLevelFilterModel_-FilerBeatmapLevelPackCollectionAsync-d__0.hpp"
// Including type: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2
#include "GlobalNamespace/BeatmapLevelFilterModel_-GetAllBeatmapLevelsAsync-d__2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelFilterModel.FilerBeatmapLevelPackCollectionAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapLevelCollection*>* GlobalNamespace::BeatmapLevelFilterModel::FilerBeatmapLevelPackCollectionAsync(::ArrayW<::GlobalNamespace::IBeatmapLevelPack*> beatmapLevelPacks, ::GlobalNamespace::LevelFilterParams* levelFilterParams, ::GlobalNamespace::PlayerDataModel* playerDataModel, ::GlobalNamespace::AdditionalContentModel* additionalContentModel, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::FilerBeatmapLevelPackCollectionAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "FilerBeatmapLevelPackCollectionAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPacks), ::il2cpp_utils::ExtractType(levelFilterParams), ::il2cpp_utils::ExtractType(playerDataModel), ::il2cpp_utils::ExtractType(additionalContentModel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapLevelCollection*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevelPacks, levelFilterParams, playerDataModel, additionalContentModel, cancellationToken);
}
// Autogenerated method: BeatmapLevelFilterModel.LevelContainsText
bool GlobalNamespace::BeatmapLevelFilterModel::LevelContainsText(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, ::ArrayW<::StringW> searchTexts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::LevelContainsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "LevelContainsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(searchTexts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevel, searchTexts);
}
// Autogenerated method: BeatmapLevelFilterModel.GetAllBeatmapLevelsAsync
::System::Threading::Tasks::Task_1<::System::Collections::Generic::List_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>* GlobalNamespace::BeatmapLevelFilterModel::GetAllBeatmapLevelsAsync(::ArrayW<::GlobalNamespace::IBeatmapLevelPack*> beatmapLevelPacks, ::GlobalNamespace::SongPackMask songPackMask, bool onlyOwned, ::GlobalNamespace::AdditionalContentModel* additionalContentModel, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::GetAllBeatmapLevelsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "GetAllBeatmapLevelsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPacks), ::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(onlyOwned), ::il2cpp_utils::ExtractType(additionalContentModel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Collections::Generic::List_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevelPacks, songPackMask, onlyOwned, additionalContentModel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelFilterModel/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapLevelFilterModel_--c__DisplayClass0_0.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean searchByText
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::dyn_searchByText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::dyn_searchByText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchByText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] searchTexts
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::dyn_searchTexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::dyn_searchTexts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchTexts"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelFilterParams levelFilterParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelFilterParams*& GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::dyn_levelFilterParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::dyn_levelFilterParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFilterParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelFilterParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerDataModel playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::dyn_playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::dyn_playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelFilterModel/<>c__DisplayClass0_0.<FilerBeatmapLevelPackCollectionAsync>b__0
bool GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::$FilerBeatmapLevelPackCollectionAsync$b__0(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::<FilerBeatmapLevelPackCollectionAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FilerBeatmapLevelPackCollectionAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0
#include "GlobalNamespace/BeatmapLevelFilterModel_-FilerBeatmapLevelPackCollectionAsync-d__0.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapLevelFilterModel/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapLevelFilterModel_--c__DisplayClass0_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapLevelCollection> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapLevelCollection*>& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapLevelCollection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelFilterParams levelFilterParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelFilterParams*& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_levelFilterParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_levelFilterParams");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFilterParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelFilterParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerDataModel playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_playerDataModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IBeatmapLevelPack[] beatmapLevelPacks
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_beatmapLevelPacks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_additionalContentModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelFilterModel/<>c__DisplayClass0_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0*& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Collections.Generic.List`1<IPreviewBeatmapLevel>> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Collections::Generic::List_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>& GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Collections::Generic::List_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0.MoveNext
void GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0.SetStateMachine
void GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2
#include "GlobalNamespace/BeatmapLevelFilterModel_-GetAllBeatmapLevelsAsync-d__2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Collections.Generic.List`1<IPreviewBeatmapLevel>> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Collections::Generic::List_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Collections::Generic::List_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IBeatmapLevelPack[] beatmapLevelPacks
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_beatmapLevelPacks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SongPackMask songPackMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMask& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_songPackMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songPackMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean onlyOwned
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_onlyOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_onlyOwned");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlyOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_additionalContentModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IPreviewBeatmapLevel> <levels>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$levels$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$levels$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levels>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack[] <>7__wrap2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<IPreviewBeatmapLevel> <>7__wrap4
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel <beatmapLevel>5__6
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$beatmapLevel$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$beatmapLevel$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapLevel>5__6"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2.MoveNext
void GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2.SetStateMachine
void GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevelPack.get_packID
::StringW GlobalNamespace::IBeatmapLevelPack::get_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapLevelPack::get_packID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapLevelPack.get_packName
::StringW GlobalNamespace::IBeatmapLevelPack::get_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapLevelPack::get_packName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapLevelPack.get_shortPackName
::StringW GlobalNamespace::IBeatmapLevelPack::get_shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapLevelPack::get_shortPackName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelPack
#include "GlobalNamespace/BeatmapLevelPack.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _levelPackID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelPack::dyn__levelPackID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::dyn__levelPackID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPackID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _packName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelPack::dyn__packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::dyn__packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _shortPackName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelPack::dyn__shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::dyn__shortPackName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortPackName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::BeatmapLevelPack::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _smallCoverImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::BeatmapLevelPack::dyn__smallCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::dyn__smallCoverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallCoverImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelCollection _beatmapLevelCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelCollection*& GlobalNamespace::BeatmapLevelPack::dyn__beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::dyn__beatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelPack.get_packID
::StringW GlobalNamespace::BeatmapLevelPack::get_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::get_packID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_packName
::StringW GlobalNamespace::BeatmapLevelPack::get_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::get_packName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_shortPackName
::StringW GlobalNamespace::BeatmapLevelPack::get_shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::get_shortPackName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_collectionName
::StringW GlobalNamespace::BeatmapLevelPack::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_coverImage
::UnityEngine::Sprite* GlobalNamespace::BeatmapLevelPack::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_smallCoverImage
::UnityEngine::Sprite* GlobalNamespace::BeatmapLevelPack::get_smallCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::get_smallCoverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smallCoverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_beatmapLevelCollection
::GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::BeatmapLevelPack::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.CreateBeatmapLevelPackByUsingBeatmapCharacteristicFiltering
::GlobalNamespace::BeatmapLevelPack* GlobalNamespace::BeatmapLevelPack::CreateBeatmapLevelPackByUsingBeatmapCharacteristicFiltering(::GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPack::CreateBeatmapLevelPackByUsingBeatmapCharacteristicFiltering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelPack", "CreateBeatmapLevelPackByUsingBeatmapCharacteristicFiltering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPack), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPack*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevelPack, beatmapCharacteristic);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevelPackCollection.get_beatmapLevelPacks
::ArrayW<::GlobalNamespace::IBeatmapLevelPack*> GlobalNamespace::IBeatmapLevelPackCollection::get_beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapLevelPackCollection::get_beatmapLevelPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelPackCollection
#include "GlobalNamespace/BeatmapLevelPackCollection.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack[] _beatmapLevelPacks
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>& GlobalNamespace::BeatmapLevelPackCollection::dyn__beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollection::dyn__beatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelPackCollection.get_beatmapLevelPacks
::ArrayW<::GlobalNamespace::IBeatmapLevelPack*> GlobalNamespace::BeatmapLevelPackCollection::get_beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollection::get_beatmapLevelPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelPackCollectionContainerSO
#include "GlobalNamespace/BeatmapLevelPackCollectionContainerSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _beatmapLevelPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::BeatmapLevelPackCollectionContainerSO::dyn__beatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollectionContainerSO::dyn__beatmapLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelPackCollectionContainerSO.get_beatmapLevelPackCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::BeatmapLevelPackCollectionContainerSO::get_beatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollectionContainerSO::get_beatmapLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackSO[] _beatmapLevelPacks
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*>& GlobalNamespace::BeatmapLevelPackCollectionSO::dyn__beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollectionSO::dyn__beatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PreviewBeatmapLevelPackSO[] _previewBeatmapLevelPack
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PreviewBeatmapLevelPackSO*>& GlobalNamespace::BeatmapLevelPackCollectionSO::dyn__previewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollectionSO::dyn__previewBeatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelPack"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PreviewBeatmapLevelPackSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack[] _allBeatmapLevelPacks
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>& GlobalNamespace::BeatmapLevelPackCollectionSO::dyn__allBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollectionSO::dyn__allBeatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allBeatmapLevelPacks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelPackCollectionSO.get_beatmapLevelPacks
::ArrayW<::GlobalNamespace::IBeatmapLevelPack*> GlobalNamespace::BeatmapLevelPackCollectionSO::get_beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollectionSO::get_beatmapLevelPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackCollectionSO.LoadAllBeatmapLevelPacks
void GlobalNamespace::BeatmapLevelPackCollectionSO::LoadAllBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackCollectionSO::LoadAllBeatmapLevelPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAllBeatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: BeatmapLevelCollectionSO
#include "GlobalNamespace/BeatmapLevelCollectionSO.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _packID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelPackSO::dyn__packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::dyn__packID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _packName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelPackSO::dyn__packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::dyn__packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _shortPackName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelPackSO::dyn__shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::dyn__shortPackName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortPackName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::BeatmapLevelPackSO::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _smallCoverImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::BeatmapLevelPackSO::dyn__smallCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::dyn__smallCoverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallCoverImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelCollectionSO _beatmapLevelCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelCollectionSO*& GlobalNamespace::BeatmapLevelPackSO::dyn__beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::dyn__beatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelPackSO.get_packID
::StringW GlobalNamespace::BeatmapLevelPackSO::get_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::get_packID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_packName
::StringW GlobalNamespace::BeatmapLevelPackSO::get_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::get_packName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_shortPackName
::StringW GlobalNamespace::BeatmapLevelPackSO::get_shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::get_shortPackName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_collectionName
::StringW GlobalNamespace::BeatmapLevelPackSO::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_coverImage
::UnityEngine::Sprite* GlobalNamespace::BeatmapLevelPackSO::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_smallCoverImage
::UnityEngine::Sprite* GlobalNamespace::BeatmapLevelPackSO::get_smallCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::get_smallCoverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smallCoverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_beatmapLevelCollection
::GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::BeatmapLevelPackSO::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelPackSO::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmapSet.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmap
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapLevelSO/<GetPreviewAudioClipAsync>d__65
#include "GlobalNamespace/BeatmapLevelSO_-GetPreviewAudioClipAsync-d__65.hpp"
// Including type: BeatmapLevelSO/<GetCoverImageAsync>d__66
#include "GlobalNamespace/BeatmapLevelSO_-GetCoverImageAsync-d__66.hpp"
// Including type: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__69
#include "GlobalNamespace/BeatmapLevelSO_-GetBeatmapLevelDataAsync-d__69.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _levelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelSO::dyn__levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelSO::dyn__songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songSubName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelSO::dyn__songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songAuthorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelSO::dyn__songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelAuthorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelSO::dyn__levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::BeatmapLevelSO::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatsPerMinute
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapLevelSO::dyn__beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTimeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapLevelSO::dyn__songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shuffle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapLevelSO::dyn__shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shufflePeriod
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapLevelSO::dyn__shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapLevelSO::dyn__previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapLevelSO::dyn__previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::BeatmapLevelSO::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapLevelSO::dyn__environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _allDirectionsEnvironmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapLevelSO::dyn__allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__allDirectionsEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDirectionsEnvironmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO/DifficultyBeatmapSet[] _difficultyBeatmapSets
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet*>& GlobalNamespace::BeatmapLevelSO::dyn__difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__difficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _ignore360MovementBeatmaps
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapLevelSO::dyn__ignore360MovementBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__ignore360MovementBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignore360MovementBeatmaps"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<BeatmapLevelSO/DifficultyBeatmapSet> _no360MovementDifficultyBeatmapSets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet*>*& GlobalNamespace::BeatmapLevelSO::dyn__no360MovementDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__no360MovementDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_no360MovementDifficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<PreviewDifficultyBeatmapSet> _previewDifficultyBeatmapSets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*& GlobalNamespace::BeatmapLevelSO::dyn__previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__previewDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDifficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<PreviewDifficultyBeatmapSet> _no360MovementPreviewDifficultyBeatmapSets
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*& GlobalNamespace::BeatmapLevelSO::dyn__no360MovementPreviewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__no360MovementPreviewDifficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_no360MovementPreviewDifficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelData _beatmapLevelData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelData*& GlobalNamespace::BeatmapLevelSO::dyn__beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__beatmapLevelData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO/GetBeatmapLevelDataResult _getBeatmapLevelDataResult
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult& GlobalNamespace::BeatmapLevelSO::dyn__getBeatmapLevelDataResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::dyn__getBeatmapLevelDataResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getBeatmapLevelDataResult"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO.get_levelID
::StringW GlobalNamespace::BeatmapLevelSO::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songName
::StringW GlobalNamespace::BeatmapLevelSO::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songSubName
::StringW GlobalNamespace::BeatmapLevelSO::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songAuthorName
::StringW GlobalNamespace::BeatmapLevelSO::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_levelAuthorName
::StringW GlobalNamespace::BeatmapLevelSO::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_beatsPerMinute
float GlobalNamespace::BeatmapLevelSO::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songTimeOffset
float GlobalNamespace::BeatmapLevelSO::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_shuffle
float GlobalNamespace::BeatmapLevelSO::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_shufflePeriod
float GlobalNamespace::BeatmapLevelSO::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_previewStartTime
float GlobalNamespace::BeatmapLevelSO::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_previewDuration
float GlobalNamespace::BeatmapLevelSO::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_coverImage
::UnityEngine::Sprite* GlobalNamespace::BeatmapLevelSO::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_coverImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_environmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::BeatmapLevelSO::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_allDirectionsEnvironmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::BeatmapLevelSO::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_difficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelSO::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songDuration
float GlobalNamespace::BeatmapLevelSO::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_previewDifficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelSO::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songPreviewAudioClip
::UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelSO::get_songPreviewAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_songPreviewAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPreviewAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songAudioClip
::UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelSO::get_songAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_songAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_beatmapLevelData
::GlobalNamespace::IBeatmapLevelData* GlobalNamespace::BeatmapLevelSO::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.InitData
void GlobalNamespace::BeatmapLevelSO::InitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::InitData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.GetPreviewAudioClipAsync
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::BeatmapLevelSO::GetPreviewAudioClipAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetPreviewAudioClipAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: BeatmapLevelSO.GetCoverImageAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::BeatmapLevelSO::GetCoverImageAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: BeatmapLevelSO.GetBeatmapLevelDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>* GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataAsync(::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapLevelDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>*, false>(this, ___internal__method, token);
}
// Autogenerated method: BeatmapLevelSO.GetDifficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::BeatmapLevelSO::GetDifficultyBeatmap(::GlobalNamespace::BeatmapCharacteristicSO* characteristic, ::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characteristic), ::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method, characteristic, difficulty);
}
// Autogenerated method: BeatmapLevelSO.InitFull
void GlobalNamespace::BeatmapLevelSO::InitFull(::StringW levelID, ::StringW songName, ::StringW songSubName, ::StringW songAuthorName, ::StringW levelAuthorName, ::UnityEngine::AudioClip* audioClip, float beatsPerMinute, float songTimeOffset, float shuffle, float shufflePeriod, float previewStartTime, float previewDuration, ::UnityEngine::Sprite* coverImage, ::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::EnvironmentInfoSO* allDirectionsEnvironmentInfo, ::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet*> difficultyBeatmapSets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::InitFull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitFull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelID), ::il2cpp_utils::ExtractType(songName), ::il2cpp_utils::ExtractType(songSubName), ::il2cpp_utils::ExtractType(songAuthorName), ::il2cpp_utils::ExtractType(levelAuthorName), ::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(beatsPerMinute), ::il2cpp_utils::ExtractType(songTimeOffset), ::il2cpp_utils::ExtractType(shuffle), ::il2cpp_utils::ExtractType(shufflePeriod), ::il2cpp_utils::ExtractType(previewStartTime), ::il2cpp_utils::ExtractType(previewDuration), ::il2cpp_utils::ExtractType(coverImage), ::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(allDirectionsEnvironmentInfo), ::il2cpp_utils::ExtractType(difficultyBeatmapSets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelID, songName, songSubName, songAuthorName, levelAuthorName, audioClip, beatsPerMinute, songTimeOffset, shuffle, shufflePeriod, previewStartTime, previewDuration, coverImage, environmentInfo, allDirectionsEnvironmentInfo, difficultyBeatmapSets);
}
// Autogenerated method: BeatmapLevelSO.OnEnable
void GlobalNamespace::BeatmapLevelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmap
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO/DifficultyBeatmap[] _difficultyBeatmaps
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*>& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::dyn__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::dyn__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmapSet.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmapSet.get_difficultyBeatmaps
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::get_difficultyBeatmaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmapSet.SetParentLevel
void GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::SetParentLevel(::GlobalNamespace::IBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::SetParentLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/DifficultyBeatmap
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__13
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap_-GetBeatmapDataBasicInfoAsync-d__13.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmap/<GetBeatmapDataAsync>d__14
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap_-GetBeatmapDataAsync-d__14.hpp"
// Including type: BeatmapDataSO
#include "GlobalNamespace/BeatmapDataSO.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _difficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _difficultyRank
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpMovementSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpStartBeatOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataSO _beatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevel _parentLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__parentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__parentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmapSet _parentDifficultyBeatmapSet
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmapSet*& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::dyn__parentDifficultyBeatmapSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentDifficultyBeatmapSet"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmapSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_difficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_difficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_difficultyRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_level
::GlobalNamespace::IBeatmapLevel* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_level");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_parentDifficultyBeatmapSet
::GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_parentDifficultyBeatmapSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.GetBeatmapDataBasicInfoAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::GetBeatmapDataBasicInfoAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::GetBeatmapDataBasicInfoAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataBasicInfoAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.GetBeatmapDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::GetBeatmapDataAsync(::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::GetBeatmapDataAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>*, false>(this, ___internal__method, environmentInfo, playerSpecificSettings);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.SetParents
void GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::SetParents(::GlobalNamespace::IBeatmapLevel* parentLevel, ::GlobalNamespace::IDifficultyBeatmapSet* parentDifficultyBeatmapSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::SetParents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentLevel), ::il2cpp_utils::ExtractType(parentDifficultyBeatmapSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentLevel, parentDifficultyBeatmapSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/DifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__13
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap_-GetBeatmapDataBasicInfoAsync-d__13.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapDataBasicInfo> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSO/DifficultyBeatmap <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapDataBasicInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__13.MoveNext
void GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__13.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__13::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/DifficultyBeatmap/<GetBeatmapDataAsync>d__14
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap_-GetBeatmapDataAsync-d__14.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IReadonlyBeatmapData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSO/DifficultyBeatmap <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_environmentInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_playerSpecificSettings");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IReadonlyBeatmapData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap/<GetBeatmapDataAsync>d__14.MoveNext
void GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap/<GetBeatmapDataAsync>d__14.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::$GetBeatmapDataAsync$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/GetBeatmapLevelDataResult
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: BeatmapLevelSO/GetBeatmapLevelDataResult/Result
// Already included the same include: GlobalNamespace/BeatmapLevelSO.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapLevelSO/GetBeatmapLevelDataResult/Result result
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result& GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::dyn_result");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevelData beatmapLevelData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelData*& GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::dyn_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::dyn_beatmapLevelData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevelData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO/GetBeatmapLevelDataResult..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::GetBeatmapLevelDataResult(::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result result, ::GlobalNamespace::IBeatmapLevelData* beatmapLevelData)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/GetBeatmapLevelDataResult/Result
#include "GlobalNamespace/BeatmapLevelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result OK
::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result>("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "OK"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result OK
void GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_OK(::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result NotOwned
::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_NotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_NotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result>("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "NotOwned"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result NotOwned
void GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_NotOwned(::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_NotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "NotOwned", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result Fail
::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_Fail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_Fail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result>("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result Fail
void GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_Fail(::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_Fail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "Fail", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/<GetPreviewAudioClipAsync>d__65
#include "GlobalNamespace/BeatmapLevelSO_-GetPreviewAudioClipAsync-d__65.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.AudioClip> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::AudioClip*>& GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>& GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO/<GetPreviewAudioClipAsync>d__65.MoveNext
void GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/<GetPreviewAudioClipAsync>d__65.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__65::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/<GetCoverImageAsync>d__66
#include "GlobalNamespace/BeatmapLevelSO_-GetCoverImageAsync-d__66.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>& GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO/<GetCoverImageAsync>d__66.MoveNext
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/<GetCoverImageAsync>d__66.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__66::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__69
#include "GlobalNamespace/BeatmapLevelSO_-GetBeatmapLevelDataAsync-d__69.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapLevelSO/GetBeatmapLevelDataResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>& GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapLevelSO/GetBeatmapLevelDataResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>& GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__69.MoveNext
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__69.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__69::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: LevelDataAssetDownloadUpdate
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
// Including type: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__32
#include "GlobalNamespace/BeatmapLevelsModel_-ReloadCustomLevelPackCollectionAsync-d__32.hpp"
// Including type: BeatmapLevelsModel/<>c__DisplayClass35_0
#include "GlobalNamespace/BeatmapLevelsModel_--c__DisplayClass35_0.hpp"
// Including type: BeatmapLevelsModel/<>c
#include "GlobalNamespace/BeatmapLevelsModel_--c.hpp"
// Including type: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__38
#include "GlobalNamespace/BeatmapLevelsModel_-GetBeatmapLevelAsync-d__38.hpp"
// Including type: BeatmapLevelPackCollectionContainerSO
#include "GlobalNamespace/BeatmapLevelPackCollectionContainerSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: BeatmapLevelDataLoaderSO
#include "GlobalNamespace/BeatmapLevelDataLoaderSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: IBeatmapDataAssetFileModel
#include "GlobalNamespace/IBeatmapDataAssetFileModel.hpp"
// Including type: AudioClipAsyncLoader
#include "GlobalNamespace/AudioClipAsyncLoader.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMCache`2
#include "GlobalNamespace/HMCache_2.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapLevelLoader
#include "GlobalNamespace/BeatmapLevelLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionContainerSO _dlcLevelPackCollectionContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionContainerSO*& GlobalNamespace::BeatmapLevelsModel::dyn__dlcLevelPackCollectionContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__dlcLevelPackCollectionContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcLevelPackCollectionContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::BeatmapLevelsModel::dyn__ostAndExtrasPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__ostAndExtrasPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ostAndExtrasPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelDataLoaderSO _beatmapLevelDataLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelDataLoaderSO*& GlobalNamespace::BeatmapLevelsModel::dyn__beatmapLevelDataLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__beatmapLevelDataLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelDataLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelDataLoaderSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxCachedBeatmapLevels
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelsModel::dyn__maxCachedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__maxCachedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCachedBeatmapLevels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::BeatmapLevelsModel::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapDataAssetFileModel _beatmapDataAssetFileModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapDataAssetFileModel*& GlobalNamespace::BeatmapLevelsModel::dyn__beatmapDataAssetFileModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__beatmapDataAssetFileModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataAssetFileModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapDataAssetFileModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioClipAsyncLoader _audioClipAsyncLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipAsyncLoader*& GlobalNamespace::BeatmapLevelsModel::dyn__audioClipAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__audioClipAsyncLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipAsyncLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapLevelsModel/LevelDownloadingUpdate> levelDownloadingUpdateEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>*& GlobalNamespace::BeatmapLevelsModel::dyn_levelDownloadingUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn_levelDownloadingUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDownloadingUpdateEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPackCollection _allLoadedBeatmapLevelPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPackCollection*& GlobalNamespace::BeatmapLevelsModel::dyn__allLoadedBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__allLoadedBeatmapLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allLoadedBeatmapLevelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPackCollection _allLoadedBeatmapLevelWithoutCustomLevelPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPackCollection*& GlobalNamespace::BeatmapLevelsModel::dyn__allLoadedBeatmapLevelWithoutCustomLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__allLoadedBeatmapLevelWithoutCustomLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allLoadedBeatmapLevelWithoutCustomLevelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPackCollection _customLevelPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPackCollection*& GlobalNamespace::BeatmapLevelsModel::dyn__customLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__customLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customLevelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPackCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMCache`2<System.String,IBeatmapLevel> _loadedBeatmapLevels
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HMCache_2<::StringW, ::GlobalNamespace::IBeatmapLevel*>*& GlobalNamespace::BeatmapLevelsModel::dyn__loadedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__loadedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedBeatmapLevels"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HMCache_2<::StringW, ::GlobalNamespace::IBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,IPreviewBeatmapLevel> _loadedPreviewBeatmapLevels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::BeatmapLevelsModel::dyn__loadedPreviewBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__loadedPreviewBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedPreviewBeatmapLevels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelLoader _beatmapLevelLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelLoader*& GlobalNamespace::BeatmapLevelsModel::dyn__beatmapLevelLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::dyn__beatmapLevelLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelsModel.get_ostAndExtrasPackCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::BeatmapLevelsModel::get_ostAndExtrasPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::get_ostAndExtrasPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ostAndExtrasPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_dlcBeatmapLevelPackCollection
::GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_dlcBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::get_dlcBeatmapLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dlcBeatmapLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_allLoadedBeatmapLevelPackCollection
::GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allLoadedBeatmapLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection
::GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_customLevelPackCollection
::GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_customLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::get_customLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customLevelPackCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.add_levelDownloadingUpdateEvent
void GlobalNamespace::BeatmapLevelsModel::add_levelDownloadingUpdateEvent(::System::Action_1<::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::add_levelDownloadingUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDownloadingUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapLevelsModel.remove_levelDownloadingUpdateEvent
void GlobalNamespace::BeatmapLevelsModel::remove_levelDownloadingUpdateEvent(::System::Action_1<::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::remove_levelDownloadingUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDownloadingUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapLevelsModel.Init
void GlobalNamespace::BeatmapLevelsModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.Start
void GlobalNamespace::BeatmapLevelsModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.OnDestroy
void GlobalNamespace::BeatmapLevelsModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.ClearLoadedBeatmapLevelsCaches
void GlobalNamespace::BeatmapLevelsModel::ClearLoadedBeatmapLevelsCaches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::ClearLoadedBeatmapLevelsCaches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLoadedBeatmapLevelsCaches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.ReloadCustomLevelPackCollectionAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapLevelPackCollection*>* GlobalNamespace::BeatmapLevelsModel::ReloadCustomLevelPackCollectionAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::ReloadCustomLevelPackCollectionAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadCustomLevelPackCollectionAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapLevelPackCollection*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPackForLevelId
::GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::BeatmapLevelsModel::GetLevelPackForLevelId(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::GetLevelPackForLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPackForLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPack
::GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::BeatmapLevelsModel::GetLevelPack(::StringW levePacklId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::GetLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levePacklId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method, levePacklId);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPreviewForLevelId
::GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::BeatmapLevelsModel::GetLevelPreviewForLevelId(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::GetLevelPreviewForLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPreviewForLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.IsBeatmapLevelLoaded
bool GlobalNamespace::BeatmapLevelsModel::IsBeatmapLevelLoaded(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::IsBeatmapLevelLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBeatmapLevelLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetBeatmapLevelIfLoaded
::GlobalNamespace::IBeatmapLevel* GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelIfLoaded(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelIfLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapLevelIfLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetBeatmapLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>* GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelAsync(::StringW levelID, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelID), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>*, false>(this, ___internal__method, levelID, cancellationToken);
}
// Autogenerated method: BeatmapLevelsModel.HandleLevelDataAssetDownloadUpdate
void GlobalNamespace::BeatmapLevelsModel::HandleLevelDataAssetDownloadUpdate(::GlobalNamespace::LevelDataAssetDownloadUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::HandleLevelDataAssetDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDataAssetDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: BeatmapLevelsModel.HandleItemWillBeRemovedFromCache
void GlobalNamespace::BeatmapLevelsModel::HandleItemWillBeRemovedFromCache(::GlobalNamespace::IBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::HandleItemWillBeRemovedFromCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleItemWillBeRemovedFromCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: BeatmapLevelsModel.UpdateLoadedPreviewLevels
void GlobalNamespace::BeatmapLevelsModel::UpdateLoadedPreviewLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::UpdateLoadedPreviewLevels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLoadedPreviewLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.UpdateAllLoadedBeatmapLevelPacks
void GlobalNamespace::BeatmapLevelsModel::UpdateAllLoadedBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::UpdateAllLoadedBeatmapLevelPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllLoadedBeatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/GetBeatmapLevelResult
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isError
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::dyn_isError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::dyn_isError");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevel beatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::dyn_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::dyn_beatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelsModel/GetBeatmapLevelResult..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult::GetBeatmapLevelResult(bool isError, ::GlobalNamespace::IBeatmapLevel* beatmapLevel)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/LevelDownloadingUpdate
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState
// Already included the same include: GlobalNamespace/BeatmapLevelsModel.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String levelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::dyn_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::dyn_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 bytesTotal
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::dyn_bytesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::dyn_bytesTotal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTotal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 bytesTransferred
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::dyn_bytesTransferred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::dyn_bytesTransferred");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesTransferred"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState downloadingState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState& GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::dyn_downloadingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::dyn_downloadingState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadingState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelsModel/LevelDownloadingUpdate..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::LevelDownloadingUpdate(::StringW levelID, uint bytesTotal, uint bytesTransferred, ::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState downloadingState)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState PreparingToDownload
::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_PreparingToDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_PreparingToDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "PreparingToDownload"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState PreparingToDownload
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_PreparingToDownload(::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_PreparingToDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "PreparingToDownload", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Downloading
::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Downloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Downloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Downloading"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Downloading
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Downloading(::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Downloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Downloading", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Completed
::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Completed
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Completed(::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Completed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__32
#include "GlobalNamespace/BeatmapLevelsModel_-ReloadCustomLevelPackCollectionAsync-d__32.hpp"
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapLevelPackCollection> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapLevelPackCollection*>& GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapLevelPackCollection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapLevelPackCollection> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapLevelPackCollection*>& GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapLevelPackCollection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__32.MoveNext
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__32.SetStateMachine
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__32::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/<>c__DisplayClass35_0
#include "GlobalNamespace/BeatmapLevelsModel_--c__DisplayClass35_0.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass35_0::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass35_0::dyn_levelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelsModel/<>c__DisplayClass35_0.<GetLevelPreviewForLevelId>b__1
bool GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass35_0::$GetLevelPreviewForLevelId$b__1(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass35_0::<GetLevelPreviewForLevelId>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLevelPreviewForLevelId>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/<>c
#include "GlobalNamespace/BeatmapLevelsModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapLevelsModel/<>c <>9
::GlobalNamespace::BeatmapLevelsModel::$$c* GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapLevelsModel::$$c*>("", "BeatmapLevelsModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapLevelsModel/<>c <>9
void GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9(::GlobalNamespace::BeatmapLevelsModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.Collections.Generic.IEnumerable`1<IPreviewBeatmapLevel>> <>9__35_0
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>* GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9__35_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9__35_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>*>("", "BeatmapLevelsModel/<>c", "<>9__35_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.Collections.Generic.IEnumerable`1<IPreviewBeatmapLevel>> <>9__35_0
void GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9__35_0(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IPreviewBeatmapLevel*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9__35_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/<>c", "<>9__35_0", value)));
}
// Autogenerated method: BeatmapLevelsModel/<>c..cctor
void GlobalNamespace::BeatmapLevelsModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelsModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<>c.<GetLevelPreviewForLevelId>b__35_0
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::BeatmapLevelsModel::$$c::$GetLevelPreviewForLevelId$b__35_0(::GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$$c::<GetLevelPreviewForLevelId>b__35_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLevelPreviewForLevelId>b__35_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPack)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method, beatmapLevelPack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__38
#include "GlobalNamespace/BeatmapLevelsModel_-GetBeatmapLevelAsync-d__38.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapLevelsModel/GetBeatmapLevelResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelsModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevel <beatmapLevel>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$beatmapLevel$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$beatmapLevel$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapLevel>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelLoader/LoadBeatmapLevelResult <loadLevelResult>5__3
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$loadLevelResult$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$loadLevelResult$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loadLevelResult>5__3"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapLevelLoader/LoadBeatmapLevelResult> <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult>& GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapLevelLoader::LoadBeatmapLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__38.MoveNext
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__38.SetStateMachine
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__38::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomBeatmapLevelPack
#include "GlobalNamespace/CustomBeatmapLevelPack.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: CustomBeatmapLevelCollection
#include "GlobalNamespace/CustomBeatmapLevelCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <packID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomBeatmapLevelPack::dyn_$packID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::dyn_$packID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<packID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <packName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomBeatmapLevelPack::dyn_$packName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::dyn_$packName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<packName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <shortPackName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomBeatmapLevelPack::dyn_$shortPackName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::dyn_$shortPackName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shortPackName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Sprite <coverImage>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CustomBeatmapLevelPack::dyn_$coverImage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::dyn_$coverImage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<coverImage>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Sprite <smallCoverImage>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CustomBeatmapLevelPack::dyn_$smallCoverImage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::dyn_$smallCoverImage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<smallCoverImage>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapLevelCollection <beatmapLevelCollection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelCollection*& GlobalNamespace::CustomBeatmapLevelPack::dyn_$beatmapLevelCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::dyn_$beatmapLevelCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapLevelCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomBeatmapLevelPack.get_packID
::StringW GlobalNamespace::CustomBeatmapLevelPack::get_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::get_packID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_packName
::StringW GlobalNamespace::CustomBeatmapLevelPack::get_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::get_packName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_shortPackName
::StringW GlobalNamespace::CustomBeatmapLevelPack::get_shortPackName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::get_shortPackName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_collectionName
::StringW GlobalNamespace::CustomBeatmapLevelPack::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_coverImage
::UnityEngine::Sprite* GlobalNamespace::CustomBeatmapLevelPack::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_smallCoverImage
::UnityEngine::Sprite* GlobalNamespace::CustomBeatmapLevelPack::get_smallCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::get_smallCoverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smallCoverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_beatmapLevelCollection
::GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::CustomBeatmapLevelPack::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_isPackAlwaysOwned
bool GlobalNamespace::CustomBeatmapLevelPack::get_isPackAlwaysOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelPack::get_isPackAlwaysOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPackAlwaysOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomBeatmapLevelCollection
#include "GlobalNamespace/CustomBeatmapLevelCollection.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: CustomPreviewBeatmapLevel
#include "GlobalNamespace/CustomPreviewBeatmapLevel.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<CustomPreviewBeatmapLevel> _customPreviewBeatmapLevels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::CustomPreviewBeatmapLevel*>*& GlobalNamespace::CustomBeatmapLevelCollection::dyn__customPreviewBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelCollection::dyn__customPreviewBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customPreviewBeatmapLevels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::CustomPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomBeatmapLevelCollection.get_beatmapLevels
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::CustomBeatmapLevelCollection::get_beatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevelCollection::get_beatmapLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomDifficultyBeatmapSet
#include "GlobalNamespace/CustomDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: CustomDifficultyBeatmap
#include "GlobalNamespace/CustomDifficultyBeatmap.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCharacteristicSO _beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::CustomDifficultyBeatmapSet::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmapSet::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<CustomDifficultyBeatmap> _difficultyBeatmaps
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::CustomDifficultyBeatmap*>*& GlobalNamespace::CustomDifficultyBeatmapSet::dyn__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmapSet::dyn__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::CustomDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomDifficultyBeatmapSet.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::CustomDifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmapSet::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmapSet.get_difficultyBeatmaps
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::CustomDifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmapSet::get_difficultyBeatmaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmapSet.SetCustomDifficultyBeatmaps
void GlobalNamespace::CustomDifficultyBeatmapSet::SetCustomDifficultyBeatmaps(::ArrayW<::GlobalNamespace::CustomDifficultyBeatmap*> difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmapSet::SetCustomDifficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCustomDifficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomDifficultyBeatmap
#include "GlobalNamespace/CustomDifficultyBeatmap.hpp"
// Including type: CustomDifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__27
#include "GlobalNamespace/CustomDifficultyBeatmap_-GetBeatmapDataBasicInfoAsync-d__27.hpp"
// Including type: CustomDifficultyBeatmap/<>c__DisplayClass28_0
#include "GlobalNamespace/CustomDifficultyBeatmap_--c__DisplayClass28_0.hpp"
// Including type: CustomDifficultyBeatmap/<GetBeatmapDataAsync>d__28
#include "GlobalNamespace/CustomDifficultyBeatmap_-GetBeatmapDataAsync-d__28.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapLevel <level>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::CustomDifficultyBeatmap::dyn_$level$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$level$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<level>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IDifficultyBeatmapSet <parentDifficultyBeatmapSet>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmapSet*& GlobalNamespace::CustomDifficultyBeatmap::dyn_$parentDifficultyBeatmapSet$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$parentDifficultyBeatmapSet$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parentDifficultyBeatmapSet>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmapSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDifficulty <difficulty>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::CustomDifficultyBeatmap::dyn_$difficulty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$difficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficulty>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <difficultyRank>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CustomDifficultyBeatmap::dyn_$difficultyRank$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$difficultyRank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyRank>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <noteJumpMovementSpeed>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomDifficultyBeatmap::dyn_$noteJumpMovementSpeed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$noteJumpMovementSpeed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteJumpMovementSpeed>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <noteJumpStartBeatOffset>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomDifficultyBeatmap::dyn_$noteJumpStartBeatOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$noteJumpStartBeatOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteJumpStartBeatOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapDataBasicInfo <beatmapDataBasicInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapDataBasicInfo*& GlobalNamespace::CustomDifficultyBeatmap::dyn_$beatmapDataBasicInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$beatmapDataBasicInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapDataBasicInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapDataBasicInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <beatsPerMinute>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomDifficultyBeatmap::dyn_$beatsPerMinute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$beatsPerMinute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatsPerMinute>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapSaveDataVersion3.BeatmapSaveData <beatmapSaveData>k__BackingField
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData*& GlobalNamespace::CustomDifficultyBeatmap::dyn_$beatmapSaveData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::dyn_$beatmapSaveData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapSaveData>k__BackingField"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomDifficultyBeatmap.get_level
::GlobalNamespace::IBeatmapLevel* GlobalNamespace::CustomDifficultyBeatmap::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_level");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_parentDifficultyBeatmapSet
::GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::CustomDifficultyBeatmap::get_parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_parentDifficultyBeatmapSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_difficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::CustomDifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_difficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::CustomDifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_difficultyRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpStartBeatOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_beatmapDataBasicInfo
::GlobalNamespace::IBeatmapDataBasicInfo* GlobalNamespace::CustomDifficultyBeatmap::get_beatmapDataBasicInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_beatmapDataBasicInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDataBasicInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapDataBasicInfo*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_beatsPerMinute
float GlobalNamespace::CustomDifficultyBeatmap::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_beatmapSaveData
::BeatmapSaveDataVersion3::BeatmapSaveData* GlobalNamespace::CustomDifficultyBeatmap::get_beatmapSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::get_beatmapSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.GetBeatmapDataBasicInfoAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>* GlobalNamespace::CustomDifficultyBeatmap::GetBeatmapDataBasicInfoAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::GetBeatmapDataBasicInfoAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataBasicInfoAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.GetBeatmapDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>* GlobalNamespace::CustomDifficultyBeatmap::GetBeatmapDataAsync(::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::GetBeatmapDataAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>*, false>(this, ___internal__method, environmentInfo, playerSpecificSettings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomDifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__27
#include "GlobalNamespace/CustomDifficultyBeatmap_-GetBeatmapDataBasicInfoAsync-d__27.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapDataBasicInfo> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomDifficultyBeatmap <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomDifficultyBeatmap*& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapDataBasicInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomDifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__27.MoveNext
void GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__27.SetStateMachine
void GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__27::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomDifficultyBeatmap/<>c__DisplayClass28_0
#include "GlobalNamespace/CustomDifficultyBeatmap_--c__DisplayClass28_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IReadonlyBeatmapData readonlyBeatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::dyn_readonlyBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::dyn_readonlyBeatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readonlyBeatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomDifficultyBeatmap <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomDifficultyBeatmap*& GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::dyn_environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomDifficultyBeatmap/<>c__DisplayClass28_0.<GetBeatmapDataAsync>b__0
void GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::$GetBeatmapDataAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0::<GetBeatmapDataAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetBeatmapDataAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomDifficultyBeatmap/<GetBeatmapDataAsync>d__28
#include "GlobalNamespace/CustomDifficultyBeatmap_-GetBeatmapDataAsync-d__28.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: CustomDifficultyBeatmap/<>c__DisplayClass28_0
#include "GlobalNamespace/CustomDifficultyBeatmap_--c__DisplayClass28_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IReadonlyBeatmapData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomDifficultyBeatmap <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomDifficultyBeatmap*& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_environmentInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_playerSpecificSettings");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CustomDifficultyBeatmap/<>c__DisplayClass28_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0*& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomDifficultyBeatmap::$$c__DisplayClass28_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomDifficultyBeatmap/<GetBeatmapDataAsync>d__28.MoveNext
void GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap/<GetBeatmapDataAsync>d__28.SetStateMachine
void GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomDifficultyBeatmap::$GetBeatmapDataAsync$d__28::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomBeatmapLevel
#include "GlobalNamespace/CustomBeatmapLevel.hpp"
// Including type: BeatmapLevelData
#include "GlobalNamespace/BeatmapLevelData.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelData _beatmapLevelData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelData*& GlobalNamespace::CustomBeatmapLevel::dyn__beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevel::dyn__beatmapLevelData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomBeatmapLevel.get_beatmapLevelData
::GlobalNamespace::IBeatmapLevelData* GlobalNamespace::CustomBeatmapLevel::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevel::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevel.get_songAudioClipPath
::StringW GlobalNamespace::CustomBeatmapLevel::get_songAudioClipPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevel::get_songAudioClipPath");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAudioClipPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevel.SetBeatmapLevelData
void GlobalNamespace::CustomBeatmapLevel::SetBeatmapLevelData(::GlobalNamespace::BeatmapLevelData* beatmapLevelData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomBeatmapLevel::SetBeatmapLevelData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevelData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomPreviewBeatmapLevel
#include "GlobalNamespace/CustomPreviewBeatmapLevel.hpp"
// Including type: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__60
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetCoverImageAsync-d__60.hpp"
// Including type: ISpriteAsyncLoader
#include "GlobalNamespace/ISpriteAsyncLoader.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ISpriteAsyncLoader <spriteAsyncLoader>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ISpriteAsyncLoader*& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$spriteAsyncLoader$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$spriteAsyncLoader$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<spriteAsyncLoader>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ISpriteAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly StandardLevelInfoSaveData <standardLevelInfoSaveData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelInfoSaveData*& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$standardLevelInfoSaveData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$standardLevelInfoSaveData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<standardLevelInfoSaveData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelInfoSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <customLevelPath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$customLevelPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$customLevelPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<customLevelPath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <levelID>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$levelID$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$levelID$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelID>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <songName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <songSubName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songSubName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songSubName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songSubName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <songAuthorName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songAuthorName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songAuthorName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songAuthorName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <levelAuthorName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$levelAuthorName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$levelAuthorName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelAuthorName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <beatsPerMinute>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$beatsPerMinute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$beatsPerMinute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatsPerMinute>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <songTimeOffset>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songTimeOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songTimeOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songTimeOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <songDuration>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songDuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$songDuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songDuration>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <shuffle>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$shuffle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$shuffle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shuffle>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <shufflePeriod>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$shufflePeriod$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$shufflePeriod$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shufflePeriod>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <previewStartTime>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$previewStartTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$previewStartTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewStartTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <previewDuration>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$previewDuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$previewDuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewDuration>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentInfoSO <environmentInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$environmentInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$environmentInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<environmentInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentInfoSO <allDirectionsEnvironmentInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$allDirectionsEnvironmentInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$allDirectionsEnvironmentInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<allDirectionsEnvironmentInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Sprite <defaultCoverImage>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$defaultCoverImage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$defaultCoverImage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<defaultCoverImage>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<PreviewDifficultyBeatmapSet> <previewDifficultyBeatmapSets>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*& GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$previewDifficultyBeatmapSets$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn_$previewDifficultyBeatmapSets$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewDifficultyBeatmapSets>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _coverImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CustomPreviewBeatmapLevel::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_spriteAsyncLoader
::GlobalNamespace::ISpriteAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::get_spriteAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_spriteAsyncLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsyncLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ISpriteAsyncLoader*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_standardLevelInfoSaveData
::GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::CustomPreviewBeatmapLevel::get_standardLevelInfoSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_standardLevelInfoSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_standardLevelInfoSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardLevelInfoSaveData*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_customLevelPath
::StringW GlobalNamespace::CustomPreviewBeatmapLevel::get_customLevelPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_customLevelPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customLevelPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_levelID
::StringW GlobalNamespace::CustomPreviewBeatmapLevel::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songName
::StringW GlobalNamespace::CustomPreviewBeatmapLevel::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songSubName
::StringW GlobalNamespace::CustomPreviewBeatmapLevel::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songAuthorName
::StringW GlobalNamespace::CustomPreviewBeatmapLevel::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_levelAuthorName
::StringW GlobalNamespace::CustomPreviewBeatmapLevel::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::CustomPreviewBeatmapLevel::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songTimeOffset
float GlobalNamespace::CustomPreviewBeatmapLevel::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_shuffle
float GlobalNamespace::CustomPreviewBeatmapLevel::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_shufflePeriod
float GlobalNamespace::CustomPreviewBeatmapLevel::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewStartTime
float GlobalNamespace::CustomPreviewBeatmapLevel::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_environmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_allDirectionsEnvironmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_defaultCoverImage
::UnityEngine::Sprite* GlobalNamespace::CustomPreviewBeatmapLevel::get_defaultCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_defaultCoverImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultCoverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewDifficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songPreviewAudioClipPath
::StringW GlobalNamespace::CustomPreviewBeatmapLevel::get_songPreviewAudioClipPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::get_songPreviewAudioClipPath");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPreviewAudioClipPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.GetCoverImageAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::CustomPreviewBeatmapLevel::GetCoverImageAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__60
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetCoverImageAsync-d__60.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>& GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomPreviewBeatmapLevel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomPreviewBeatmapLevel*& GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__60.MoveNext
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__60.SetStateMachine
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__60::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyBeatmapLevel
#include "GlobalNamespace/EmptyBeatmapLevel.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapLevelData <beatmapLevelData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelData*& GlobalNamespace::EmptyBeatmapLevel::dyn_$beatmapLevelData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::dyn_$beatmapLevelData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapLevelData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EmptyBeatmapLevel.get_levelID
::StringW GlobalNamespace::EmptyBeatmapLevel::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_levelID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songName
::StringW GlobalNamespace::EmptyBeatmapLevel::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_songName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songSubName
::StringW GlobalNamespace::EmptyBeatmapLevel::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_songSubName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songAuthorName
::StringW GlobalNamespace::EmptyBeatmapLevel::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_songAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_levelAuthorName
::StringW GlobalNamespace::EmptyBeatmapLevel::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_levelAuthorName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::EmptyBeatmapLevel::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_beatsPerMinute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songTimeOffset
float GlobalNamespace::EmptyBeatmapLevel::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_songTimeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_shuffle
float GlobalNamespace::EmptyBeatmapLevel::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_shuffle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_shufflePeriod
float GlobalNamespace::EmptyBeatmapLevel::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_shufflePeriod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewStartTime
float GlobalNamespace::EmptyBeatmapLevel::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_previewStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewDuration
float GlobalNamespace::EmptyBeatmapLevel::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_previewDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songDuration
float GlobalNamespace::EmptyBeatmapLevel::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_songDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_environmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EmptyBeatmapLevel::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_environmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_allDirectionsEnvironmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EmptyBeatmapLevel::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_allDirectionsEnvironmentInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewDifficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::EmptyBeatmapLevel::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_previewDifficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_beatmapLevelData
::GlobalNamespace::IBeatmapLevelData* GlobalNamespace::EmptyBeatmapLevel::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.GetPreviewAudioClipAsync
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::EmptyBeatmapLevel::GetPreviewAudioClipAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::GetPreviewAudioClipAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: EmptyBeatmapLevel.GetCoverImageAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::EmptyBeatmapLevel::GetCoverImageAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevel::GetCoverImageAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyBeatmapLevelData
#include "GlobalNamespace/EmptyBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EmptyBeatmapLevelData.get_audioClip
::UnityEngine::AudioClip* GlobalNamespace::EmptyBeatmapLevelData::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevelData::get_audioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevelData.get_difficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::EmptyBeatmapLevelData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyBeatmapLevelData::get_difficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyDifficultyBeatmap
#include "GlobalNamespace/EmptyDifficultyBeatmap.hpp"
// Including type: EmptyDifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__20
#include "GlobalNamespace/EmptyDifficultyBeatmap_-GetBeatmapDataBasicInfoAsync-d__20.hpp"
// Including type: EmptyDifficultyBeatmap/<GetBeatmapDataAsync>d__21
#include "GlobalNamespace/EmptyDifficultyBeatmap_-GetBeatmapDataAsync-d__21.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapLevel <level>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::EmptyDifficultyBeatmap::dyn_$level$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::dyn_$level$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<level>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IDifficultyBeatmapSet <parentDifficultyBeatmapSet>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmapSet*& GlobalNamespace::EmptyDifficultyBeatmap::dyn_$parentDifficultyBeatmapSet$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::dyn_$parentDifficultyBeatmapSet$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parentDifficultyBeatmapSet>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmapSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDifficulty <difficulty>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::EmptyDifficultyBeatmap::dyn_$difficulty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::dyn_$difficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficulty>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <difficultyRank>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EmptyDifficultyBeatmap::dyn_$difficultyRank$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::dyn_$difficultyRank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyRank>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <noteJumpMovementSpeed>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EmptyDifficultyBeatmap::dyn_$noteJumpMovementSpeed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::dyn_$noteJumpMovementSpeed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteJumpMovementSpeed>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <noteJumpStartBeatOffset>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EmptyDifficultyBeatmap::dyn_$noteJumpStartBeatOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::dyn_$noteJumpStartBeatOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteJumpStartBeatOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapData _beatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapData*& GlobalNamespace::EmptyDifficultyBeatmap::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_level
::GlobalNamespace::IBeatmapLevel* GlobalNamespace::EmptyDifficultyBeatmap::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::get_level");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_parentDifficultyBeatmapSet
::GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::EmptyDifficultyBeatmap::get_parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::get_parentDifficultyBeatmapSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_difficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::EmptyDifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::get_difficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::EmptyDifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::get_difficultyRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpStartBeatOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_beatmapDataBasicInfo
::GlobalNamespace::IBeatmapDataBasicInfo* GlobalNamespace::EmptyDifficultyBeatmap::get_beatmapDataBasicInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::get_beatmapDataBasicInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDataBasicInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapDataBasicInfo*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.GetBeatmapDataBasicInfoAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>* GlobalNamespace::EmptyDifficultyBeatmap::GetBeatmapDataBasicInfoAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::GetBeatmapDataBasicInfoAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataBasicInfoAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.GetBeatmapDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>* GlobalNamespace::EmptyDifficultyBeatmap::GetBeatmapDataAsync(::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::GetBeatmapDataAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>*, false>(this, ___internal__method, environmentInfo, playerSpecificSettings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyDifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__20
#include "GlobalNamespace/EmptyDifficultyBeatmap_-GetBeatmapDataBasicInfoAsync-d__20.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapDataBasicInfo> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EmptyDifficultyBeatmap <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EmptyDifficultyBeatmap*& GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EmptyDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapData*>& GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::BeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EmptyDifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__20.MoveNext
void GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap/<GetBeatmapDataBasicInfoAsync>d__20.SetStateMachine
void GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataBasicInfoAsync$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyDifficultyBeatmap/<GetBeatmapDataAsync>d__21
#include "GlobalNamespace/EmptyDifficultyBeatmap_-GetBeatmapDataAsync-d__21.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IReadonlyBeatmapData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EmptyDifficultyBeatmap <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EmptyDifficultyBeatmap*& GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EmptyDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IReadonlyBeatmapData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EmptyDifficultyBeatmap/<GetBeatmapDataAsync>d__21.MoveNext
void GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap/<GetBeatmapDataAsync>d__21.SetStateMachine
void GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyDifficultyBeatmap::$GetBeatmapDataAsync$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevel.get_beatmapLevelData
::GlobalNamespace::IBeatmapLevelData* GlobalNamespace::IBeatmapLevel::get_beatmapLevelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapLevel::get_beatmapLevelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevelData.get_audioClip
::UnityEngine::AudioClip* GlobalNamespace::IBeatmapLevelData::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapLevelData::get_audioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapLevelData.get_difficultyBeatmapSets
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::IBeatmapLevelData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapLevelData::get_difficultyBeatmapSets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelDataExtensions
#include "GlobalNamespace/BeatmapLevelDataExtensions.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap(::GlobalNamespace::IBeatmapLevelData* beatmapLevelData, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, ::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristic, difficulty);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmapSet
::GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet(::GlobalNamespace::IBeatmapLevelData* beatmapLevelData, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmapSet*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristic);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap(::GlobalNamespace::IBeatmapLevelData* beatmapLevelData, ::GlobalNamespace::PreviewDifficultyBeatmap* previewDifficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData), ::il2cpp_utils::ExtractType(previewDifficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevelData, previewDifficultyBeatmap);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmapSet
::GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet(::GlobalNamespace::IBeatmapLevelData* beatmapLevelData, ::StringW beatmapCharacteristicName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelData), ::il2cpp_utils::ExtractType(beatmapCharacteristicName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmapSet*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristicName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDifficultyBeatmap.get_level
::GlobalNamespace::IBeatmapLevel* GlobalNamespace::IDifficultyBeatmap::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmap::get_level");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_parentDifficultyBeatmapSet
::GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::IDifficultyBeatmap::get_parentDifficultyBeatmapSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmap::get_parentDifficultyBeatmapSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_difficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::IDifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmap::get_difficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::IDifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmap::get_difficultyRank");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::IDifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmap::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::IDifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmap::get_noteJumpStartBeatOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.GetBeatmapDataBasicInfoAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>* GlobalNamespace::IDifficultyBeatmap::GetBeatmapDataBasicInfoAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmap::GetBeatmapDataBasicInfoAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataBasicInfoAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.GetBeatmapDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>* GlobalNamespace::IDifficultyBeatmap::GetBeatmapDataAsync(::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmap::GetBeatmapDataAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>*, false>(this, ___internal__method, environmentInfo, playerSpecificSettings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DifficultyBeatmapSerializedMethods
#include "GlobalNamespace/DifficultyBeatmapSerializedMethods.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DifficultyBeatmapSerializedMethods.SerializedName
::StringW GlobalNamespace::DifficultyBeatmapSerializedMethods::SerializedName(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyBeatmapSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DifficultyBeatmapSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDifficultyBeatmapSet.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::IDifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmapSet::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmapSet.get_difficultyBeatmaps
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::IDifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDifficultyBeatmapSet::get_difficultyBeatmaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DifficultyBeatmapSet
#include "GlobalNamespace/DifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCharacteristicSO <beatmapCharacteristic>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::DifficultyBeatmapSet::dyn_$beatmapCharacteristic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyBeatmapSet::dyn_$beatmapCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapCharacteristic>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<IDifficultyBeatmap> <difficultyBeatmaps>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>*& GlobalNamespace::DifficultyBeatmapSet::dyn_$difficultyBeatmaps$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyBeatmapSet::dyn_$difficultyBeatmaps$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyBeatmaps>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DifficultyBeatmapSet.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::DifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyBeatmapSet::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyBeatmapSet.get_difficultyBeatmaps
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyBeatmapSet::get_difficultyBeatmaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
