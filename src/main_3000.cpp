// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <displayName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FileBrowserItem::dyn_$displayName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::dyn_$displayName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<displayName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <fullPath>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FileBrowserItem::dyn_$fullPath$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::dyn_$fullPath$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fullPath>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDirectory>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FileBrowserItem::dyn_$isDirectory$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::dyn_$isDirectory$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDirectory>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FileBrowserItem.get_displayName
::StringW GlobalNamespace::FileBrowserItem::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::get_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_displayName
void GlobalNamespace::FileBrowserItem::set_displayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::set_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserItem.get_fullPath
::StringW GlobalNamespace::FileBrowserItem::get_fullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::get_fullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_fullPath
void GlobalNamespace::FileBrowserItem::set_fullPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::set_fullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserItem.get_isDirectory
bool GlobalNamespace::FileBrowserItem::get_isDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::get_isDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_isDirectory
void GlobalNamespace::FileBrowserItem::set_isDirectory(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserItem::set_isDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameObjectTestExceptionsSO
#include "GlobalNamespace/GameObjectTestExceptionsSO.hpp"
// Including type: GameObjectTestExceptionsSO/GameObjectTestException
#include "GlobalNamespace/GameObjectTestExceptionsSO_GameObjectTestException.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GameObjectTestExceptionsSO/GameObjectTestException[] tubeBloomPrePassLightIgnores
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException*>& GlobalNamespace::GameObjectTestExceptionsSO::dyn_tubeBloomPrePassLightIgnores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectTestExceptionsSO::dyn_tubeBloomPrePassLightIgnores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tubeBloomPrePassLightIgnores"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameObjectTestExceptionsSO.GetExceptionAsDictionary
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EnvironmentInfoSO*, ::ArrayW<::StringW>>* GlobalNamespace::GameObjectTestExceptionsSO::GetExceptionAsDictionary(::ArrayW<::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException*> testExceptionArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectTestExceptionsSO::GetExceptionAsDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameObjectTestExceptionsSO", "GetExceptionAsDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testExceptionArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EnvironmentInfoSO*, ::ArrayW<::StringW>>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, testExceptionArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameObjectTestExceptionsSO/GameObjectTestException
#include "GlobalNamespace/GameObjectTestExceptionsSO_GameObjectTestException.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::dyn__environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::dyn__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _exceptionNotes
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::dyn__exceptionNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::dyn__exceptionNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exceptionNotes"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _sceneHierarchies
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::dyn__sceneHierarchies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::dyn__sceneHierarchies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneHierarchies"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameObjectTestExceptionsSO/GameObjectTestException.get_environmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::get_environmentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: GameObjectTestExceptionsSO/GameObjectTestException.get_sceneHierarchies
::ArrayW<::StringW> GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::get_sceneHierarchies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectTestExceptionsSO::GameObjectTestException::get_sceneHierarchies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneHierarchies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberMovementData
#include "GlobalNamespace/SaberMovementData.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace/ISaberMovementDataProcessor.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kOutOfRangeBladeSpeed
float GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kOutOfRangeBladeSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kOutOfRangeBladeSpeed
void GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kOutOfRangeBladeSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothUpBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothUpBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothUpBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothUpBladeSpeedCoef", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothDownBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothDownBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothDownBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothDownBladeSpeedCoef", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BladeMovementDataElement[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BladeMovementDataElement>& GlobalNamespace::SaberMovementData::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BladeMovementDataElement>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<ISaberMovementDataProcessor> _dataProcessors
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberMovementDataProcessor*>*& GlobalNamespace::SaberMovementData::dyn__dataProcessors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__dataProcessors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataProcessors"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberMovementDataProcessor*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nextAddIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SaberMovementData::dyn__nextAddIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__nextAddIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextAddIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _validCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SaberMovementData::dyn__validCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__validCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_validCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bladeSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SaberMovementData::dyn__bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::dyn__bladeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bladeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberMovementData.get_bladeSpeed
float GlobalNamespace::SaberMovementData::get_bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::get_bladeSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bladeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_lastAddedData
::GlobalNamespace::BladeMovementDataElement GlobalNamespace::SaberMovementData::get_lastAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::get_lastAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_prevAddedData
::GlobalNamespace::BladeMovementDataElement GlobalNamespace::SaberMovementData::get_prevAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::get_prevAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.AddDataProcessor
void GlobalNamespace::SaberMovementData::AddDataProcessor(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::AddDataProcessor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDataProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.RemoveDataProcessor
void GlobalNamespace::SaberMovementData::RemoveDataProcessor(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::RemoveDataProcessor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDataProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.RequestLastDataProcessing
void GlobalNamespace::SaberMovementData::RequestLastDataProcessing(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::RequestLastDataProcessing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestLastDataProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.AddNewData
void GlobalNamespace::SaberMovementData::AddNewData(::UnityEngine::Vector3 topPos, ::UnityEngine::Vector3 bottomPos, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::AddNewData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNewData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topPos), ::il2cpp_utils::ExtractType(bottomPos), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topPos, bottomPos, time);
}
// Autogenerated method: SaberMovementData.ComputeAdditionalData
void GlobalNamespace::SaberMovementData::ComputeAdditionalData(::UnityEngine::Vector3 topPos, ::UnityEngine::Vector3 bottomPos, int idxOffset, ByRef<::UnityEngine::Vector3> segmentNormal, ByRef<float> segmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeAdditionalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeAdditionalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topPos), ::il2cpp_utils::ExtractType(bottomPos), ::il2cpp_utils::ExtractType(idxOffset), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topPos, bottomPos, idxOffset, byref(segmentNormal), byref(segmentAngle));
}
// Autogenerated method: SaberMovementData.ComputePlaneNormal
::UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputePlaneNormal(::UnityEngine::Vector3 tp0, ::UnityEngine::Vector3 bp0, ::UnityEngine::Vector3 tp1, ::UnityEngine::Vector3 bp1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputePlaneNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputePlaneNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tp0), ::il2cpp_utils::ExtractType(bp0), ::il2cpp_utils::ExtractType(tp1), ::il2cpp_utils::ExtractType(bp1)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, tp0, bp0, tp1, bp1);
}
// Autogenerated method: SaberMovementData.ComputeCutPlaneNormal
::UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCutPlaneNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(float overrideSegmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeSwingRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideSegmentAngle)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, overrideSegmentAngle);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeSwingRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(bool overrideSegmenAngle, float overrideValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberMovementData::ComputeSwingRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideSegmenAngle), ::il2cpp_utils::ExtractType(overrideValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, overrideSegmenAngle, overrideValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRating
#include "GlobalNamespace/SaberSwingRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kMaxNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kToleranceNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kToleranceNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kToleranceNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kToleranceNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxBeforeCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxBeforeCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxBeforeCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxBeforeCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxAfterCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxAfterCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxAfterCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxAfterCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kBeforeCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kBeforeCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kBeforeCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kBeforeCutAngleFor1Rating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kAfterCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kAfterCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kAfterCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kAfterCutAngleFor1Rating", value));
}
// Autogenerated method: SaberSwingRating.NormalRating
float GlobalNamespace::SaberSwingRating::NormalRating(float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::NormalRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "NormalRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, normalDiff);
}
// Autogenerated method: SaberSwingRating.BeforeCutStepRating
float GlobalNamespace::SaberSwingRating::BeforeCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::BeforeCutStepRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "BeforeCutStepRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleDiff), ::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated method: SaberSwingRating.AfterCutStepRating
float GlobalNamespace::SaberSwingRating::AfterCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRating::AfterCutStepRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "AfterCutStepRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleDiff), ::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRatingCounter
#include "GlobalNamespace/SaberSwingRatingCounter.hpp"
// Including type: ISaberMovementData
#include "GlobalNamespace/ISaberMovementData.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: ISaberSwingRatingCounterDidChangeReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidChangeReceiver.hpp"
// Including type: ISaberSwingRatingCounterDidFinishReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidFinishReceiver.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ISaberMovementData _saberMovementData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ISaberMovementData*& GlobalNamespace::SaberSwingRatingCounter::dyn__saberMovementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__saberMovementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberMovementData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ISaberMovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cutPlaneNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__cutPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__cutPlaneNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutPlaneNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SaberSwingRatingCounter::dyn__cutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__cutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _afterCutRating
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutRating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterCutRating"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beforeCutRating
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutRating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutRating"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Plane _notePlane
[[deprecated("Use field access instead!")]] ::UnityEngine::Plane& GlobalNamespace::SaberSwingRatingCounter::dyn__notePlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__notePlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notePlane"))->offset;
  return *reinterpret_cast<::UnityEngine::Plane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _notePlaneWasCut
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SaberSwingRatingCounter::dyn__notePlaneWasCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__notePlaneWasCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notePlaneWasCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _noteForward
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__noteForward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__noteForward");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteForward"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rateBeforeCut
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SaberSwingRatingCounter::dyn__rateBeforeCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__rateBeforeCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rateBeforeCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rateAfterCut
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SaberSwingRatingCounter::dyn__rateAfterCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__rateAfterCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rateAfterCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<ISaberSwingRatingCounterDidChangeReceiver> _didChangeReceivers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver*>*& GlobalNamespace::SaberSwingRatingCounter::dyn__didChangeReceivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__didChangeReceivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didChangeReceivers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<ISaberSwingRatingCounterDidFinishReceiver> _didFinishReceivers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver*>*& GlobalNamespace::SaberSwingRatingCounter::dyn__didFinishReceivers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__didFinishReceivers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishReceivers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _notePlaneCenter
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__notePlaneCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__notePlaneCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notePlaneCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _beforeCutTopPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutTopPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutTopPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutTopPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _beforeCutBottomPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutBottomPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__beforeCutBottomPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutBottomPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _afterCutTopPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutTopPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutTopPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterCutTopPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _afterCutBottomPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutBottomPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__afterCutBottomPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterCutBottomPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _newPlaneNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__newPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__newPlaneNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPlaneNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cutTopPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__cutTopPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__cutTopPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutTopPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cutBottomPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SaberSwingRatingCounter::dyn__cutBottomPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__cutBottomPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutBottomPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SaberSwingRatingCounter::dyn__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::dyn__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberSwingRatingCounter.get_beforeCutRating
float GlobalNamespace::SaberSwingRatingCounter::get_beforeCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::get_beforeCutRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beforeCutRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.get_afterCutRating
float GlobalNamespace::SaberSwingRatingCounter::get_afterCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::get_afterCutRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_afterCutRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.RegisterDidChangeReceiver
void GlobalNamespace::SaberSwingRatingCounter::RegisterDidChangeReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::RegisterDidChangeReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.RegisterDidFinishReceiver
void GlobalNamespace::SaberSwingRatingCounter::RegisterDidFinishReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::RegisterDidFinishReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.UnregisterDidChangeReceiver
void GlobalNamespace::SaberSwingRatingCounter::UnregisterDidChangeReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::UnregisterDidChangeReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.UnregisterDidFinishReceiver
void GlobalNamespace::SaberSwingRatingCounter::UnregisterDidFinishReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::UnregisterDidFinishReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.Init
void GlobalNamespace::SaberSwingRatingCounter::Init(::GlobalNamespace::ISaberMovementData* saberMovementData, ::UnityEngine::Vector3 notePosition, ::UnityEngine::Quaternion noteRotation, bool rateBeforeCut, bool rateAfterCut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberMovementData), ::il2cpp_utils::ExtractType(notePosition), ::il2cpp_utils::ExtractType(noteRotation), ::il2cpp_utils::ExtractType(rateBeforeCut), ::il2cpp_utils::ExtractType(rateAfterCut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberMovementData, notePosition, noteRotation, rateBeforeCut, rateAfterCut);
}
// Autogenerated method: SaberSwingRatingCounter.ProcessNewData
void GlobalNamespace::SaberSwingRatingCounter::ProcessNewData(::GlobalNamespace::BladeMovementDataElement newData, ::GlobalNamespace::BladeMovementDataElement prevData, bool prevDataAreValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::ProcessNewData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNewData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newData), ::il2cpp_utils::ExtractType(prevData), ::il2cpp_utils::ExtractType(prevDataAreValid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newData, prevData, prevDataAreValid);
}
// Autogenerated method: SaberSwingRatingCounter.Finish
void GlobalNamespace::SaberSwingRatingCounter::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.DrawGizmos
void GlobalNamespace::SaberSwingRatingCounter::DrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberSwingRatingCounter::DrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _modifierNameLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameplayModifierParamsSO::dyn__modifierNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__modifierNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifierNameLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _descriptionLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameplayModifierParamsSO::dyn__descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__descriptionLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_descriptionLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _multiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GameplayModifierParamsSO::dyn__multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__multiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _multiplierConditionallyValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameplayModifierParamsSO::dyn__multiplierConditionallyValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__multiplierConditionallyValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierConditionallyValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _icon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::GameplayModifierParamsSO::dyn__icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_icon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO[] _mutuallyExclusives
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>& GlobalNamespace::GameplayModifierParamsSO::dyn__mutuallyExclusives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__mutuallyExclusives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mutuallyExclusives"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO[] _requires
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>& GlobalNamespace::GameplayModifierParamsSO::dyn__requires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__requires");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requires"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO[] _requiredBy
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>& GlobalNamespace::GameplayModifierParamsSO::dyn__requiredBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__requiredBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requiredBy"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInBeta
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameplayModifierParamsSO::dyn__isInBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::dyn__isInBeta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInBeta"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifierParamsSO.get_modifierNameLocalizationKey
::StringW GlobalNamespace::GameplayModifierParamsSO::get_modifierNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_modifierNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modifierNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_descriptionLocalizationKey
::StringW GlobalNamespace::GameplayModifierParamsSO::get_descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_descriptionLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_descriptionLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_multiplier
float GlobalNamespace::GameplayModifierParamsSO::get_multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_multiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_multiplierConditionallyValid
bool GlobalNamespace::GameplayModifierParamsSO::get_multiplierConditionallyValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_multiplierConditionallyValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplierConditionallyValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_icon
::UnityEngine::Sprite* GlobalNamespace::GameplayModifierParamsSO::get_icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_mutuallyExclusives
::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*> GlobalNamespace::GameplayModifierParamsSO::get_mutuallyExclusives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_mutuallyExclusives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mutuallyExclusives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_requires
::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*> GlobalNamespace::GameplayModifierParamsSO::get_requires() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_requires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_requiredBy
::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*> GlobalNamespace::GameplayModifierParamsSO::get_requiredBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_requiredBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiredBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::GameplayModifierParamsSO*>, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_isInBeta
bool GlobalNamespace::GameplayModifierParamsSO::get_isInBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierParamsSO::get_isInBeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInBeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
// Including type: GameplayModifiersModelSO/<>c
#include "GlobalNamespace/GameplayModifiersModelSO_--c.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: GameplayModifiers/SongSpeed
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierMask
#include "GlobalNamespace/GameplayModifierMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _batteryEnergy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__batteryEnergy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__batteryEnergy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batteryEnergy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _instaFail
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__instaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__instaFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instaFail"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _noObstacles
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__noObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__noObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noObstacles"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _noBombs
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__noBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__noBombs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noBombs"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _fastNotes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__fastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__fastNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fastNotes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _strictAngles
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__strictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__strictAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strictAngles"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _disappearingArrows
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__disappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__disappearingArrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearingArrows"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _fasterSong
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__fasterSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__fasterSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fasterSong"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _slowerSong
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__slowerSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__slowerSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slowerSong"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _noArrows
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__noArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__noArrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noArrows"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _ghostNotes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__ghostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__ghostNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostNotes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _noFailOn0Energy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__noFailOn0Energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__noFailOn0Energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noFailOn0Energy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _superFastSong
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__superFastSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__superFastSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_superFastSong"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _proMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__proMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__proMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _zenMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__zenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__zenMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zenMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _smallCubes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifiersModelSO::dyn__smallCubes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__smallCubes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallCubes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<GameplayModifierParamsSO,GameplayModifiersModelSO/GameplayModifierBoolGetter> _gameplayModifierGetters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::GameplayModifierParamsSO*, ::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>*& GlobalNamespace::GameplayModifiersModelSO::dyn__gameplayModifierGetters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::dyn__gameplayModifierGetters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifierGetters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::GameplayModifierParamsSO*, ::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifiersModelSO.CreateGameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplayModifiersModelSO::CreateGameplayModifiers(::System::Func_2<::GlobalNamespace::GameplayModifierParamsSO*, bool>* valueGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::CreateGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, valueGetter);
}
// Autogenerated method: GameplayModifiersModelSO.GetModifierBoolValue
bool GlobalNamespace::GameplayModifiersModelSO::GetModifierBoolValue(::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::GameplayModifierParamsSO* gameplayModifierParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetModifierBoolValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifierBoolValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(gameplayModifierParams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers, gameplayModifierParams);
}
// Autogenerated method: GameplayModifiersModelSO.CreateModifierParamsList
::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* GlobalNamespace::GameplayModifiersModelSO::CreateModifierParamsList(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::CreateModifierParamsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateModifierParamsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>*, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO.GetTotalMultiplier
float GlobalNamespace::GameplayModifiersModelSO::GetTotalMultiplier(::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetTotalMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.MaxModifiedScoreForMaxMultipliedScore
int GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxMultipliedScore(int maxMultipliedScore, ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxMultipliedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxModifiedScoreForMaxMultipliedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxMultipliedScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, maxMultipliedScore, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.MaxModifiedScoreForMaxMultipliedScore
int GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxMultipliedScore(int maxMultipliedScore, ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, ::GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxMultipliedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxModifiedScoreForMaxMultipliedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxMultipliedScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(gameplayModifiersModel), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, maxMultipliedScore, modifierParams, gameplayModifiersModel, energy);
}
// Autogenerated method: GameplayModifiersModelSO.GetModifiedScoreForGameplayModifiers
int GlobalNamespace::GameplayModifiersModelSO::GetModifiedScoreForGameplayModifiers(int multipliedScore, ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetModifiedScoreForGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedScoreForGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, multipliedScore, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.GetGameplayModifierParams
::GlobalNamespace::GameplayModifierParamsSO* GlobalNamespace::GameplayModifiersModelSO::GetGameplayModifierParams(::GlobalNamespace::GameplayModifierMask modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetGameplayModifierParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplayModifierParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifierParamsSO*, false>(this, ___internal__method, modifier);
}
// Autogenerated method: GameplayModifiersModelSO.GetSongSpeedFromValueGetter
::GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiersModelSO::GetSongSpeedFromValueGetter(::System::Func_2<::GlobalNamespace::GameplayModifierParamsSO*, bool>* valueGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GetSongSpeedFromValueGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongSpeedFromValueGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers::SongSpeed, false>(this, ___internal__method, valueGetter);
}
// Autogenerated method: GameplayModifiersModelSO.OnEnable
void GlobalNamespace::GameplayModifiersModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.Invoke
bool GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::Invoke(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.BeginInvoke
::System::IAsyncResult* GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::BeginInvoke(::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, gameplayModifiers, callback, object);
}
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.EndInvoke
bool GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersModelSO/<>c
#include "GlobalNamespace/GameplayModifiersModelSO_--c.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GameplayModifiersModelSO/<>c <>9
::GlobalNamespace::GameplayModifiersModelSO::$$c* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::$$c*>("", "GameplayModifiersModelSO/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GameplayModifiersModelSO/<>c <>9
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9(::GlobalNamespace::GameplayModifiersModelSO::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_0
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_0
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_0(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_0", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_1
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_1")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_1
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_1(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_1", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_2
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_2")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_2
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_2(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_2", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_3
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_3")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_3
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_3(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_3", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_4
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_4")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_4
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_4(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_4", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_5
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_5")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_5
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_5(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_5", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_6
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_6")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_6
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_6(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_6", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_7
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_7")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_7
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_7(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_7", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_8
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_8")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_8
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_8(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_8", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_9
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_9")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_9
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_9(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_9", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_10
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_10")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_10
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_10(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_10", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_11
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_11")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_11
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_11(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_11", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_12
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_12")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_12
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_12(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_12", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_13
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_13")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_13
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_13(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_13", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_14
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_14")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_14
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_14(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_14", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_15
::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__18_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__18_15")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__18_15
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_15(::GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__18_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__18_15", value)));
}
// Autogenerated method: GameplayModifiersModelSO/<>c..cctor
void GlobalNamespace::GameplayModifiersModelSO::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayModifiersModelSO/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_0
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_0(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_1
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_1(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_2
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_2(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_3
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_3(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_4
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_4(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_5
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_5(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_6
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_6(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_7
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_7(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_8
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_8(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_9
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_9(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_10
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_10(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_11
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_11(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_12
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_12(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_13
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_13(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_14
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_14(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__18_15
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__18_15(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__18_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__18_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreFormatter
#include "GlobalNamespace/ScoreFormatter.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x111BC88
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.NumberFormatInfo _numberFormatInfo
::System::Globalization::NumberFormatInfo* GlobalNamespace::ScoreFormatter::_get__numberFormatInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreFormatter::_get__numberFormatInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberFormatInfo*>("", "ScoreFormatter", "_numberFormatInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.NumberFormatInfo _numberFormatInfo
void GlobalNamespace::ScoreFormatter::_set__numberFormatInfo(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreFormatter::_set__numberFormatInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreFormatter", "_numberFormatInfo", value));
}
// Autogenerated method: ScoreFormatter..cctor
void GlobalNamespace::ScoreFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ScoreFormatter.Format
::StringW GlobalNamespace::ScoreFormatter::Format(int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreFormatter::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreFormatter", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, score);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HierarchyIgnorePrefabOverrides
#include "GlobalNamespace/HierarchyIgnorePrefabOverrides.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardPlayerInfo
#include "GlobalNamespace/LeaderboardPlayerInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serverKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_serverKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_serverKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerKey>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerKey$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerKey$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerKey>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <authType>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$authType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$authType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<authType>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerFriends>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerFriends$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$playerFriends$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerFriends>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <succeeded>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LeaderboardPlayerInfo::dyn_$succeeded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::dyn_$succeeded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<succeeded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerId
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerId
void GlobalNamespace::LeaderboardPlayerInfo::set_playerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerName
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerName
void GlobalNamespace::LeaderboardPlayerInfo::set_playerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerKey
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_playerKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_playerKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerKey
void GlobalNamespace::LeaderboardPlayerInfo::set_playerKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_playerKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_authType
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_authType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_authType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_authType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_authType
void GlobalNamespace::LeaderboardPlayerInfo::set_authType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_authType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_authType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerFriends
::StringW GlobalNamespace::LeaderboardPlayerInfo::get_playerFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_playerFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerFriends
void GlobalNamespace::LeaderboardPlayerInfo::set_playerFriends(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_playerFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_succeeded
bool GlobalNamespace::LeaderboardPlayerInfo::get_succeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::get_succeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_succeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_succeeded
void GlobalNamespace::LeaderboardPlayerInfo::set_succeeded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardPlayerInfo::set_succeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_succeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardUploadData
#include "GlobalNamespace/LeaderboardUploadData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String score
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "score"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String leaderboardId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_leaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_leaderboardId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaderboardId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String songName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String songSubName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSubName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String authorName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_authorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_authorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String bpm
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_bpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_bpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String difficulty
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String infoHash
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardUploadData::dyn_infoHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_infoHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infoHash"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> modifiers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::LeaderboardUploadData::dyn_modifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardUploadData::dyn_modifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsIdModel
#include "GlobalNamespace/LocalLeaderboardsIdModel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalLeaderboardsIdModel.GetLocalLeaderboardID
::StringW GlobalNamespace::LocalLeaderboardsIdModel::GetLocalLeaderboardID(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsIdModel::GetLocalLeaderboardID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsIdModel", "GetLocalLeaderboardID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardIdsModelSO
#include "GlobalNamespace/LeaderboardIdsModelSO.hpp"
// Including type: LeaderboardIdsModelSO/LeaderboardIdData
#include "GlobalNamespace/LeaderboardIdsModelSO_LeaderboardIdData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LeaderboardIdsModelSO/LeaderboardIdData> _leaderboardIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData*>*& GlobalNamespace::LeaderboardIdsModelSO::dyn__leaderboardIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::dyn__leaderboardIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _leaderboardIdMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& GlobalNamespace::LeaderboardIdsModelSO::dyn__leaderboardIdMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::dyn__leaderboardIdMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardIdMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardIdsModelSO.RebuildMap
void GlobalNamespace::LeaderboardIdsModelSO::RebuildMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::RebuildMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardIdsModelSO.TryGetPlatformLeaderboardId
bool GlobalNamespace::LeaderboardIdsModelSO::TryGetPlatformLeaderboardId(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ByRef<::StringW> platformLeaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::TryGetPlatformLeaderboardId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPlatformLeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, difficultyBeatmap, byref(platformLeaderboardId));
}
// Autogenerated method: LeaderboardIdsModelSO.OnEnable
void GlobalNamespace::LeaderboardIdsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardIdsModelSO/LeaderboardIdData
#include "GlobalNamespace/LeaderboardIdsModelSO_LeaderboardIdData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _difficultyBeatmapId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData::dyn__difficultyBeatmapId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData::dyn__difficultyBeatmapId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _platformLeaderboardId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData::dyn__platformLeaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData::dyn__platformLeaderboardId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformLeaderboardId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardIdsModelSO/LeaderboardIdData.get_platformLeaderboardId
::StringW GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData::get_platformLeaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData::get_platformLeaderboardId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_platformLeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardIdsModelSO/LeaderboardIdData.get_difficultyBeatmapId
::StringW GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData::get_difficultyBeatmapId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardIdsModelSO::LeaderboardIdData::get_difficultyBeatmapId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader
#include "GlobalNamespace/LeaderboardScoreUploader.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: LeaderboardScoreUploader/ScoresToUploadData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoresToUploadData.hpp"
// Including type: LeaderboardScoreUploader/UploadScoreCallback
#include "GlobalNamespace/LeaderboardScoreUploader_UploadScoreCallback.hpp"
// Including type: LeaderboardScoreUploader/<>c__DisplayClass14_0
#include "GlobalNamespace/LeaderboardScoreUploader_--c__DisplayClass14_0.hpp"
// Including type: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14
#include "GlobalNamespace/LeaderboardScoreUploader_-UploadScoresCoroutine-d__14.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kScoresToUploadFileName
::StringW GlobalNamespace::LeaderboardScoreUploader::_get_kScoresToUploadFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::_get_kScoresToUploadFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LeaderboardScoreUploader", "kScoresToUploadFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kScoresToUploadFileName
void GlobalNamespace::LeaderboardScoreUploader::_set_kScoresToUploadFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::_set_kScoresToUploadFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LeaderboardScoreUploader", "kScoresToUploadFileName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action allScoresDidUploadEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LeaderboardScoreUploader::dyn_allScoresDidUploadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn_allScoresDidUploadEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allScoresDidUploadEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LeaderboardScoreUploader/ScoreData> _scoresToUpload
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>*& GlobalNamespace::LeaderboardScoreUploader::dyn__scoresToUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__scoresToUpload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoresToUpload"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LeaderboardScoreUploader/ScoreData> _scoresToUploadForCurrentPlayer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>*& GlobalNamespace::LeaderboardScoreUploader::dyn__scoresToUploadForCurrentPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__scoresToUploadForCurrentPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoresToUploadForCurrentPlayer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LeaderboardScoreUploader/UploadScoreCallback _uploadScoreCallback
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback*& GlobalNamespace::LeaderboardScoreUploader::dyn__uploadScoreCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__uploadScoreCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uploadScoreCallback"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardScoreUploader::dyn__playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _uploading
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LeaderboardScoreUploader::dyn__uploading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::dyn__uploading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uploading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardScoreUploader.add_allScoresDidUploadEvent
void GlobalNamespace::LeaderboardScoreUploader::add_allScoresDidUploadEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::add_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader.remove_allScoresDidUploadEvent
void GlobalNamespace::LeaderboardScoreUploader::remove_allScoresDidUploadEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::remove_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader.Init
void GlobalNamespace::LeaderboardScoreUploader::Init(::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback* uploadScoreCallback, ::StringW playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uploadScoreCallback), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uploadScoreCallback, playerId);
}
// Autogenerated method: LeaderboardScoreUploader.OnApplicationQuit
void GlobalNamespace::LeaderboardScoreUploader::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.UploadScoresCoroutine
::System::Collections::IEnumerator* GlobalNamespace::LeaderboardScoreUploader::UploadScoresCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::UploadScoresCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScoresCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.LoadScoresToUploadFromFile
void GlobalNamespace::LeaderboardScoreUploader::LoadScoresToUploadFromFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::LoadScoresToUploadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScoresToUploadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.SaveScoresToUploadToFile
void GlobalNamespace::LeaderboardScoreUploader::SaveScoresToUploadToFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::SaveScoresToUploadToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveScoresToUploadToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.AddScore
void GlobalNamespace::LeaderboardScoreUploader::AddScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scoreData);
}
// Autogenerated method: LeaderboardScoreUploader.<UploadScoresCoroutine>b__14_1
bool GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$b__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::<UploadScoresCoroutine>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScoresCoroutine>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <playerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$playerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$playerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap <beatmap>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$beatmap$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$beatmap$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmap>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers <gameplayModifiers>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers*& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$gameplayModifiers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$gameplayModifiers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gameplayModifiers>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <multipliedScore>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$multipliedScore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$multipliedScore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multipliedScore>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <modifiedScore>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$modifiedScore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$modifiedScore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<modifiedScore>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <fullCombo>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$fullCombo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$fullCombo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fullCombo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <goodCutsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$goodCutsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$goodCutsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<goodCutsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <badCutsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$badCutsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$badCutsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<badCutsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <missedCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$missedCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$missedCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missedCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <maxCombo>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$maxCombo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_$maxCombo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxCombo>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 uploadAttemptCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_uploadAttemptCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_uploadAttemptCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uploadAttemptCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentUploadAttemptCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_currentUploadAttemptCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::dyn_currentUploadAttemptCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentUploadAttemptCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_playerId
::StringW GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_playerId
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_playerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_beatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_beatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_beatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_beatmap
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_beatmap(::GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_beatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_gameplayModifiers
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_gameplayModifiers(::GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_multipliedScore
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_multipliedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_multipliedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipliedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_multipliedScore
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_multipliedScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_multipliedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multipliedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_modifiedScore
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_modifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_modifiedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modifiedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_modifiedScore
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_modifiedScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_modifiedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modifiedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_fullCombo
bool GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_fullCombo
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_fullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_goodCutsCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_goodCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_goodCutsCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_goodCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_badCutsCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_badCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_badCutsCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_badCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_missedCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_missedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_missedCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missedCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_missedCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_missedCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_missedCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missedCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_maxCombo
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_maxCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_maxCombo
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_maxCombo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_maxCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader/ScoresToUploadData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoresToUploadData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<LeaderboardScoreUploader/ScoreData> scores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>*& GlobalNamespace::LeaderboardScoreUploader::ScoresToUploadData::dyn_scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::ScoresToUploadData::dyn_scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardScoreUploader::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardScoreUploader/UploadScoreCallback
#include "GlobalNamespace/LeaderboardScoreUploader_UploadScoreCallback.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.Invoke
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::Invoke(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::BeginInvoke(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, scoreData, completionHandler, callback, object);
}
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.EndInvoke
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader/<>c__DisplayClass14_0
#include "GlobalNamespace/LeaderboardScoreUploader_--c__DisplayClass14_0.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LeaderboardScoreUploader/ScoreData scoreData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader::ScoreData*& GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::dyn_scoreData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::dyn_scoreData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader::ScoreData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LeaderboardScoreUploader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader*& GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardScoreUploader/<>c__DisplayClass14_0.<UploadScoresCoroutine>b__0
void GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::$UploadScoresCoroutine$b__0(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::<UploadScoresCoroutine>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScoresCoroutine>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14
#include "GlobalNamespace/LeaderboardScoreUploader_-UploadScoresCoroutine-d__14.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LeaderboardScoreUploader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader*& GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.IDisposable.Dispose
void GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.MoveNext
bool GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
// Including type: LocalLeaderboardsModel/SavedLeaderboardsData
#include "GlobalNamespace/LocalLeaderboardsModel_SavedLeaderboardsData.hpp"
// Including type: LocalLeaderboardsModel/<>c
#include "GlobalNamespace/LocalLeaderboardsModel_--c.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kLocalLeaderboardsFileName
::StringW GlobalNamespace::LocalLeaderboardsModel::_get_kLocalLeaderboardsFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::_get_kLocalLeaderboardsFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LocalLeaderboardsModel", "kLocalLeaderboardsFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLocalLeaderboardsFileName
void GlobalNamespace::LocalLeaderboardsModel::_set_kLocalLeaderboardsFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::_set_kLocalLeaderboardsFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel", "kLocalLeaderboardsFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kLocalDailyLeaderboardsFileName
::StringW GlobalNamespace::LocalLeaderboardsModel::_get_kLocalDailyLeaderboardsFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::_get_kLocalDailyLeaderboardsFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LocalLeaderboardsModel", "kLocalDailyLeaderboardsFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLocalDailyLeaderboardsFileName
void GlobalNamespace::LocalLeaderboardsModel::_set_kLocalDailyLeaderboardsFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::_set_kLocalDailyLeaderboardsFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel", "kLocalDailyLeaderboardsFileName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxNumberOfScoresInLeaderboard
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalLeaderboardsModel::dyn__maxNumberOfScoresInLeaderboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__maxNumberOfScoresInLeaderboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxNumberOfScoresInLeaderboard"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,LocalLeaderboardsModel/LeaderboardType> newScoreWasAddedToLeaderboardEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>*& GlobalNamespace::LocalLeaderboardsModel::dyn_newScoreWasAddedToLeaderboardEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn_newScoreWasAddedToLeaderboardEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newScoreWasAddedToLeaderboardEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<LocalLeaderboardsModel/LeaderboardType,System.Int32> _lastScorePositions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType, int>*& GlobalNamespace::LocalLeaderboardsModel::dyn__lastScorePositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__lastScorePositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScorePositions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _lastScoreLeaderboardId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalLeaderboardsModel::dyn__lastScoreLeaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__lastScoreLeaderboardId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastScoreLeaderboardId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LocalLeaderboardsModel/LeaderboardData> _leaderboardsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*& GlobalNamespace::LocalLeaderboardsModel::dyn__leaderboardsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__leaderboardsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LocalLeaderboardsModel/LeaderboardData> _dailyLeaderboardsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*& GlobalNamespace::LocalLeaderboardsModel::dyn__dailyLeaderboardsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::dyn__dailyLeaderboardsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dailyLeaderboardsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalLeaderboardsModel.add_newScoreWasAddedToLeaderboardEvent
void GlobalNamespace::LocalLeaderboardsModel::add_newScoreWasAddedToLeaderboardEvent(::System::Action_2<::StringW, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::add_newScoreWasAddedToLeaderboardEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_newScoreWasAddedToLeaderboardEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalLeaderboardsModel.remove_newScoreWasAddedToLeaderboardEvent
void GlobalNamespace::LocalLeaderboardsModel::remove_newScoreWasAddedToLeaderboardEvent(::System::Action_2<::StringW, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::remove_newScoreWasAddedToLeaderboardEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_newScoreWasAddedToLeaderboardEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalLeaderboardsModel.OnDisable
void GlobalNamespace::LocalLeaderboardsModel::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.LoadLeaderboardsData
void GlobalNamespace::LocalLeaderboardsModel::LoadLeaderboardsData(::StringW filename, ByRef<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*> leaderboardsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LoadLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel", "LoadLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, byref(leaderboardsData));
}
// Autogenerated method: LocalLeaderboardsModel.SaveLeaderboardsData
void GlobalNamespace::LocalLeaderboardsModel::SaveLeaderboardsData(::StringW filename, ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* leaderboardsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::SaveLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel", "SaveLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(leaderboardsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, leaderboardsData);
}
// Autogenerated method: LocalLeaderboardsModel.AppendLeaderboardScores
void GlobalNamespace::LocalLeaderboardsModel::AppendLeaderboardScores(::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* main, ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* tail, int maxNumberOfScores) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::AppendLeaderboardScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel", "AppendLeaderboardScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(main), ::il2cpp_utils::ExtractType(tail), ::il2cpp_utils::ExtractType(maxNumberOfScores)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, main, tail, maxNumberOfScores);
}
// Autogenerated method: LocalLeaderboardsModel.MigrateQuestLeaderboards
void GlobalNamespace::LocalLeaderboardsModel::MigrateQuestLeaderboards(::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* leaderboardDataList, int maxNumberOfScores) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::MigrateQuestLeaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel", "MigrateQuestLeaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardDataList), ::il2cpp_utils::ExtractType(maxNumberOfScores)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardDataList, maxNumberOfScores);
}
// Autogenerated method: LocalLeaderboardsModel.Load
void GlobalNamespace::LocalLeaderboardsModel::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.Save
void GlobalNamespace::LocalLeaderboardsModel::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.GetLeaderboardsData
::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardsData(::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*, false>(this, ___internal__method, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetLeaderboardData
::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData* GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardData(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetCurrentTimestamp
int64_t GlobalNamespace::LocalLeaderboardsModel::GetCurrentTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetCurrentTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.UpdateDailyLeaderboard
void GlobalNamespace::LocalLeaderboardsModel::UpdateDailyLeaderboard(::StringW leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::UpdateDailyLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDailyLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: LocalLeaderboardsModel.AddScore
void GlobalNamespace::LocalLeaderboardsModel::AddScore(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, ::StringW playerName, int score, bool fullCombo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(fullCombo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId, leaderboardType, playerName, score, fullCombo);
}
// Autogenerated method: LocalLeaderboardsModel.WillScoreGoIntoLeaderboard
bool GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoIntoLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaderboardId, leaderboardType, score);
}
// Autogenerated method: LocalLeaderboardsModel.GetScores
::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* GlobalNamespace::LocalLeaderboardsModel::GetScores(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>*, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetHighScore
int GlobalNamespace::LocalLeaderboardsModel::GetHighScore(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetHighScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHighScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetPositionInLeaderboard
int GlobalNamespace::LocalLeaderboardsModel::GetPositionInLeaderboard(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetPositionInLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionInLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType, score);
}
// Autogenerated method: LocalLeaderboardsModel.GetLastScorePosition
int GlobalNamespace::LocalLeaderboardsModel::GetLastScorePosition(::StringW leaderboardId, ::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::GetLastScorePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastScorePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.ClearLastScorePosition
void GlobalNamespace::LocalLeaderboardsModel::ClearLastScorePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ClearLastScorePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLastScorePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.AddScore
void GlobalNamespace::LocalLeaderboardsModel::AddScore(::StringW leaderboardId, ::StringW playerName, int score, bool fullCombo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(fullCombo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId, playerName, score, fullCombo);
}
// Autogenerated method: LocalLeaderboardsModel.WillScoreGoIntoLeaderboard
bool GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard(::StringW leaderboardId, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoIntoLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaderboardId, score);
}
// Autogenerated method: LocalLeaderboardsModel.ClearLeaderboard
void GlobalNamespace::LocalLeaderboardsModel::ClearLeaderboard(::StringW leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ClearLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: LocalLeaderboardsModel.ClearAllLeaderboards
void GlobalNamespace::LocalLeaderboardsModel::ClearAllLeaderboards(bool deleteLeaderboardFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ClearAllLeaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllLeaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deleteLeaderboardFile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deleteLeaderboardFile);
}
// Autogenerated method: LocalLeaderboardsModel.OnEnable
void GlobalNamespace::LocalLeaderboardsModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/LeaderboardType
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocalLeaderboardsModel/LeaderboardType AllTime
::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_AllTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_AllTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>("", "LocalLeaderboardsModel/LeaderboardType", "AllTime"));
}
// Autogenerated static field setter
// Set static field: static public LocalLeaderboardsModel/LeaderboardType AllTime
void GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_AllTime(::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_AllTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/LeaderboardType", "AllTime", value));
}
// Autogenerated static field getter
// Get static field: static public LocalLeaderboardsModel/LeaderboardType Daily
::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_Daily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_Daily");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>("", "LocalLeaderboardsModel/LeaderboardType", "Daily"));
}
// Autogenerated static field setter
// Set static field: static public LocalLeaderboardsModel/LeaderboardType Daily
void GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_Daily(::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_Daily");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/LeaderboardType", "Daily", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 _score
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_score"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String _playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _fullCombo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__fullCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullCombo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 _timestamp
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::ScoreData::dyn__timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timestamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String _leaderboardId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalLeaderboardsModel::LeaderboardData::dyn__leaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData::dyn__leaderboardId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<LocalLeaderboardsModel/ScoreData> _scores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>*& GlobalNamespace::LocalLeaderboardsModel::LeaderboardData::dyn__scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData::dyn__scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/SavedLeaderboardsData
#include "GlobalNamespace/LocalLeaderboardsModel_SavedLeaderboardsData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<LocalLeaderboardsModel/LeaderboardData> _leaderboardsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*& GlobalNamespace::LocalLeaderboardsModel::SavedLeaderboardsData::dyn__leaderboardsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::SavedLeaderboardsData::dyn__leaderboardsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/<>c
#include "GlobalNamespace/LocalLeaderboardsModel_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LocalLeaderboardsModel/<>c <>9
::GlobalNamespace::LocalLeaderboardsModel::$$c* GlobalNamespace::LocalLeaderboardsModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalLeaderboardsModel::$$c*>("", "LocalLeaderboardsModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LocalLeaderboardsModel/<>c <>9
void GlobalNamespace::LocalLeaderboardsModel::$$c::_set_$$9(::GlobalNamespace::LocalLeaderboardsModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<LocalLeaderboardsModel/ScoreData> <>9__18_0
::System::Comparison_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* GlobalNamespace::LocalLeaderboardsModel::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>*>("", "LocalLeaderboardsModel/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<LocalLeaderboardsModel/ScoreData> <>9__18_0
void GlobalNamespace::LocalLeaderboardsModel::$$c::_set_$$9__18_0(::System::Comparison_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/<>c", "<>9__18_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<LocalLeaderboardsModel/LeaderboardData,System.Boolean> <>9__19_0
::System::Func_2<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*, bool>* GlobalNamespace::LocalLeaderboardsModel::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*, bool>*>("", "LocalLeaderboardsModel/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<LocalLeaderboardsModel/LeaderboardData,System.Boolean> <>9__19_0
void GlobalNamespace::LocalLeaderboardsModel::$$c::_set_$$9__19_0(::System::Func_2<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<LocalLeaderboardsModel/LeaderboardData> <>9__19_1
::System::Predicate_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* GlobalNamespace::LocalLeaderboardsModel::$$c::_get_$$9__19_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::_get_$$9__19_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*>("", "LocalLeaderboardsModel/<>c", "<>9__19_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<LocalLeaderboardsModel/LeaderboardData> <>9__19_1
void GlobalNamespace::LocalLeaderboardsModel::$$c::_set_$$9__19_1(::System::Predicate_1<::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::_set_$$9__19_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/<>c", "<>9__19_1", value)));
}
// Autogenerated method: LocalLeaderboardsModel/<>c..cctor
void GlobalNamespace::LocalLeaderboardsModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel/<>c.<AppendLeaderboardScores>b__18_0
int GlobalNamespace::LocalLeaderboardsModel::$$c::$AppendLeaderboardScores$b__18_0(::GlobalNamespace::LocalLeaderboardsModel::ScoreData* a, ::GlobalNamespace::LocalLeaderboardsModel::ScoreData* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::<AppendLeaderboardScores>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppendLeaderboardScores>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: LocalLeaderboardsModel/<>c.<MigrateQuestLeaderboards>b__19_0
bool GlobalNamespace::LocalLeaderboardsModel::$$c::$MigrateQuestLeaderboards$b__19_0(::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData* leaderboardData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::<MigrateQuestLeaderboards>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MigrateQuestLeaderboards>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaderboardData);
}
// Autogenerated method: LocalLeaderboardsModel/<>c.<MigrateQuestLeaderboards>b__19_1
bool GlobalNamespace::LocalLeaderboardsModel::$$c::$MigrateQuestLeaderboards$b__19_1(::GlobalNamespace::LocalLeaderboardsModel::LeaderboardData* leaderboardData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardsModel::$$c::<MigrateQuestLeaderboards>b__19_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MigrateQuestLeaderboards>b__19_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaderboardData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass4_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass4_0.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass6_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass6_0.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass7_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass7_0.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: LeaderboardIdsModelSO
#include "GlobalNamespace/LeaderboardIdsModelSO.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt64> _oculusRequestIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint64_t>*& GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__oculusRequestIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__oculusRequestIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusRequestIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LeaderboardIdsModelSO _leaderboardIdsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardIdsModelSO*& GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__leaderboardIdsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::dyn__leaderboardIdsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardIdsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardIdsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.AddOculusRequest
void GlobalNamespace::OculusPlatformLeaderboardsHandler::AddOculusRequest(::Oculus::Platform::Request* oculusRequest, ::GlobalNamespace::HMAsyncRequest* asyncRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::AddOculusRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOculusRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oculusRequest), ::il2cpp_utils::ExtractType(asyncRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oculusRequest, asyncRequest);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.CheckMessageForValidRequest
bool GlobalNamespace::OculusPlatformLeaderboardsHandler::CheckMessageForValidRequest(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::CheckMessageForValidRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckMessageForValidRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::OculusPlatformLeaderboardsHandler::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::StringW referencePlayerId, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::OculusPlatformLeaderboardsHandler::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler/<>c
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OculusPlatformLeaderboardsHandler/<>c <>9
::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c* GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c*>("", "OculusPlatformLeaderboardsHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OculusPlatformLeaderboardsHandler/<>c <>9
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_set_$$9(::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OculusPlatformLeaderboardsHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.LeaderboardEntryList> <>9__3_0
typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>::Callback* GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>::Callback*>("", "OculusPlatformLeaderboardsHandler/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.LeaderboardEntryList> <>9__3_0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_set_$$9__3_0(typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>::Callback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OculusPlatformLeaderboardsHandler/<>c", "<>9__3_0", value)));
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c..cctor
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusPlatformLeaderboardsHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c.<.ctor>b__3_0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::$_ctor$b__3_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass4_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass4_0.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusPlatformLeaderboardsHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformLeaderboardsHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass4_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass4_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Request oculusRequest
[[deprecated("Use field access instead!")]] ::Oculus::Platform::Request*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass4_0::dyn_oculusRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass4_0::dyn_oculusRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusRequest"))->offset;
  return *reinterpret_cast<::Oculus::Platform::Request**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c__DisplayClass4_0.<AddOculusRequest>b__0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass4_0::$AddOculusRequest$b__0(::GlobalNamespace::HMAsyncRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass4_0::<AddOculusRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddOculusRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass6_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass6_0.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusPlatformLeaderboardsHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformLeaderboardsHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardsModel/GetScoresCompletionHandler completionHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String referencePlayerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_referencePlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::dyn_referencePlayerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referencePlayerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c__DisplayClass6_0.<GetScores>b__0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::$GetScores$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LeaderboardEntryList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass6_0::<GetScores>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetScores>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass7_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass7_0.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusPlatformLeaderboardsHandler <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformLeaderboardsHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass7_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass7_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardsModel/UploadScoreCompletionHandler completionHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*& GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass7_0::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass7_0::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler/<>c__DisplayClass7_0.<UploadScore>b__0
void GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass7_0::$UploadScore$b__0(::Oculus::Platform::Message_1<bool>* messsage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformLeaderboardsHandler::$$c__DisplayClass7_0::<UploadScore>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScore>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messsage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messsage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsHandler
#include "GlobalNamespace/PlatformLeaderboardsHandler.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformLeaderboardsHandler.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsHandler::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::StringW referencePlayerId, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsHandler::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsHandler.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsHandler::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsHandler::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformLeaderboardsHandler
#include "GlobalNamespace/TestPlatformLeaderboardsHandler.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformLeaderboardsHandler.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::TestPlatformLeaderboardsHandler::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::StringW referencePlayerId, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformLeaderboardsHandler::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: TestPlatformLeaderboardsHandler.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::TestPlatformLeaderboardsHandler::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformLeaderboardsHandler::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
// Including type: PlatformLeaderboardsModel/<Initialize>d__18
#include "GlobalNamespace/PlatformLeaderboardsModel_-Initialize-d__18.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: PlatformLeaderboardsHandler
#include "GlobalNamespace/PlatformLeaderboardsHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::PlatformLeaderboardsModel::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LeaderboardScoreUploader _leaderboardScoreUploader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardScoreUploader*& GlobalNamespace::PlatformLeaderboardsModel::dyn__leaderboardScoreUploader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__leaderboardScoreUploader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardScoreUploader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardScoreUploader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPlatformUserModel*& GlobalNamespace::PlatformLeaderboardsModel::dyn__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__platformUserModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformUserModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPlatformUserModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformLeaderboardsHandler _platformLeaderboardsHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsHandler*& GlobalNamespace::PlatformLeaderboardsModel::dyn__platformLeaderboardsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__platformLeaderboardsHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformLeaderboardsHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action allScoresDidUploadEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::PlatformLeaderboardsModel::dyn_allScoresDidUploadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn_allScoresDidUploadEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allScoresDidUploadEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlatformLeaderboardsModel/State _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel::State& GlobalNamespace::PlatformLeaderboardsModel::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformLeaderboardsModel::dyn__playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::dyn__playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformLeaderboardsModel.get_initialized
bool GlobalNamespace::PlatformLeaderboardsModel::get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::get_initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardsModel.add_allScoresDidUploadEvent
void GlobalNamespace::PlatformLeaderboardsModel::add_allScoresDidUploadEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::add_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlatformLeaderboardsModel.remove_allScoresDidUploadEvent
void GlobalNamespace::PlatformLeaderboardsModel::remove_allScoresDidUploadEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::remove_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlatformLeaderboardsModel.Initialize
void GlobalNamespace::PlatformLeaderboardsModel::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardsModel.UploadScore
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::UploadScore(::GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, ::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.HandleAllScoresDidUpload
void GlobalNamespace::PlatformLeaderboardsModel::HandleAllScoresDidUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::HandleAllScoresDidUpload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAllScoresDidUpload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardsModel.GetScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::GetScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.GetScoresAroundPlayer
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::GetScoresAroundPlayer(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresAroundPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScoresAroundPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.GetFriendsScores
::GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformLeaderboardsModel::GetFriendsScores(::GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, ::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetFriendsScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFriendsScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, completionHandler);
}
// Autogenerated method: PlatformLeaderboardsModel.UploadScore
void GlobalNamespace::PlatformLeaderboardsModel::UploadScore(::GlobalNamespace::IDifficultyBeatmap* beatmap, int multipliedScore, int modifiedScore, int maxPossibleMultipliedScore, bool fullCombo, int goodCutsCount, int badCutsCount, int missedCount, int maxCombo, float energy, ::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(modifiedScore), ::il2cpp_utils::ExtractType(maxPossibleMultipliedScore), ::il2cpp_utils::ExtractType(fullCombo), ::il2cpp_utils::ExtractType(goodCutsCount), ::il2cpp_utils::ExtractType(badCutsCount), ::il2cpp_utils::ExtractType(missedCount), ::il2cpp_utils::ExtractType(maxCombo), ::il2cpp_utils::ExtractType(energy), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmap, multipliedScore, modifiedScore, maxPossibleMultipliedScore, fullCombo, goodCutsCount, badCutsCount, missedCount, maxCombo, energy, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/State
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/State NotInitialized
::GlobalNamespace::PlatformLeaderboardsModel::State GlobalNamespace::PlatformLeaderboardsModel::State::_get_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_get_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::State>("", "PlatformLeaderboardsModel/State", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/State NotInitialized
void GlobalNamespace::PlatformLeaderboardsModel::State::_set_NotInitialized(::GlobalNamespace::PlatformLeaderboardsModel::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_set_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/State", "NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/State Initializing
::GlobalNamespace::PlatformLeaderboardsModel::State GlobalNamespace::PlatformLeaderboardsModel::State::_get_Initializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_get_Initializing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::State>("", "PlatformLeaderboardsModel/State", "Initializing"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/State Initializing
void GlobalNamespace::PlatformLeaderboardsModel::State::_set_Initializing(::GlobalNamespace::PlatformLeaderboardsModel::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_set_Initializing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/State", "Initializing", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/State Initialized
::GlobalNamespace::PlatformLeaderboardsModel::State GlobalNamespace::PlatformLeaderboardsModel::State::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::State>("", "PlatformLeaderboardsModel/State", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/State Initialized
void GlobalNamespace::PlatformLeaderboardsModel::State::_set_Initialized(::GlobalNamespace::PlatformLeaderboardsModel::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/State", "Initialized", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/GetScoresResult Ok
::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult>("", "PlatformLeaderboardsModel/GetScoresResult", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/GetScoresResult Ok
void GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_set_Ok(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/GetScoresResult", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/GetScoresResult Failed
::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult>("", "PlatformLeaderboardsModel/GetScoresResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/GetScoresResult Failed
void GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_set_Failed(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/GetScoresResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/UploadScoreResult Ok
::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult>("", "PlatformLeaderboardsModel/UploadScoreResult", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/UploadScoreResult Ok
void GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_set_Ok(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/UploadScoreResult", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/UploadScoreResult Failed
::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult>("", "PlatformLeaderboardsModel/UploadScoreResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/UploadScoreResult Failed
void GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_set_Failed(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/UploadScoreResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/ScoresScope Global
::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_Global");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>("", "PlatformLeaderboardsModel/ScoresScope", "Global"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/ScoresScope Global
void GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_Global(::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_Global");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/ScoresScope", "Global", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/ScoresScope AroundPlayer
::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_AroundPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_AroundPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>("", "PlatformLeaderboardsModel/ScoresScope", "AroundPlayer"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/ScoresScope AroundPlayer
void GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_AroundPlayer(::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_AroundPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/ScoresScope", "AroundPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformLeaderboardsModel/ScoresScope Friends
::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>("", "PlatformLeaderboardsModel/ScoresScope", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public PlatformLeaderboardsModel/ScoresScope Friends
void GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_Friends(::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardsModel/ScoresScope", "Friends", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::ScoresScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformLeaderboardsModel/GetScoresCompletionHandler.Invoke
void GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::Invoke(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult result, ::ArrayW<::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*> scores, int referencePlayerScoreIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(referencePlayerScoreIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result, scores, referencePlayerScoreIndex);
}
// Autogenerated method: PlatformLeaderboardsModel/GetScoresCompletionHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::BeginInvoke(::GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult result, ::ArrayW<::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*> scores, int referencePlayerScoreIndex, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(referencePlayerScoreIndex), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, result, scores, referencePlayerScoreIndex, callback, object);
}
// Autogenerated method: PlatformLeaderboardsModel/GetScoresCompletionHandler.EndInvoke
void GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformLeaderboardsModel/UploadScoreCompletionHandler.Invoke
void GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::Invoke(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: PlatformLeaderboardsModel/UploadScoreCompletionHandler.BeginInvoke
::System::IAsyncResult* GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::BeginInvoke(::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, result, callback, object);
}
// Autogenerated method: PlatformLeaderboardsModel/UploadScoreCompletionHandler.EndInvoke
void GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 score
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_score");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "score"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 rank
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_rank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore::dyn_playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformLeaderboardsModel/<Initialize>d__18
#include "GlobalNamespace/PlatformLeaderboardsModel_-Initialize-d__18.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlatformLeaderboardsModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel*& GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>& GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformLeaderboardsModel/<Initialize>d__18.MoveNext
void GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardsModel/<Initialize>d__18.SetStateMachine
void GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlatformLeaderboardsModel::$Initialize$d__18::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCompletionResultsHelper
#include "GlobalNamespace/LevelCompletionResultsHelper.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapObjectExecutionRating
#include "GlobalNamespace/BeatmapObjectExecutionRating.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCompletionResultsHelper.Create
::GlobalNamespace::LevelCompletionResults* GlobalNamespace::LevelCompletionResultsHelper::Create(::GlobalNamespace::IReadonlyBeatmapData* beatmapData, ::ArrayW<::GlobalNamespace::BeatmapObjectExecutionRating*> beatmapObjectExecutionRatings, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel, int multipliedScore, int modifiedScore, int maxCombo, ::ArrayW<float> saberActivityValues, float leftSaberMovementDistance, float rightSaberMovementDistance, ::ArrayW<float> handActivityValues, float leftHandMovementDistance, float rightHandMovementDistance, ::GlobalNamespace::LevelCompletionResults::LevelEndStateType levelEndStateType, ::GlobalNamespace::LevelCompletionResults::LevelEndAction levelEndAction, float energy, float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResultsHelper::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelCompletionResultsHelper", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(beatmapObjectExecutionRatings), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(gameplayModifiersModel), ::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(modifiedScore), ::il2cpp_utils::ExtractType(maxCombo), ::il2cpp_utils::ExtractType(saberActivityValues), ::il2cpp_utils::ExtractType(leftSaberMovementDistance), ::il2cpp_utils::ExtractType(rightSaberMovementDistance), ::il2cpp_utils::ExtractType(handActivityValues), ::il2cpp_utils::ExtractType(leftHandMovementDistance), ::il2cpp_utils::ExtractType(rightHandMovementDistance), ::il2cpp_utils::ExtractType(levelEndStateType), ::il2cpp_utils::ExtractType(levelEndAction), ::il2cpp_utils::ExtractType(energy), ::il2cpp_utils::ExtractType(songTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LevelCompletionResults*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, beatmapObjectExecutionRatings, gameplayModifiers, gameplayModifiersModel, multipliedScore, modifiedScore, maxCombo, saberActivityValues, leftSaberMovementDistance, rightSaberMovementDistance, handActivityValues, leftHandMovementDistance, rightHandMovementDistance, levelEndStateType, levelEndAction, energy, songTime);
}
// Autogenerated method: LevelCompletionResultsHelper.ProcessScore
void GlobalNamespace::LevelCompletionResultsHelper::ProcessScore(::GlobalNamespace::PlayerData* playerData, ::GlobalNamespace::PlayerLevelStatsData* playerLevelStats, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IReadonlyBeatmapData* transformedBeatmapData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::PlatformLeaderboardsModel* platformLeaderboardsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResultsHelper::ProcessScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelCompletionResultsHelper", "ProcessScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerData), ::il2cpp_utils::ExtractType(playerLevelStats), ::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(transformedBeatmapData), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(platformLeaderboardsModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerData, playerLevelStats, levelCompletionResults, transformedBeatmapData, difficultyBeatmap, platformLeaderboardsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelMissionParser
#include "GlobalNamespace/LevelMissionParser.hpp"
// Including type: LevelMissionParser/ParserFunction
#include "GlobalNamespace/LevelMissionParser_ParserFunction.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,LevelMissionParser/ParserFunction> _functions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LevelMissionParser::ParserFunction*>*& GlobalNamespace::LevelMissionParser::dyn__functions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::dyn__functions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_functions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LevelMissionParser::ParserFunction*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelMissionParser.AddFunction
void GlobalNamespace::LevelMissionParser::AddFunction(::StringW name, ::GlobalNamespace::LevelMissionParser::ParserFunction* function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::AddFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(function)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, function);
}
// Autogenerated method: LevelMissionParser.Parse
bool GlobalNamespace::LevelMissionParser::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated method: LevelMissionParser.Parse
bool GlobalNamespace::LevelMissionParser::Parse(::StringW s, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, start, length);
}
// Autogenerated method: LevelMissionParser.ParseFunction
bool GlobalNamespace::LevelMissionParser::ParseFunction(::StringW s, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::ParseFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, start, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelMissionParser/ParserFunction
#include "GlobalNamespace/LevelMissionParser_ParserFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelMissionParser/ParserFunction.Invoke
bool GlobalNamespace::LevelMissionParser::ParserFunction::Invoke(::ArrayW<float> functionParams, int paramCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::ParserFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(functionParams), ::il2cpp_utils::ExtractType(paramCount)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, functionParams, paramCount);
}
// Autogenerated method: LevelMissionParser/ParserFunction.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LevelMissionParser::ParserFunction::BeginInvoke(::ArrayW<float> functionParams, int paramCount, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::ParserFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(functionParams), ::il2cpp_utils::ExtractType(paramCount), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, functionParams, paramCount, callback, object);
}
// Autogenerated method: LevelMissionParser/ParserFunction.EndInvoke
bool GlobalNamespace::LevelMissionParser::ParserFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelMissionParser::ParserFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _ignore360MovementCharacteristics
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__ignore360MovementCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__ignore360MovementCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignore360MovementCharacteristics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO[] _beatmapCharacteristics
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>& GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__beatmapCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__beatmapCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristics"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO[] _no360beatmapCharacteristics
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>& GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__no360beatmapCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::dyn__no360beatmapCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_no360beatmapCharacteristics"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.get_beatmapCharacteristics
::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::BeatmapCharacteristicCollectionSO::get_beatmapCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::get_beatmapCharacteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.GetBeatmapCharacteristicBySerializedName
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicCollectionSO::GetBeatmapCharacteristicBySerializedName(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::GetBeatmapCharacteristicBySerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapCharacteristicBySerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.ContainsBeatmapCharacteristic
bool GlobalNamespace::BeatmapCharacteristicCollectionSO::ContainsBeatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::ContainsBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.InitData
void GlobalNamespace::BeatmapCharacteristicCollectionSO::InitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::InitData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.GetCharacteristicsWithout360Movement
::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::BeatmapCharacteristicCollectionSO::GetCharacteristicsWithout360Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::GetCharacteristicsWithout360Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacteristicsWithout360Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicCollectionSO.OnEnable
void GlobalNamespace::BeatmapCharacteristicCollectionSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicCollectionSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _icon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::BeatmapCharacteristicSO::dyn__icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_icon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _descriptionLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicSO::dyn__descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__descriptionLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_descriptionLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _characteristicNameLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicSO::dyn__characteristicNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__characteristicNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characteristicNameLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _serializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicSO::dyn__serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _compoundIdPartName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicSO::dyn__compoundIdPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__compoundIdPartName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compoundIdPartName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sortingOrder
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapCharacteristicSO::dyn__sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__sortingOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortingOrder"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _containsRotationEvents
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapCharacteristicSO::dyn__containsRotationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__containsRotationEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_containsRotationEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _requires360Movement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapCharacteristicSO::dyn__requires360Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__requires360Movement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requires360Movement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfColors
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapCharacteristicSO::dyn__numberOfColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::dyn__numberOfColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfColors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicSO.get_icon
::UnityEngine::Sprite* GlobalNamespace::BeatmapCharacteristicSO::get_icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_descriptionLocalizationKey
::StringW GlobalNamespace::BeatmapCharacteristicSO::get_descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_descriptionLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_descriptionLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_characteristicNameLocalizationKey
::StringW GlobalNamespace::BeatmapCharacteristicSO::get_characteristicNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_characteristicNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characteristicNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_serializedName
::StringW GlobalNamespace::BeatmapCharacteristicSO::get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_serializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_compoundIdPartName
::StringW GlobalNamespace::BeatmapCharacteristicSO::get_compoundIdPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_compoundIdPartName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compoundIdPartName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_sortingOrder
int GlobalNamespace::BeatmapCharacteristicSO::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_containsRotationEvents
bool GlobalNamespace::BeatmapCharacteristicSO::get_containsRotationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_containsRotationEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containsRotationEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_requires360Movement
bool GlobalNamespace::BeatmapCharacteristicSO::get_requires360Movement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_requires360Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requires360Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSO.get_numberOfColors
int GlobalNamespace::BeatmapCharacteristicSO::get_numberOfColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSO::get_numberOfColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviewDifficultyBeatmapSetExtensions
#include "GlobalNamespace/PreviewDifficultyBeatmapSetExtensions.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewDifficultyBeatmapSetExtensions.GetBeatmapCharacteristics
::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::PreviewDifficultyBeatmapSetExtensions::GetBeatmapCharacteristics(::ArrayW<::GlobalNamespace::PreviewDifficultyBeatmapSet*> previewDifficultyBeatmapSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviewDifficultyBeatmapSetExtensions::GetBeatmapCharacteristics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PreviewDifficultyBeatmapSetExtensions", "GetBeatmapCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewDifficultyBeatmapSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previewDifficultyBeatmapSet);
}
// Autogenerated method: PreviewDifficultyBeatmapSetExtensions.GetPreviewDifficultyBeatmapSetWithout360Movement
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::PreviewDifficultyBeatmapSetExtensions::GetPreviewDifficultyBeatmapSetWithout360Movement(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>* previewDifficultyBeatmapSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviewDifficultyBeatmapSetExtensions::GetPreviewDifficultyBeatmapSetWithout360Movement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PreviewDifficultyBeatmapSetExtensions", "GetPreviewDifficultyBeatmapSetWithout360Movement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewDifficultyBeatmapSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previewDifficultyBeatmapSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: BeatmapData/BeatmapDataBinaryHeapItem
#include "GlobalNamespace/BeatmapData_BeatmapDataBinaryHeapItem.hpp"
// Including type: BeatmapData/<>c__DisplayClass45_0`1
#include "GlobalNamespace/BeatmapData_--c__DisplayClass45_0_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ISortedList`1
#include "GlobalNamespace/ISortedList_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BeatmapDataSortedListForTypeAndIds`1
#include "GlobalNamespace/BeatmapDataSortedListForTypeAndIds_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapObjectsInTimeRowProcessor
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <updateAllBeatmapDataOnInsert>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapData::dyn_$updateAllBeatmapDataOnInsert$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_$updateAllBeatmapDataOnInsert$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<updateAllBeatmapDataOnInsert>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <cuttableNotesCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapData::dyn_$cuttableNotesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_$cuttableNotesCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cuttableNotesCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <obstaclesCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapData::dyn_$obstaclesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_$obstaclesCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<obstaclesCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <bombsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapData::dyn_$bombsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_$bombsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bombsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<BeatmapEventData,System.Collections.Generic.LinkedListNode`1<BeatmapDataItem>> beatmapEventDataWasInsertedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>*& GlobalNamespace::BeatmapData::dyn_beatmapEventDataWasInsertedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_beatmapEventDataWasInsertedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapEventDataWasInsertedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<BeatmapEventData,System.Collections.Generic.LinkedListNode`1<BeatmapDataItem>> beatmapEventDataWillBeRemovedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>*& GlobalNamespace::BeatmapData::dyn_beatmapEventDataWillBeRemovedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_beatmapEventDataWillBeRemovedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapEventDataWillBeRemovedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapEventData> beatmapEventDataWasRemovedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::BeatmapEventData*>*& GlobalNamespace::BeatmapData::dyn_beatmapEventDataWasRemovedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn_beatmapEventDataWasRemovedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapEventDataWasRemovedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BeatmapEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ISortedList`1<BeatmapDataItem> _allBeatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ISortedList_1<::GlobalNamespace::BeatmapDataItem*>*& GlobalNamespace::BeatmapData::dyn__allBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__allBeatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allBeatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ISortedList_1<::GlobalNamespace::BeatmapDataItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<BeatmapDataItem,System.Collections.Generic.LinkedListNode`1<BeatmapDataItem>> _allBeatmapDataItemToNodeMap
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::BeatmapDataItem*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>*& GlobalNamespace::BeatmapData::dyn__allBeatmapDataItemToNodeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__allBeatmapDataItemToNodeMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allBeatmapDataItemToNodeMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::BeatmapDataItem*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDataSortedListForTypeAndIds`1<BeatmapDataItem> _beatmapDataItemsPerTypeAndId
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1<::GlobalNamespace::BeatmapDataItem*>*& GlobalNamespace::BeatmapData::dyn__beatmapDataItemsPerTypeAndId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__beatmapDataItemsPerTypeAndId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataItemsPerTypeAndId"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSortedListForTypeAndIds_1<::GlobalNamespace::BeatmapDataItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _numberOfLines
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapData::dyn__numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__numberOfLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _specialBasicBeatmapEventKeywords
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::BeatmapData::dyn__specialBasicBeatmapEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__specialBasicBeatmapEventKeywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialBasicBeatmapEventKeywords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectsInTimeRowProcessor _beatmapObjectsInTimeRowProcessor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapObjectsInTimeRowProcessor*& GlobalNamespace::BeatmapData::dyn__beatmapObjectsInTimeRowProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__beatmapObjectsInTimeRowProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectsInTimeRowProcessor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectsInTimeRowProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevAddedBeatmapObjectDataTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapData::dyn__prevAddedBeatmapObjectDataTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__prevAddedBeatmapObjectDataTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevAddedBeatmapObjectDataTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isCreatingFilteredCopy
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapData::dyn__isCreatingFilteredCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::dyn__isCreatingFilteredCopy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCreatingFilteredCopy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapData.get_updateAllBeatmapDataOnInsert
bool GlobalNamespace::BeatmapData::get_updateAllBeatmapDataOnInsert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_updateAllBeatmapDataOnInsert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateAllBeatmapDataOnInsert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.set_updateAllBeatmapDataOnInsert
void GlobalNamespace::BeatmapData::set_updateAllBeatmapDataOnInsert(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::set_updateAllBeatmapDataOnInsert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateAllBeatmapDataOnInsert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.get_allBeatmapDataItems
::System::Collections::Generic::LinkedList_1<::GlobalNamespace::BeatmapDataItem*>* GlobalNamespace::BeatmapData::get_allBeatmapDataItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_allBeatmapDataItems");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allBeatmapDataItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedList_1<::GlobalNamespace::BeatmapDataItem*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.get_numberOfLines
int GlobalNamespace::BeatmapData::get_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_numberOfLines");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.get_cuttableNotesCount
int GlobalNamespace::BeatmapData::get_cuttableNotesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_cuttableNotesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cuttableNotesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.set_cuttableNotesCount
void GlobalNamespace::BeatmapData::set_cuttableNotesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::set_cuttableNotesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cuttableNotesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.get_obstaclesCount
int GlobalNamespace::BeatmapData::get_obstaclesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_obstaclesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.set_obstaclesCount
void GlobalNamespace::BeatmapData::set_obstaclesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::set_obstaclesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.get_bombsCount
int GlobalNamespace::BeatmapData::get_bombsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_bombsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.set_bombsCount
void GlobalNamespace::BeatmapData::set_bombsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::set_bombsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.get_spawnRotationEventsCount
int GlobalNamespace::BeatmapData::get_spawnRotationEventsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_spawnRotationEventsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spawnRotationEventsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.get_specialBasicBeatmapEventKeywords
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::BeatmapData::get_specialBasicBeatmapEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::get_specialBasicBeatmapEventKeywords");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specialBasicBeatmapEventKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.add_beatmapEventDataWasInsertedEvent
void GlobalNamespace::BeatmapData::add_beatmapEventDataWasInsertedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::add_beatmapEventDataWasInsertedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWasInsertedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.remove_beatmapEventDataWasInsertedEvent
void GlobalNamespace::BeatmapData::remove_beatmapEventDataWasInsertedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::remove_beatmapEventDataWasInsertedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWasInsertedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.add_beatmapEventDataWillBeRemovedEvent
void GlobalNamespace::BeatmapData::add_beatmapEventDataWillBeRemovedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::add_beatmapEventDataWillBeRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWillBeRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.remove_beatmapEventDataWillBeRemovedEvent
void GlobalNamespace::BeatmapData::remove_beatmapEventDataWillBeRemovedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::remove_beatmapEventDataWillBeRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWillBeRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.add_beatmapEventDataWasRemovedEvent
void GlobalNamespace::BeatmapData::add_beatmapEventDataWasRemovedEvent(::System::Action_1<::GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::add_beatmapEventDataWasRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWasRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.remove_beatmapEventDataWasRemovedEvent
void GlobalNamespace::BeatmapData::remove_beatmapEventDataWasRemovedEvent(::System::Action_1<::GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::remove_beatmapEventDataWasRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWasRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapData.AddBeatmapObjectData
void GlobalNamespace::BeatmapData::AddBeatmapObjectData(::GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::AddBeatmapObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBeatmapObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated method: BeatmapData.AddBeatmapObjectDataInOrder
void GlobalNamespace::BeatmapData::AddBeatmapObjectDataInOrder(::GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::AddBeatmapObjectDataInOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBeatmapObjectDataInOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated method: BeatmapData.InsertBeatmapEventData
void GlobalNamespace::BeatmapData::InsertBeatmapEventData(::GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::InsertBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertBeatmapEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapData.InsertBeatmapEventDataInOrder
void GlobalNamespace::BeatmapData::InsertBeatmapEventDataInOrder(::GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::InsertBeatmapEventDataInOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertBeatmapEventDataInOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapData.RemoveBeatmapEventData
void GlobalNamespace::BeatmapData::RemoveBeatmapEventData(::GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::RemoveBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBeatmapEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapData.AddSpecialBasicBeatmapEventKeyword
void GlobalNamespace::BeatmapData::AddSpecialBasicBeatmapEventKeyword(::StringW specialBasicBeatmapEventKeyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::AddSpecialBasicBeatmapEventKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpecialBasicBeatmapEventKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specialBasicBeatmapEventKeyword)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, specialBasicBeatmapEventKeyword);
}
// Autogenerated method: BeatmapData.ProcessRemainingData
void GlobalNamespace::BeatmapData::ProcessRemainingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::ProcessRemainingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRemainingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.ProcessAndSortBeatmapData
void GlobalNamespace::BeatmapData::ProcessAndSortBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::ProcessAndSortBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAndSortBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.GetCopy
::GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapData.GetFilteredCopy
::GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapData::GetFilteredCopy(::System::Func_2<::GlobalNamespace::BeatmapDataItem*, ::GlobalNamespace::BeatmapDataItem*>* processDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::GetFilteredCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFilteredCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(this, ___internal__method, processDataItem);
}
// Autogenerated method: BeatmapData.InsertToAllBeatmapData
::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* GlobalNamespace::BeatmapData::InsertToAllBeatmapData(::GlobalNamespace::BeatmapDataItem* beatmapDataItem, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::InsertToAllBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertToAllBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem), ::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*, false>(this, ___internal__method, beatmapDataItem, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapData/BeatmapDataBinaryHeapItem
#include "GlobalNamespace/BeatmapData_BeatmapDataBinaryHeapItem.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.LinkedListNode`1<BeatmapDataItem> node
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*& GlobalNamespace::BeatmapData::BeatmapDataBinaryHeapItem::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::BeatmapDataBinaryHeapItem::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapData/BeatmapDataBinaryHeapItem.CompareTo
int GlobalNamespace::BeatmapData::BeatmapDataBinaryHeapItem::CompareTo(::GlobalNamespace::BeatmapData::BeatmapDataBinaryHeapItem* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapData::BeatmapDataBinaryHeapItem::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataBasicInfo
#include "GlobalNamespace/BeatmapDataBasicInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <numberOfLines>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataBasicInfo::dyn_$numberOfLines$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$numberOfLines$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numberOfLines>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <cuttableNotesCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataBasicInfo::dyn_$cuttableNotesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$cuttableNotesCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cuttableNotesCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <obstaclesCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataBasicInfo::dyn_$obstaclesCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$obstaclesCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<obstaclesCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <bombsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataBasicInfo::dyn_$bombsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$bombsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bombsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IEnumerable`1<System.String> <specialBasicBeatmapEventKeywords>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& GlobalNamespace::BeatmapDataBasicInfo::dyn_$specialBasicBeatmapEventKeywords$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::dyn_$specialBasicBeatmapEventKeywords$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<specialBasicBeatmapEventKeywords>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataBasicInfo.get_numberOfLines
int GlobalNamespace::BeatmapDataBasicInfo::get_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_numberOfLines");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataBasicInfo.get_cuttableNotesCount
int GlobalNamespace::BeatmapDataBasicInfo::get_cuttableNotesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_cuttableNotesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cuttableNotesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataBasicInfo.get_obstaclesCount
int GlobalNamespace::BeatmapDataBasicInfo::get_obstaclesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_obstaclesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataBasicInfo.get_bombsCount
int GlobalNamespace::BeatmapDataBasicInfo::get_bombsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_bombsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataBasicInfo.get_specialBasicBeatmapEventKeywords
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::BeatmapDataBasicInfo::get_specialBasicBeatmapEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataBasicInfo::get_specialBasicBeatmapEventKeywords");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specialBasicBeatmapEventKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO
#include "GlobalNamespace/BeatmapDataSO.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass1_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass1_0.hpp"
// Including type: BeatmapDataSO/<GetBeatmapDataBasicInfoAsync>d__1
#include "GlobalNamespace/BeatmapDataSO_-GetBeatmapDataBasicInfoAsync-d__1.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass2_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass2_0.hpp"
// Including type: BeatmapDataSO/<GetBeatmapDataAsync>d__2
#include "GlobalNamespace/BeatmapDataSO_-GetBeatmapDataAsync-d__2.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass5_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass5_0.hpp"
// Including type: BeatmapDataSO/<LoadBeatmapSaveDataAsync>d__5
#include "GlobalNamespace/BeatmapDataSO_-LoadBeatmapSaveDataAsync-d__5.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass6_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass6_0.hpp"
// Including type: BeatmapDataSO/<RunTaskAndLogException>d__6
#include "GlobalNamespace/BeatmapDataSO_-RunTaskAndLogException-d__6.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String _jsonData
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapDataSO::dyn__jsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::dyn__jsonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jsonData"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapDataBasicInfo _beatmapDataBasic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapDataBasicInfo*& GlobalNamespace::BeatmapDataSO::dyn__beatmapDataBasic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::dyn__beatmapDataBasic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataBasic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapDataBasicInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO.GetBeatmapDataBasicInfoAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>* GlobalNamespace::BeatmapDataSO::GetBeatmapDataBasicInfoAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::GetBeatmapDataBasicInfoAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataBasicInfoAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO.GetBeatmapDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>* GlobalNamespace::BeatmapDataSO::GetBeatmapDataAsync(::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, float beatsPerMinute, bool loadingForDesignatedEnvironment, ::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::GetBeatmapDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatsPerMinute), ::il2cpp_utils::ExtractType(loadingForDesignatedEnvironment), ::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>*, false>(this, ___internal__method, beatmapDifficulty, beatsPerMinute, loadingForDesignatedEnvironment, environmentInfo, playerSpecificSettings);
}
// Autogenerated method: BeatmapDataSO.SetJsonData
void GlobalNamespace::BeatmapDataSO::SetJsonData(::StringW jsonData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::SetJsonData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJsonData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jsonData);
}
// Autogenerated method: BeatmapDataSO.LoadBeatmapSaveDataAsync
::System::Threading::Tasks::Task_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>* GlobalNamespace::BeatmapDataSO::LoadBeatmapSaveDataAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::LoadBeatmapSaveDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBeatmapSaveDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO.RunTaskAndLogException
::System::Threading::Tasks::Task* GlobalNamespace::BeatmapDataSO::RunTaskAndLogException(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::RunTaskAndLogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunTaskAndLogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, action);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<>c__DisplayClass1_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass1_0.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IBeatmapDataBasicInfo beatmapDataBasicInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapDataBasicInfo*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::dyn_beatmapDataBasicInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::dyn_beatmapDataBasicInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDataBasicInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapDataBasicInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapSaveDataVersion3.BeatmapSaveData beatmapSaveData
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::dyn_beatmapSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::dyn_beatmapSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapSaveData"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<>c__DisplayClass1_0.<GetBeatmapDataBasicInfoAsync>b__0
void GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::$GetBeatmapDataBasicInfoAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0::<GetBeatmapDataBasicInfoAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetBeatmapDataBasicInfoAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<GetBeatmapDataBasicInfoAsync>d__1
#include "GlobalNamespace/BeatmapDataSO_-GetBeatmapDataBasicInfoAsync-d__1.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass1_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass1_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IBeatmapDataBasicInfo> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataSO/<>c__DisplayClass1_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass1_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapSaveDataVersion3.BeatmapSaveData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<GetBeatmapDataBasicInfoAsync>d__1.MoveNext
void GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO/<GetBeatmapDataBasicInfoAsync>d__1.SetStateMachine
void GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataBasicInfoAsync$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<>c__DisplayClass2_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass2_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IReadonlyBeatmapData readonlyBeatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_readonlyBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_readonlyBeatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readonlyBeatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapSaveDataVersion3.BeatmapSaveData beatmapSaveData
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatmapSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatmapSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapSaveData"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single beatsPerMinute
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean loadingForDesignatedEnvironment
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_loadingForDesignatedEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_loadingForDesignatedEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingForDesignatedEnvironment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<>c__DisplayClass2_0.<GetBeatmapDataAsync>b__0
void GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::$GetBeatmapDataAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0::<GetBeatmapDataAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetBeatmapDataAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<GetBeatmapDataAsync>d__2
#include "GlobalNamespace/BeatmapDataSO_-GetBeatmapDataAsync-d__2.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass2_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass2_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IReadonlyBeatmapData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_beatmapDifficulty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single beatsPerMinute
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_beatsPerMinute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean loadingForDesignatedEnvironment
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_loadingForDesignatedEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_loadingForDesignatedEnvironment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadingForDesignatedEnvironment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_environmentInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_playerSpecificSettings");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataSO/<>c__DisplayClass2_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0*& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass2_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BeatmapSaveDataVersion3.BeatmapSaveData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<GetBeatmapDataAsync>d__2.MoveNext
void GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO/<GetBeatmapDataAsync>d__2.SetStateMachine
void GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$GetBeatmapDataAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<>c__DisplayClass5_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass5_0.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapSaveDataVersion3.BeatmapSaveData beatmapSaveData
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::dyn_beatmapSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::dyn_beatmapSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapSaveData"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<>c__DisplayClass5_0.<LoadBeatmapSaveDataAsync>b__0
void GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::$LoadBeatmapSaveDataAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0::<LoadBeatmapSaveDataAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadBeatmapSaveDataAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<LoadBeatmapSaveDataAsync>d__5
#include "GlobalNamespace/BeatmapDataSO_-LoadBeatmapSaveDataAsync-d__5.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: BeatmapDataSO/<>c__DisplayClass5_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<BeatmapSaveDataVersion3.BeatmapSaveData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::BeatmapSaveDataVersion3::BeatmapSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataSO <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO*& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataSO/<>c__DisplayClass5_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0*& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<LoadBeatmapSaveDataAsync>d__5.MoveNext
void GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO/<LoadBeatmapSaveDataAsync>d__5.SetStateMachine
void GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$LoadBeatmapSaveDataAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<>c__DisplayClass6_0
#include "GlobalNamespace/BeatmapDataSO_--c__DisplayClass6_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::BeatmapDataSO::$$c__DisplayClass6_0::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass6_0::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<>c__DisplayClass6_0.<RunTaskAndLogException>b__0
void GlobalNamespace::BeatmapDataSO::$$c__DisplayClass6_0::$RunTaskAndLogException$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$$c__DisplayClass6_0::<RunTaskAndLogException>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunTaskAndLogException>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataSO/<RunTaskAndLogException>d__6
#include "GlobalNamespace/BeatmapDataSO_-RunTaskAndLogException-d__6.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_action");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataSO/<RunTaskAndLogException>d__6.MoveNext
void GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataSO/<RunTaskAndLogException>d__6.SetStateMachine
void GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataSO::$RunTaskAndLogException$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatToTimeConvertor
#include "GlobalNamespace/IBeatToTimeConvertor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatToTimeConvertor.ConvertBeatToTime
float GlobalNamespace::IBeatToTimeConvertor::ConvertBeatToTime(float beat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatToTimeConvertor::ConvertBeatToTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertBeatToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beat)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, beat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapDataBasicInfo.get_numberOfLines
int GlobalNamespace::IBeatmapDataBasicInfo::get_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_numberOfLines");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapDataBasicInfo.get_cuttableNotesCount
int GlobalNamespace::IBeatmapDataBasicInfo::get_cuttableNotesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_cuttableNotesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cuttableNotesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapDataBasicInfo.get_obstaclesCount
int GlobalNamespace::IBeatmapDataBasicInfo::get_obstaclesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_obstaclesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapDataBasicInfo.get_bombsCount
int GlobalNamespace::IBeatmapDataBasicInfo::get_bombsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_bombsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapDataBasicInfo.get_specialBasicBeatmapEventKeywords
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::IBeatmapDataBasicInfo::get_specialBasicBeatmapEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapDataBasicInfo::get_specialBasicBeatmapEventKeywords");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specialBasicBeatmapEventKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IReadonlyBeatmapData.get_allBeatmapDataItems
::System::Collections::Generic::LinkedList_1<::GlobalNamespace::BeatmapDataItem*>* GlobalNamespace::IReadonlyBeatmapData::get_allBeatmapDataItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::get_allBeatmapDataItems");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allBeatmapDataItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::LinkedList_1<::GlobalNamespace::BeatmapDataItem*>*, false>(this, ___internal__method);
}
// Autogenerated method: IReadonlyBeatmapData.get_spawnRotationEventsCount
int GlobalNamespace::IReadonlyBeatmapData::get_spawnRotationEventsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::get_spawnRotationEventsCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spawnRotationEventsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IReadonlyBeatmapData.add_beatmapEventDataWasInsertedEvent
void GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWasInsertedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWasInsertedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWasInsertedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.remove_beatmapEventDataWasInsertedEvent
void GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWasInsertedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWasInsertedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWasInsertedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.add_beatmapEventDataWillBeRemovedEvent
void GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWillBeRemovedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWillBeRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWillBeRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.remove_beatmapEventDataWillBeRemovedEvent
void GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWillBeRemovedEvent(::System::Action_2<::GlobalNamespace::BeatmapEventData*, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWillBeRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWillBeRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.add_beatmapEventDataWasRemovedEvent
void GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWasRemovedEvent(::System::Action_1<::GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::add_beatmapEventDataWasRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDataWasRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.remove_beatmapEventDataWasRemovedEvent
void GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWasRemovedEvent(::System::Action_1<::GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::remove_beatmapEventDataWasRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDataWasRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IReadonlyBeatmapData.GetCopy
::GlobalNamespace::BeatmapData* GlobalNamespace::IReadonlyBeatmapData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated method: IReadonlyBeatmapData.GetFilteredCopy
::GlobalNamespace::BeatmapData* GlobalNamespace::IReadonlyBeatmapData::GetFilteredCopy(::System::Func_2<::GlobalNamespace::BeatmapDataItem*, ::GlobalNamespace::BeatmapDataItem*>* processDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapData::GetFilteredCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFilteredCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(this, ___internal__method, processDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader
#include "GlobalNamespace/BeatmapDataLoader.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
// Including type: BeatmapDataLoader/BasicEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_BasicEventConvertor.hpp"
// Including type: BeatmapDataLoader/BeatmapDataItemConvertor`3
#include "GlobalNamespace/BeatmapDataLoader_BeatmapDataItemConvertor_3.hpp"
// Including type: BeatmapDataLoader/BombNoteConvertor
#include "GlobalNamespace/BeatmapDataLoader_BombNoteConvertor.hpp"
// Including type: BeatmapDataLoader/BpmEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_BpmEventConvertor.hpp"
// Including type: BeatmapDataLoader/ColorBoostEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_ColorBoostEventConvertor.hpp"
// Including type: BeatmapDataLoader/ColorNoteConvertor
#include "GlobalNamespace/BeatmapDataLoader_ColorNoteConvertor.hpp"
// Including type: BeatmapDataLoader/BeatmapEventDataBoxDistributionParamTypeConvertor
#include "GlobalNamespace/BeatmapDataLoader_BeatmapEventDataBoxDistributionParamTypeConvertor.hpp"
// Including type: BeatmapDataLoader/EventBoxGroupConvertor
#include "GlobalNamespace/BeatmapDataLoader_EventBoxGroupConvertor.hpp"
// Including type: BeatmapDataLoader/IndexFilterConvertor
#include "GlobalNamespace/BeatmapDataLoader_IndexFilterConvertor.hpp"
// Including type: BeatmapDataLoader/LightColorEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightColorEventBoxConvertor.hpp"
// Including type: BeatmapDataLoader/LightColoBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightColoBaseDataConvertor.hpp"
// Including type: BeatmapDataLoader/LightRotationEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightRotationEventBoxConvertor.hpp"
// Including type: BeatmapDataLoader/LightRotationBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightRotationBaseDataConvertor.hpp"
// Including type: BeatmapDataLoader/LightTranslationEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightTranslationEventBoxConvertor.hpp"
// Including type: BeatmapDataLoader/LightTranslationBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightTranslationBaseDataConvertor.hpp"
// Including type: BeatmapDataLoader/ObstacleConvertor
#include "GlobalNamespace/BeatmapDataLoader_ObstacleConvertor.hpp"
// Including type: BeatmapDataLoader/RotationEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_RotationEventConvertor.hpp"
// Including type: BeatmapDataLoader/SliderConvertor
#include "GlobalNamespace/BeatmapDataLoader_SliderConvertor.hpp"
// Including type: BeatmapDataLoader/BurstSliderConvertor
#include "GlobalNamespace/BeatmapDataLoader_BurstSliderConvertor.hpp"
// Including type: BeatmapDataLoader/WaypointConvertor
#include "GlobalNamespace/BeatmapDataLoader_WaypointConvertor.hpp"
// Including type: BeatmapDataLoader/SpecialEventsFilter
#include "GlobalNamespace/BeatmapDataLoader_SpecialEventsFilter.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: EnvironmentKeywords
#include "GlobalNamespace/EnvironmentKeywords.hpp"
// Including type: EnvironmentLightGroups
#include "GlobalNamespace/EnvironmentLightGroups.hpp"
// Including type: DefaultEnvironmentEvents
#include "GlobalNamespace/DefaultEnvironmentEvents.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: BeatmapDataBasicInfo
#include "GlobalNamespace/BeatmapDataBasicInfo.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: BeatmapEventTransitionType
#include "GlobalNamespace/BeatmapEventTransitionType.hpp"
// Including type: LightAxis
#include "GlobalNamespace/LightAxis.hpp"
// Including type: EaseType
#include "GlobalNamespace/EaseType.hpp"
// Including type: LightRotationDirection
#include "GlobalNamespace/LightRotationDirection.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_NoteColorType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EnvironmentColorType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_TransitionType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis
#include "BeatmapSaveDataVersion3/BeatmapSaveData_Axis.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_SliderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultNumberOfLines
int GlobalNamespace::BeatmapDataLoader::_get_kDefaultNumberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::_get_kDefaultNumberOfLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapDataLoader", "kDefaultNumberOfLines"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultNumberOfLines
void GlobalNamespace::BeatmapDataLoader::_set_kDefaultNumberOfLines(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::_set_kDefaultNumberOfLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataLoader", "kDefaultNumberOfLines", value));
}
// Autogenerated method: BeatmapDataLoader.GetBeatmapDataFromBeatmapSaveData
::GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapDataLoader::GetBeatmapDataFromBeatmapSaveData(::BeatmapSaveDataVersion3::BeatmapSaveData* beatmapSaveData, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, float startBpm, bool loadingForDesignatedEnvironment, ::GlobalNamespace::EnvironmentKeywords* environmentKeywords, ::GlobalNamespace::EnvironmentLightGroups* environmentLightGroups, ::GlobalNamespace::DefaultEnvironmentEvents* defaultEnvironmentEvents, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::GetBeatmapDataFromBeatmapSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "GetBeatmapDataFromBeatmapSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(startBpm), ::il2cpp_utils::ExtractType(loadingForDesignatedEnvironment), ::il2cpp_utils::ExtractType(environmentKeywords), ::il2cpp_utils::ExtractType(environmentLightGroups), ::il2cpp_utils::ExtractType(defaultEnvironmentEvents), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData, beatmapDifficulty, startBpm, loadingForDesignatedEnvironment, environmentKeywords, environmentLightGroups, defaultEnvironmentEvents, playerSpecificSettings);
}
// Autogenerated method: BeatmapDataLoader.GetBeatmapDataBasicInfoFromSaveData
::GlobalNamespace::BeatmapDataBasicInfo* GlobalNamespace::BeatmapDataLoader::GetBeatmapDataBasicInfoFromSaveData(::BeatmapSaveDataVersion3::BeatmapSaveData* beatmapSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::GetBeatmapDataBasicInfoFromSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "GetBeatmapDataBasicInfoFromSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataBasicInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData);
}
// Autogenerated method: BeatmapDataLoader.GetBeatmapDataFromSaveData
::GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapDataLoader::GetBeatmapDataFromSaveData(::BeatmapSaveDataVersion3::BeatmapSaveData* beatmapSaveData, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, float startBpm, bool loadingForDesignatedEnvironment, ::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::GetBeatmapDataFromSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "GetBeatmapDataFromSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(startBpm), ::il2cpp_utils::ExtractType(loadingForDesignatedEnvironment), ::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData, beatmapDifficulty, startBpm, loadingForDesignatedEnvironment, environmentInfo, playerSpecificSettings);
}
// Autogenerated method: BeatmapDataLoader.ConvertColorType
::GlobalNamespace::ColorType GlobalNamespace::BeatmapDataLoader::ConvertColorType(::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType noteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertColorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertColorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, noteType);
}
// Autogenerated method: BeatmapDataLoader.ConvertColorType
::GlobalNamespace::EnvironmentColorType GlobalNamespace::BeatmapDataLoader::ConvertColorType(::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType environmentColorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertColorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertColorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentColorType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, environmentColorType);
}
// Autogenerated method: BeatmapDataLoader.ConvertBeatmapEventTransitionType
::GlobalNamespace::BeatmapEventTransitionType GlobalNamespace::BeatmapDataLoader::ConvertBeatmapEventTransitionType(::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertBeatmapEventTransitionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertBeatmapEventTransitionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventTransitionType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transitionType);
}
// Autogenerated method: BeatmapDataLoader.ConvertAxis
::GlobalNamespace::LightAxis GlobalNamespace::BeatmapDataLoader::ConvertAxis(::BeatmapSaveDataVersion3::BeatmapSaveData::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightAxis, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis);
}
// Autogenerated method: BeatmapDataLoader.ConvertEaseType
::GlobalNamespace::EaseType GlobalNamespace::BeatmapDataLoader::ConvertEaseType(::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType easeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertEaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertEaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(easeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EaseType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, easeType);
}
// Autogenerated method: BeatmapDataLoader.ConvertNoteLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::BeatmapDataLoader::ConvertNoteLineLayer(int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertNoteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertNoteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer);
}
// Autogenerated method: BeatmapDataLoader.ConvertSliderType
::GlobalNamespace::SliderData::Type GlobalNamespace::BeatmapDataLoader::ConvertSliderType(::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType sliderType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertSliderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertSliderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData::Type, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sliderType);
}
// Autogenerated method: BeatmapDataLoader.ConvertRotationOrientation
::GlobalNamespace::LightRotationDirection GlobalNamespace::BeatmapDataLoader::ConvertRotationOrientation(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection rotationDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ConvertRotationOrientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader", "ConvertRotationOrientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightRotationDirection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotationDirection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BpmChangeEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BpmChangeEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatmapDataLoader/BpmTimeProcessor/BpmChangeData> _bpmChangeDataList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData>*& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::dyn__bpmChangeDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::dyn__bpmChangeDataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bpmChangeDataList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentBpmChangesDataIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::dyn_currentBpmChangesDataIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::dyn_currentBpmChangesDataIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentBpmChangesDataIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/BpmTimeProcessor.ConvertBeatToTime
float GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::ConvertBeatToTime(float beat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::ConvertBeatToTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertBeatToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beat)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, beat);
}
// Autogenerated method: BeatmapDataLoader/BpmTimeProcessor.Reset
void GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BpmTimeProcessor/BpmChangeData
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single bpmChangeStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpmChangeStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpmChangeStartTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpmChangeStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single bpmChangeStartBpmTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpmChangeStartBpmTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpmChangeStartBpmTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpmChangeStartBpmTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single bpm
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::dyn_bpm");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/BpmTimeProcessor/BpmChangeData..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapDataLoader::BpmTimeProcessor::BpmChangeData::BpmChangeData(float bpmChangeStartTime, float bpmChangeStartBpmTime, float bpm)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BasicEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_BasicEventConvertor.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
// Including type: BasicBeatmapEventType
#include "GlobalNamespace/BasicBeatmapEventType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventData.hpp"
// Including type: BeatmapDataLoader/SpecialEventsFilter
#include "GlobalNamespace/BeatmapDataLoader_SpecialEventsFilter.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDataLoader/SpecialEventsFilter _specialEventsFilter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter*& GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::dyn__specialEventsFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::dyn__specialEventsFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialEventsFilter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/BasicEventConvertor.Convert
::GlobalNamespace::BasicBeatmapEventData* GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData* basicEventSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicEventSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BasicBeatmapEventData*, false>(this, ___internal__method, basicEventSaveData);
}
// Autogenerated method: BeatmapDataLoader/BasicEventConvertor.ConvertFromBeatmapSaveDataBeatmapEventType
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::ConvertFromBeatmapSaveDataBeatmapEventType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType beatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BasicEventConvertor::ConvertFromBeatmapSaveDataBeatmapEventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/BasicEventConvertor", "ConvertFromBeatmapSaveDataBeatmapEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BasicBeatmapEventType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapEventType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BombNoteConvertor
#include "GlobalNamespace/BeatmapDataLoader_BombNoteConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BombNoteData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BombNoteData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/BombNoteConvertor.Convert
::GlobalNamespace::NoteData* GlobalNamespace::BeatmapDataLoader::BombNoteConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData* bombNoteSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BombNoteConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bombNoteSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(this, ___internal__method, bombNoteSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BpmEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_BpmEventConvertor.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: BPMChangeBeatmapEventData
#include "GlobalNamespace/BPMChangeBeatmapEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BpmChangeEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BpmChangeEventData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/BpmEventConvertor.Convert
::GlobalNamespace::BPMChangeBeatmapEventData* GlobalNamespace::BeatmapDataLoader::BpmEventConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::BpmChangeEventData* bpmChangeEventSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BpmEventConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpmChangeEventSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BPMChangeBeatmapEventData*, false>(this, ___internal__method, bpmChangeEventSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/ColorBoostEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_ColorBoostEventConvertor.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: ColorBoostBeatmapEventData
#include "GlobalNamespace/ColorBoostBeatmapEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorBoostEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ColorBoostEventData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/ColorBoostEventConvertor.Convert
::GlobalNamespace::ColorBoostBeatmapEventData* GlobalNamespace::BeatmapDataLoader::ColorBoostEventConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::ColorBoostEventData* colorBoostEventSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ColorBoostEventConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBoostEventSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorBoostBeatmapEventData*, false>(this, ___internal__method, colorBoostEventSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/ColorNoteConvertor
#include "GlobalNamespace/BeatmapDataLoader_ColorNoteConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ColorNoteData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/ColorNoteConvertor.Convert
::GlobalNamespace::NoteData* GlobalNamespace::BeatmapDataLoader::ColorNoteConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData* colorNoteSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ColorNoteConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorNoteSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(this, ___internal__method, colorNoteSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BeatmapEventDataBoxDistributionParamTypeConvertor
#include "GlobalNamespace/BeatmapDataLoader_BeatmapEventDataBoxDistributionParamTypeConvertor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/BeatmapEventDataBoxDistributionParamTypeConvertor.Convert
::GlobalNamespace::BeatmapEventDataBox::DistributionParamType GlobalNamespace::BeatmapDataLoader::BeatmapEventDataBoxDistributionParamTypeConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType distributionParamType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BeatmapEventDataBoxDistributionParamTypeConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/BeatmapEventDataBoxDistributionParamTypeConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distributionParamType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBox::DistributionParamType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, distributionParamType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/EventBoxGroupConvertor
#include "GlobalNamespace/BeatmapDataLoader_EventBoxGroupConvertor.hpp"
// Including type: DataConvertor`2
#include "GlobalNamespace/DataConvertor_2.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: LightGroupSO
#include "GlobalNamespace/LightGroupSO.hpp"
// Including type: EnvironmentLightGroups
#include "GlobalNamespace/EnvironmentLightGroups.hpp"
// Including type: BeatmapEventDataBoxGroup
#include "GlobalNamespace/BeatmapEventDataBoxGroup.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBoxGroup
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBoxGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly DataConvertor`2<BeatmapEventDataBox,LightGroupSO> _dataConvertor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DataConvertor_2<::GlobalNamespace::BeatmapEventDataBox*, ::GlobalNamespace::LightGroupSO*>*& GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::dyn__dataConvertor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::dyn__dataConvertor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataConvertor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DataConvertor_2<::GlobalNamespace::BeatmapEventDataBox*, ::GlobalNamespace::LightGroupSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentLightGroups _lightGroups
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentLightGroups*& GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::dyn__lightGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::dyn__lightGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroups"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentLightGroups**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/EventBoxGroupConvertor.Convert
::GlobalNamespace::BeatmapEventDataBoxGroup* GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::EventBoxGroup* eventBoxGroupSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::EventBoxGroupConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventBoxGroupSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBoxGroup*, false>(this, ___internal__method, eventBoxGroupSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/IndexFilterConvertor
#include "GlobalNamespace/BeatmapDataLoader_IndexFilterConvertor.hpp"
// Including type: IndexFilter
#include "GlobalNamespace/IndexFilter.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter
#include "BeatmapSaveDataVersion3/BeatmapSaveData_IndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/IndexFilterConvertor.Convert
::GlobalNamespace::IndexFilter* GlobalNamespace::BeatmapDataLoader::IndexFilterConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter* indexFilter, int groupSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::IndexFilterConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/IndexFilterConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexFilter), ::il2cpp_utils::ExtractType(groupSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IndexFilter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, indexFilter, groupSize);
}
// Autogenerated method: BeatmapDataLoader/IndexFilterConvertor.IsIndexFilterValid
bool GlobalNamespace::BeatmapDataLoader::IndexFilterConvertor::IsIndexFilterValid(::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter* indexFilter, int groupSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::IndexFilterConvertor::IsIndexFilterValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/IndexFilterConvertor", "IsIndexFilterValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexFilter), ::il2cpp_utils::ExtractType(groupSize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, indexFilter, groupSize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightColorEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightColorEventBoxConvertor.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: LightColorBeatmapEventDataBox
#include "GlobalNamespace/LightColorBeatmapEventDataBox.hpp"
// Including type: LightGroupSO
#include "GlobalNamespace/LightGroupSO.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorEventBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightColorEventBoxConvertor.Convert
::GlobalNamespace::LightColorBeatmapEventDataBox* GlobalNamespace::BeatmapDataLoader::LightColorEventBoxConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox* saveData, ::GlobalNamespace::LightGroupSO* lightGroupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightColorEventBoxConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData), ::il2cpp_utils::ExtractType(lightGroupData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightColorBeatmapEventDataBox*, false>(this, ___internal__method, saveData, lightGroupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightColoBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightColoBaseDataConvertor.hpp"
// Including type: LightColorBaseData
#include "GlobalNamespace/LightColorBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightColoBaseDataConvertor.Convert
::GlobalNamespace::LightColorBaseData* GlobalNamespace::BeatmapDataLoader::LightColoBaseDataConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData* saveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightColoBaseDataConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/LightColoBaseDataConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightColorBaseData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightRotationEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightRotationEventBoxConvertor.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: LightRotationBeatmapEventDataBox
#include "GlobalNamespace/LightRotationBeatmapEventDataBox.hpp"
// Including type: LightGroupSO
#include "GlobalNamespace/LightGroupSO.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationEventBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightRotationEventBoxConvertor.Convert
::GlobalNamespace::LightRotationBeatmapEventDataBox* GlobalNamespace::BeatmapDataLoader::LightRotationEventBoxConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox* saveData, ::GlobalNamespace::LightGroupSO* lightGroupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightRotationEventBoxConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData), ::il2cpp_utils::ExtractType(lightGroupData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightRotationBeatmapEventDataBox*, false>(this, ___internal__method, saveData, lightGroupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightRotationBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightRotationBaseDataConvertor.hpp"
// Including type: LightRotationBaseData
#include "GlobalNamespace/LightRotationBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightRotationBaseDataConvertor.Convert
::GlobalNamespace::LightRotationBaseData* GlobalNamespace::BeatmapDataLoader::LightRotationBaseDataConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData* saveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightRotationBaseDataConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/LightRotationBaseDataConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightRotationBaseData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightTranslationEventBoxConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightTranslationEventBoxConvertor.hpp"
// Including type: BeatmapEventDataBox
#include "GlobalNamespace/BeatmapEventDataBox.hpp"
// Including type: LightTranslationBeatmapEventDataBox
#include "GlobalNamespace/LightTranslationBeatmapEventDataBox.hpp"
// Including type: LightGroupSO
#include "GlobalNamespace/LightGroupSO.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightTranslationEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightTranslationEventBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightTranslationEventBoxConvertor.Convert
::GlobalNamespace::LightTranslationBeatmapEventDataBox* GlobalNamespace::BeatmapDataLoader::LightTranslationEventBoxConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightTranslationEventBox* saveData, ::GlobalNamespace::LightGroupSO* lightGroupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightTranslationEventBoxConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData), ::il2cpp_utils::ExtractType(lightGroupData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightTranslationBeatmapEventDataBox*, false>(this, ___internal__method, saveData, lightGroupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/LightTranslationBaseDataConvertor
#include "GlobalNamespace/BeatmapDataLoader_LightTranslationBaseDataConvertor.hpp"
// Including type: LightTranslationBaseData
#include "GlobalNamespace/LightTranslationBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightTranslationBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightTranslationBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/LightTranslationBaseDataConvertor.Convert
::GlobalNamespace::LightTranslationBaseData* GlobalNamespace::BeatmapDataLoader::LightTranslationBaseDataConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::LightTranslationBaseData* saveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::LightTranslationBaseDataConvertor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/LightTranslationBaseDataConvertor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightTranslationBaseData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/ObstacleConvertor
#include "GlobalNamespace/BeatmapDataLoader_ObstacleConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ObstacleData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/ObstacleConvertor.Convert
::GlobalNamespace::ObstacleData* GlobalNamespace::BeatmapDataLoader::ObstacleConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData* obstacleSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ObstacleConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObstacleData*, false>(this, ___internal__method, obstacleSaveData);
}
// Autogenerated method: BeatmapDataLoader/ObstacleConvertor.GetNoteLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::BeatmapDataLoader::ObstacleConvertor::GetNoteLineLayer(int lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::ObstacleConvertor::GetNoteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/ObstacleConvertor", "GetNoteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineLayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/RotationEventConvertor
#include "GlobalNamespace/BeatmapDataLoader_RotationEventConvertor.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.RotationEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_RotationEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ExecutionTime.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/RotationEventConvertor.Convert
::GlobalNamespace::SpawnRotationBeatmapEventData* GlobalNamespace::BeatmapDataLoader::RotationEventConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData* rotationEventSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::RotationEventConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationEventSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SpawnRotationBeatmapEventData*, false>(this, ___internal__method, rotationEventSaveData);
}
// Autogenerated method: BeatmapDataLoader/RotationEventConvertor.SpawnRotationEventType
::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType GlobalNamespace::BeatmapDataLoader::RotationEventConvertor::SpawnRotationEventType(::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime executionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::RotationEventConvertor::SpawnRotationEventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataLoader/RotationEventConvertor", "SpawnRotationEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executionTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, executionTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/SliderConvertor
#include "GlobalNamespace/BeatmapDataLoader_SliderConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_SliderData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/SliderConvertor.Convert
::GlobalNamespace::SliderData* GlobalNamespace::BeatmapDataLoader::SliderConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData* sliderSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::SliderConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData*, false>(this, ___internal__method, sliderSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/BurstSliderConvertor
#include "GlobalNamespace/BeatmapDataLoader_BurstSliderConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BurstSliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BurstSliderData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/BurstSliderConvertor.Convert
::GlobalNamespace::SliderData* GlobalNamespace::BeatmapDataLoader::BurstSliderConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData* sliderSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::BurstSliderConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData*, false>(this, ___internal__method, sliderSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/WaypointConvertor
#include "GlobalNamespace/BeatmapDataLoader_WaypointConvertor.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: WaypointData
#include "GlobalNamespace/WaypointData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.WaypointData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_WaypointData.hpp"
// Including type: BeatmapDataLoader/BpmTimeProcessor
#include "GlobalNamespace/BeatmapDataLoader_BpmTimeProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataLoader/WaypointConvertor.Convert
::GlobalNamespace::WaypointData* GlobalNamespace::BeatmapDataLoader::WaypointConvertor::Convert(::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData* waypointSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::WaypointConvertor::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waypointSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::WaypointData*, false>(this, ___internal__method, waypointSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataLoader/SpecialEventsFilter
#include "GlobalNamespace/BeatmapDataLoader_SpecialEventsFilter.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: EnvironmentKeywords
#include "GlobalNamespace/EnvironmentKeywords.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventTypesWithKeywords.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType> _eventTypesToFilter
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>*& GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter::dyn__eventTypesToFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter::dyn__eventTypesToFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventTypesToFilter"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataLoader/SpecialEventsFilter.IsEventValid
bool GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter::IsEventValid(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType basicBeatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataLoader::SpecialEventsFilter::IsEventValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEventValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, basicBeatmapEventType);
}
