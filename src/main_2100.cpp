// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScreenSystem
#include "HMUI/ScreenSystem.hpp"
// Including type: HMUI.Screen
#include "HMUI/Screen.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.TitleViewController
#include "HMUI/TitleViewController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.Screen _mainScreen
[[deprecated("Use field access instead!")]] ::HMUI::Screen*& HMUI::ScreenSystem::dyn__mainScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__mainScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainScreen"))->offset;
  return *reinterpret_cast<::HMUI::Screen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.Screen _leftScreen
[[deprecated("Use field access instead!")]] ::HMUI::Screen*& HMUI::ScreenSystem::dyn__leftScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__leftScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftScreen"))->offset;
  return *reinterpret_cast<::HMUI::Screen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.Screen _rightScreen
[[deprecated("Use field access instead!")]] ::HMUI::Screen*& HMUI::ScreenSystem::dyn__rightScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__rightScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightScreen"))->offset;
  return *reinterpret_cast<::HMUI::Screen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.Screen _bottomScreen
[[deprecated("Use field access instead!")]] ::HMUI::Screen*& HMUI::ScreenSystem::dyn__bottomScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__bottomScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bottomScreen"))->offset;
  return *reinterpret_cast<::HMUI::Screen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.Screen _topScreen
[[deprecated("Use field access instead!")]] ::HMUI::Screen*& HMUI::ScreenSystem::dyn__topScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__topScreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topScreen"))->offset;
  return *reinterpret_cast<::HMUI::Screen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _backButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& HMUI::ScreenSystem::dyn__backButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__backButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TitleViewController _titleViewController
[[deprecated("Use field access instead!")]] ::HMUI::TitleViewController*& HMUI::ScreenSystem::dyn__titleViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__titleViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleViewController"))->offset;
  return *reinterpret_cast<::HMUI::TitleViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action backButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& HMUI::ScreenSystem::dyn_backButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn_backButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _backButtonIsVisible
[[deprecated("Use field access instead!")]] bool& HMUI::ScreenSystem::dyn__backButtonIsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__backButtonIsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonIsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& HMUI::ScreenSystem::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ScreenSystem.get_titleViewController
::HMUI::TitleViewController* HMUI::ScreenSystem::get_titleViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::get_titleViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TitleViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_mainScreen
::HMUI::Screen* HMUI::ScreenSystem::get_mainScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::get_mainScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_leftScreen
::HMUI::Screen* HMUI::ScreenSystem::get_leftScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::get_leftScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_rightScreen
::HMUI::Screen* HMUI::ScreenSystem::get_rightScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::get_rightScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_bottomScreen
::HMUI::Screen* HMUI::ScreenSystem::get_bottomScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::get_bottomScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bottomScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.get_topScreen
::HMUI::Screen* HMUI::ScreenSystem::get_topScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::get_topScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_topScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.add_backButtonWasPressedEvent
void HMUI::ScreenSystem::add_backButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::add_backButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_backButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ScreenSystem.remove_backButtonWasPressedEvent
void HMUI::ScreenSystem::remove_backButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::remove_backButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_backButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ScreenSystem.Awake
void HMUI::ScreenSystem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.OnDestroy
void HMUI::ScreenSystem::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScreenSystem.SetBackButton
void HMUI::ScreenSystem::SetBackButton(bool visible, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::SetBackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible, animated);
}
// Autogenerated method: HMUI.ScreenSystem.<Awake>b__24_0
void HMUI::ScreenSystem::$Awake$b__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScreenSystem::<Awake>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.StackedController
#include "HMUI/StackedController.hpp"
// Including type: HMUI.StackedController/HMUI.<>c
#include "HMUI/StackedController_--c.hpp"
// Including type: HMUI.StackedController/HMUI.<>c__DisplayClass5_0
#include "HMUI/StackedController_--c__DisplayClass5_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.StackedController.get_topStackedViewController
::HMUI::ViewController* HMUI::StackedController::get_topStackedViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::get_topStackedViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_topStackedViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.StackedController.PushViewController
void HMUI::StackedController::PushViewController(::HMUI::ViewController* viewController, ::System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::PushViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, finishedCallback, immediately);
}
// Autogenerated method: HMUI.StackedController.PopViewController
void HMUI::StackedController::PopViewController(::System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::PopViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishedCallback, immediately);
}
// Autogenerated method: HMUI.StackedController.PopViewControllers
void HMUI::StackedController::PopViewControllers(int numberOfViewControllersToPop, ::System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::PopViewControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopViewControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfViewControllersToPop), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numberOfViewControllersToPop, finishedCallback, immediately);
}
// Autogenerated method: HMUI.StackedController.SetupViewControllerRect
void HMUI::StackedController::SetupViewControllerRect(::HMUI::ViewController* viewController, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::SetupViewControllerRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "StackedController", "SetupViewControllerRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, viewController, index);
}
// Autogenerated method: HMUI.StackedController.LayoutViewControllers
void HMUI::StackedController::LayoutViewControllers(::System::Collections::Generic::List_1<::HMUI::ViewController*>* viewControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::LayoutViewControllers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutViewControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewControllers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewControllers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.StackedController/HMUI.<>c
#include "HMUI/StackedController_--c.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HMUI.StackedController/HMUI.<>c <>9
::HMUI::StackedController::$$c* HMUI::StackedController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::StackedController::$$c*>("HMUI", "StackedController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HMUI.StackedController/HMUI.<>c <>9
void HMUI::StackedController::$$c::_set_$$9(::HMUI::StackedController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "StackedController/<>c", "<>9", value)));
}
// Autogenerated method: HMUI.StackedController/HMUI.<>c..cctor
void HMUI::StackedController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "StackedController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.StackedController/HMUI.<>c.<PushViewController>g__AnimationLayouter|3_0
void HMUI::StackedController::$$c::$PushViewController$g__AnimationLayouter_3_0(float t, ::ArrayW<::HMUI::ViewController*> viewControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::$$c::<PushViewController>g__AnimationLayouter|3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PushViewController>g__AnimationLayouter|3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(viewControllers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, viewControllers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.StackedController/HMUI.<>c__DisplayClass5_0
#include "HMUI/StackedController_--c__DisplayClass5_0.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 numberOfViewControllersToPop
[[deprecated("Use field access instead!")]] int& HMUI::StackedController::$$c__DisplayClass5_0::dyn_numberOfViewControllersToPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::$$c__DisplayClass5_0::dyn_numberOfViewControllersToPop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberOfViewControllersToPop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.StackedController/HMUI.<>c__DisplayClass5_0.<PopViewControllers>g__AnimationLayouter|0
void HMUI::StackedController::$$c__DisplayClass5_0::$PopViewControllers$g__AnimationLayouter_0(float t, ::ArrayW<::HMUI::ViewController*> viewControllers, ::System::Collections::Generic::HashSet_1<::HMUI::ViewController*>* removingViewControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::StackedController::$$c__DisplayClass5_0::<PopViewControllers>g__AnimationLayouter|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PopViewControllers>g__AnimationLayouter|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(viewControllers), ::il2cpp_utils::ExtractType(removingViewControllers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, viewControllers, removingViewControllers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TitleViewController
#include "HMUI/TitleViewController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& HMUI::TitleViewController::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TitleViewController::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.TitleViewController.SetText
void HMUI::TitleViewController::SetText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TitleViewController::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: HMUI.ViewController/HMUI.DidActivateDelegate
#include "HMUI/ViewController_DidActivateDelegate.hpp"
// Including type: HMUI.ViewController/HMUI.DidDeactivateDelegate
#include "HMUI/ViewController_DidDeactivateDelegate.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationDirection
#include "HMUI/ViewController_AnimationDirection.hpp"
// Including type: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58
#include "HMUI/ViewController_-PresentViewControllerCoroutine-d__58.hpp"
// Including type: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60
#include "HMUI/ViewController_-ReplaceViewControllerCoroutine-d__60.hpp"
// Including type: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62
#include "HMUI/ViewController_-DismissViewControllerCoroutine-d__62.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.ContainerViewController
#include "HMUI/ContainerViewController.hpp"
// Including type: HMUI.Screen
#include "HMUI/Screen.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.EventSystems.BaseRaycaster
#include "UnityEngine/EventSystems/BaseRaycaster.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kTransitionDuration
float HMUI::ViewController::_get_kTransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::_get_kTransitionDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewController", "kTransitionDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kTransitionDuration
void HMUI::ViewController::_set_kTransitionDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::_set_kTransitionDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController", "kTransitionDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kTransitionMoveOffset
float HMUI::ViewController::_get_kTransitionMoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::_get_kTransitionMoveOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewController", "kTransitionMoveOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTransitionMoveOffset
void HMUI::ViewController::_set_kTransitionMoveOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::_set_kTransitionMoveOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController", "kTransitionMoveOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController/HMUI.DidActivateDelegate didActivateEvent
[[deprecated("Use field access instead!")]] ::HMUI::ViewController::DidActivateDelegate*& HMUI::ViewController::dyn_didActivateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn_didActivateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didActivateEvent"))->offset;
  return *reinterpret_cast<::HMUI::ViewController::DidActivateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController/HMUI.DidDeactivateDelegate didDeactivateEvent
[[deprecated("Use field access instead!")]] ::HMUI::ViewController::DidDeactivateDelegate*& HMUI::ViewController::dyn_didDeactivateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn_didDeactivateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDeactivateEvent"))->offset;
  return *reinterpret_cast<::HMUI::ViewController::DidDeactivateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder <buttonBinder>k__BackingField
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& HMUI::ViewController::dyn_$buttonBinder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn_$buttonBinder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<buttonBinder>k__BackingField"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ContainerViewController _containerViewController
[[deprecated("Use field access instead!")]] ::HMUI::ContainerViewController*& HMUI::ViewController::dyn__containerViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__containerViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_containerViewController"))->offset;
  return *reinterpret_cast<::HMUI::ContainerViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _parentViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewController::dyn__parentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__parentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _childViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewController::dyn__childViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__childViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.Screen _screen
[[deprecated("Use field access instead!")]] ::HMUI::Screen*& HMUI::ViewController::dyn__screen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__screen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screen"))->offset;
  return *reinterpret_cast<::HMUI::Screen**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::ViewController::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& HMUI::ViewController::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasActivatedBefore
[[deprecated("Use field access instead!")]] bool& HMUI::ViewController::dyn__wasActivatedBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__wasActivatedBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasActivatedBefore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActivated
[[deprecated("Use field access instead!")]] bool& HMUI::ViewController::dyn__isActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__isActivated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActivated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInTransition
[[deprecated("Use field access instead!")]] bool& HMUI::ViewController::dyn__isInTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__isInTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInTransition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.BaseRaycaster _graphicRaycaster
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::BaseRaycaster*& HMUI::ViewController::dyn__graphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::dyn__graphicRaycaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphicRaycaster"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::BaseRaycaster**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewController.get_containerViewController
::HMUI::ContainerViewController* HMUI::ViewController::get_containerViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_containerViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containerViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ContainerViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_screen
::HMUI::Screen* HMUI::ViewController::get_screen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_screen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_screen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::Screen*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_parentViewController
::HMUI::ViewController* HMUI::ViewController::get_parentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_parentViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_childViewController
::HMUI::ViewController* HMUI::ViewController::get_childViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_childViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_isInViewControllerHierarchy
bool HMUI::ViewController::get_isInViewControllerHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_isInViewControllerHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInViewControllerHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_isActivated
bool HMUI::ViewController::get_isActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_isActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_wasActivatedBefore
bool HMUI::ViewController::get_wasActivatedBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_wasActivatedBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wasActivatedBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_isInTransition
bool HMUI::ViewController::get_isInTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_isInTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.set_isInTransition
void HMUI::ViewController::set_isInTransition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::set_isInTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.get_enableUserInteractions
bool HMUI::ViewController::get_enableUserInteractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_enableUserInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableUserInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.set_enableUserInteractions
void HMUI::ViewController::set_enableUserInteractions(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::set_enableUserInteractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableUserInteractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.get_buttonBinder
::HMUI::ButtonBinder* HMUI::ViewController::get_buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_buttonBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buttonBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ButtonBinder*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.set_buttonBinder
void HMUI::ViewController::set_buttonBinder(::HMUI::ButtonBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::set_buttonBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.get_rectTransform
::UnityEngine::RectTransform* HMUI::ViewController::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_canvasGroup
::UnityEngine::CanvasGroup* HMUI::ViewController::get_canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_canvasGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CanvasGroup*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.get_graphicRaycaster
::UnityEngine::EventSystems::BaseRaycaster* HMUI::ViewController::get_graphicRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::get_graphicRaycaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphicRaycaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::BaseRaycaster*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.add_didActivateEvent
void HMUI::ViewController::add_didActivateEvent(::HMUI::ViewController::DidActivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::add_didActivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didActivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.remove_didActivateEvent
void HMUI::ViewController::remove_didActivateEvent(::HMUI::ViewController::DidActivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::remove_didActivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didActivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.add_didDeactivateEvent
void HMUI::ViewController::add_didDeactivateEvent(::HMUI::ViewController::DidDeactivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::add_didDeactivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDeactivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.remove_didDeactivateEvent
void HMUI::ViewController::remove_didDeactivateEvent(::HMUI::ViewController::DidDeactivateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::remove_didDeactivateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDeactivateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ViewController.OnDestroy
void HMUI::ViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.DidActivate
void HMUI::ViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HMUI.ViewController.DidDeactivate
void HMUI::ViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HMUI.ViewController.__Init
void HMUI::ViewController::__Init(::HMUI::Screen* screen, ::HMUI::ViewController* parentViewController, ::HMUI::ContainerViewController* containerViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::__Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screen), ::il2cpp_utils::ExtractType(parentViewController), ::il2cpp_utils::ExtractType(containerViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screen, parentViewController, containerViewController);
}
// Autogenerated method: HMUI.ViewController.__ResetViewController
void HMUI::ViewController::__ResetViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::__ResetViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__ResetViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.__PresentViewController
void HMUI::ViewController::__PresentViewController(::HMUI::ViewController* viewController, ::System::Action* finishedCallback, ::HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::__PresentViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__PresentViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.ViewController.PresentViewControllerCoroutine
::System::Collections::IEnumerator* HMUI::ViewController::PresentViewControllerCoroutine(::HMUI::ViewController* newViewController, ::System::Action* finishedCallback, ::HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::PresentViewControllerCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentViewControllerCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(immediately)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, newViewController, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.ViewController.__ReplaceViewController
void HMUI::ViewController::__ReplaceViewController(::HMUI::ViewController* viewController, ::System::Action* finishedCallback, ::HMUI::ViewController::AnimationType animationType, ::HMUI::ViewController::AnimationDirection animationDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::__ReplaceViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__ReplaceViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationType), ::il2cpp_utils::ExtractType(animationDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, finishedCallback, animationType, animationDirection);
}
// Autogenerated method: HMUI.ViewController.ReplaceViewControllerCoroutine
::System::Collections::IEnumerator* HMUI::ViewController::ReplaceViewControllerCoroutine(::HMUI::ViewController* newViewController, ::System::Action* finishedCallback, ::HMUI::ViewController::AnimationType animationType, ::HMUI::ViewController::AnimationDirection animationDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::ReplaceViewControllerCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceViewControllerCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationType), ::il2cpp_utils::ExtractType(animationDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, newViewController, finishedCallback, animationType, animationDirection);
}
// Autogenerated method: HMUI.ViewController.__DismissViewController
void HMUI::ViewController::__DismissViewController(::System::Action* finishedCallback, ::HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::__DismissViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__DismissViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.ViewController.DismissViewControllerCoroutine
::System::Collections::IEnumerator* HMUI::ViewController::DismissViewControllerCoroutine(::System::Action* finishedCallback, ::HMUI::ViewController::AnimationDirection animationDirection, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DismissViewControllerCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DismissViewControllerCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(immediately)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, finishedCallback, animationDirection, immediately);
}
// Autogenerated method: HMUI.ViewController.__Activate
void HMUI::ViewController::__Activate(bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::__Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HMUI.ViewController.__Deactivate
void HMUI::ViewController::__Deactivate(bool removedFromHierarchy, bool deactivateGameObject, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::__Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(deactivateGameObject), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, deactivateGameObject, screenSystemDisabling);
}
// Autogenerated method: HMUI.ViewController.DeactivateGameObject
void HMUI::ViewController::DeactivateGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DeactivateGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController.IsViewControllerInHierarchy
bool HMUI::ViewController::IsViewControllerInHierarchy(::HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::IsViewControllerInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsViewControllerInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, viewController);
}
// Autogenerated method: HMUI.ViewController.Log
void HMUI::ViewController::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewController", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.DidActivateDelegate
#include "HMUI/ViewController_DidActivateDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ViewController/HMUI.DidActivateDelegate.Invoke
void HMUI::ViewController::DidActivateDelegate::Invoke(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DidActivateDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HMUI.ViewController/HMUI.DidActivateDelegate.BeginInvoke
::System::IAsyncResult* HMUI::ViewController::DidActivateDelegate::BeginInvoke(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DidActivateDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling, callback, object);
}
// Autogenerated method: HMUI.ViewController/HMUI.DidActivateDelegate.EndInvoke
void HMUI::ViewController::DidActivateDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DidActivateDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.DidDeactivateDelegate
#include "HMUI/ViewController_DidDeactivateDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ViewController/HMUI.DidDeactivateDelegate.Invoke
void HMUI::ViewController::DidDeactivateDelegate::Invoke(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DidDeactivateDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HMUI.ViewController/HMUI.DidDeactivateDelegate.BeginInvoke
::System::IAsyncResult* HMUI::ViewController::DidDeactivateDelegate::BeginInvoke(bool removedFromHierarchy, bool screenSystemDisabling, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DidDeactivateDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling, callback, object);
}
// Autogenerated method: HMUI.ViewController/HMUI.DidDeactivateDelegate.EndInvoke
void HMUI::ViewController::DidDeactivateDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::DidDeactivateDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationType None
::HMUI::ViewController::AnimationType HMUI::ViewController::AnimationType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ViewController::AnimationType>("HMUI", "ViewController/AnimationType", "None"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationType None
void HMUI::ViewController::AnimationType::_set_None(::HMUI::ViewController::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationType In
::HMUI::ViewController::AnimationType HMUI::ViewController::AnimationType::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationType::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ViewController::AnimationType>("HMUI", "ViewController/AnimationType", "In"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationType In
void HMUI::ViewController::AnimationType::_set_In(::HMUI::ViewController::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationType::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationType", "In", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationType Out
::HMUI::ViewController::AnimationType HMUI::ViewController::AnimationType::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationType::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ViewController::AnimationType>("HMUI", "ViewController/AnimationType", "Out"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationType Out
void HMUI::ViewController::AnimationType::_set_Out(::HMUI::ViewController::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationType::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationType", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::ViewController::AnimationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewController/HMUI.AnimationDirection
#include "HMUI/ViewController_AnimationDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationDirection Horizontal
::HMUI::ViewController::AnimationDirection HMUI::ViewController::AnimationDirection::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationDirection::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ViewController::AnimationDirection>("HMUI", "ViewController/AnimationDirection", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationDirection Horizontal
void HMUI::ViewController::AnimationDirection::_set_Horizontal(::HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationDirection::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationDirection", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ViewController/HMUI.AnimationDirection Vertical
::HMUI::ViewController::AnimationDirection HMUI::ViewController::AnimationDirection::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationDirection::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ViewController::AnimationDirection>("HMUI", "ViewController/AnimationDirection", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ViewController/HMUI.AnimationDirection Vertical
void HMUI::ViewController::AnimationDirection::_set_Vertical(::HMUI::ViewController::AnimationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationDirection::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewController/AnimationDirection", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::ViewController::AnimationDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::AnimationDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58
#include "HMUI/ViewController_-PresentViewControllerCoroutine-d__58.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController <>4__this
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController newViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_newViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_newViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean immediately
[[deprecated("Use field access instead!")]] bool& HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_immediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_immediately");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediately"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
[[deprecated("Use field access instead!")]] ::HMUI::ViewController::AnimationDirection& HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<::HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
[[deprecated("Use field access instead!")]] ::System::Action*& HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.System.IDisposable.Dispose
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.MoveNext
bool HMUI::ViewController::$PresentViewControllerCoroutine$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<PresentViewControllerCoroutine>d__58.System.Collections.IEnumerator.Reset
void HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$PresentViewControllerCoroutine$d__58::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60
#include "HMUI/ViewController_-ReplaceViewControllerCoroutine-d__60.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController <>4__this
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController newViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_newViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_newViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationType animationType
[[deprecated("Use field access instead!")]] ::HMUI::ViewController::AnimationType& HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_animationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_animationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationType"))->offset;
  return *reinterpret_cast<::HMUI::ViewController::AnimationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
[[deprecated("Use field access instead!")]] ::HMUI::ViewController::AnimationDirection& HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<::HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
[[deprecated("Use field access instead!")]] ::System::Action*& HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.System.IDisposable.Dispose
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.MoveNext
bool HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<ReplaceViewControllerCoroutine>d__60.System.Collections.IEnumerator.Reset
void HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$ReplaceViewControllerCoroutine$d__60::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62
#include "HMUI/ViewController_-DismissViewControllerCoroutine-d__62.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController <>4__this
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean immediately
[[deprecated("Use field access instead!")]] bool& HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_immediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_immediately");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediately"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
[[deprecated("Use field access instead!")]] ::HMUI::ViewController::AnimationDirection& HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<::HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
[[deprecated("Use field access instead!")]] ::System::Action*& HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController <movingInViewController>5__2
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_$movingInViewController$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::dyn_$movingInViewController$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<movingInViewController>5__2"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.System.IDisposable.Dispose
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.MoveNext
bool HMUI::ViewController::$DismissViewControllerCoroutine$d__62::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewController/HMUI.<DismissViewControllerCoroutine>d__62.System.Collections.IEnumerator.Reset
void HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewController::$DismissViewControllerCoroutine$d__62::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewControllerTransitionHelpers
#include "HMUI/ViewControllerTransitionHelpers.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3
#include "HMUI/ViewControllerTransitionHelpers_-DoPresentTransition-d__3.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4
#include "HMUI/ViewControllerTransitionHelpers_-DoDismissTransition-d__4.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass5_0.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5
#include "HMUI/ViewControllerTransitionHelpers_-DoHorizontalTransition-d__5.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass6_0.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6
#include "HMUI/ViewControllerTransitionHelpers_-DoVerticalTransition-d__6.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8
#include "HMUI/ViewControllerTransitionHelpers_-AnimationCoroutine-d__8.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationDirection
#include "HMUI/ViewController_AnimationDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kTransitionDuration
float HMUI::ViewControllerTransitionHelpers::_get_kTransitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::_get_kTransitionDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewControllerTransitionHelpers", "kTransitionDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTransitionDuration
void HMUI::ViewControllerTransitionHelpers::_set_kTransitionDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::_set_kTransitionDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewControllerTransitionHelpers", "kTransitionDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kHorizontalTransitionMoveOffset
float HMUI::ViewControllerTransitionHelpers::_get_kHorizontalTransitionMoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::_get_kHorizontalTransitionMoveOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewControllerTransitionHelpers", "kHorizontalTransitionMoveOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHorizontalTransitionMoveOffset
void HMUI::ViewControllerTransitionHelpers::_set_kHorizontalTransitionMoveOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::_set_kHorizontalTransitionMoveOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewControllerTransitionHelpers", "kHorizontalTransitionMoveOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVerticalTransitionMoveOffset
float HMUI::ViewControllerTransitionHelpers::_get_kVerticalTransitionMoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::_get_kVerticalTransitionMoveOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "ViewControllerTransitionHelpers", "kVerticalTransitionMoveOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVerticalTransitionMoveOffset
void HMUI::ViewControllerTransitionHelpers::_set_kVerticalTransitionMoveOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::_set_kVerticalTransitionMoveOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ViewControllerTransitionHelpers", "kVerticalTransitionMoveOffset", value));
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.DoPresentTransition
::System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::DoPresentTransition(::HMUI::ViewController* toPresentViewController, ::HMUI::ViewController* toDismissViewController, ::HMUI::ViewController::AnimationDirection animationDirection, float moveOffsetMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::DoPresentTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "DoPresentTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(moveOffsetMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController, animationDirection, moveOffsetMultiplier);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.DoDismissTransition
::System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::DoDismissTransition(::HMUI::ViewController* toPresentViewController, ::HMUI::ViewController* toDismissViewController, ::HMUI::ViewController::AnimationDirection animationDirection, float moveOffsetMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::DoDismissTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "DoDismissTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController), ::il2cpp_utils::ExtractType(animationDirection), ::il2cpp_utils::ExtractType(moveOffsetMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController, animationDirection, moveOffsetMultiplier);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.DoHorizontalTransition
::System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::DoHorizontalTransition(::HMUI::ViewController* toPresentViewController, ::HMUI::ViewController* toDismissViewController, float moveOffsetMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::DoHorizontalTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "DoHorizontalTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController), ::il2cpp_utils::ExtractType(moveOffsetMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController, moveOffsetMultiplier);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.DoVerticalTransition
::System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::DoVerticalTransition(::HMUI::ViewController* toPresentViewController, ::HMUI::ViewController* toDismissViewController, float moveOffsetMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::DoVerticalTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "DoVerticalTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController), ::il2cpp_utils::ExtractType(moveOffsetMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController, moveOffsetMultiplier);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.ImmediateTransition
void HMUI::ViewControllerTransitionHelpers::ImmediateTransition(::HMUI::ViewController* toPresentViewController, ::HMUI::ViewController* toDismissViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::ImmediateTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "ImmediateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toPresentViewController), ::il2cpp_utils::ExtractType(toDismissViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toPresentViewController, toDismissViewController);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers.AnimationCoroutine
::System::Collections::IEnumerator* HMUI::ViewControllerTransitionHelpers::AnimationCoroutine(::System::Action_1<float>* transitionAnimation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::AnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ViewControllerTransitionHelpers", "AnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionAnimation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transitionAnimation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3
#include "HMUI/ViewControllerTransitionHelpers_-DoPresentTransition-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
[[deprecated("Use field access instead!")]] ::HMUI::ViewController::AnimationDirection& HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<::HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffsetMultiplier
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_moveOffsetMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::dyn_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoPresentTransition>d__3.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoPresentTransition$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4
#include "HMUI/ViewControllerTransitionHelpers_-DoDismissTransition-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController/HMUI.AnimationDirection animationDirection
[[deprecated("Use field access instead!")]] ::HMUI::ViewController::AnimationDirection& HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_animationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_animationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "animationDirection"))->offset;
  return *reinterpret_cast<::HMUI::ViewController::AnimationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffsetMultiplier
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_moveOffsetMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::dyn_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoDismissTransition>d__4.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoDismissTransition$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass5_0.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::dyn_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::dyn_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffset
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::dyn_moveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::dyn_moveOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::dyn_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::dyn_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseCanvasGroupAlpha
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::dyn_baseCanvasGroupAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::dyn_baseCanvasGroupAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseCanvasGroupAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0.<DoHorizontalTransition>b__0
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::$DoHorizontalTransition$b__0(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0::<DoHorizontalTransition>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoHorizontalTransition>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5
#include "HMUI/ViewControllerTransitionHelpers_-DoHorizontalTransition-d__5.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffsetMultiplier
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_moveOffsetMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass5_0 <>8__1
[[deprecated("Use field access instead!")]] ::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0*& HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoHorizontalTransition>d__5.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoHorizontalTransition$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass6_0.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::dyn_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::dyn_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffset
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::dyn_moveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::dyn_moveOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseCanvasGroupAlpha
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::dyn_baseCanvasGroupAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::dyn_baseCanvasGroupAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseCanvasGroupAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::dyn_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::dyn_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0.<DoVerticalTransition>b__0
void HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::$DoVerticalTransition$b__0(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0::<DoVerticalTransition>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DoVerticalTransition>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6
#include "HMUI/ViewControllerTransitionHelpers_-DoVerticalTransition-d__6.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0
#include "HMUI/ViewControllerTransitionHelpers_--c__DisplayClass6_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toPresentViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_toPresentViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_toPresentViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPresentViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ViewController toDismissViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_toDismissViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_toDismissViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toDismissViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveOffsetMultiplier
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_moveOffsetMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_moveOffsetMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveOffsetMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewControllerTransitionHelpers/HMUI.<>c__DisplayClass6_0 <>8__1
[[deprecated("Use field access instead!")]] ::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0*& HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::HMUI::ViewControllerTransitionHelpers::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<DoVerticalTransition>d__6.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$DoVerticalTransition$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8
#include "HMUI/ViewControllerTransitionHelpers_-AnimationCoroutine-d__8.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> transitionAnimation
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::dyn_transitionAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::dyn_transitionAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionAnimation"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
[[deprecated("Use field access instead!")]] float& HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.System.IDisposable.Dispose
void HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.MoveNext
bool HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ViewControllerTransitionHelpers/HMUI.<AnimationCoroutine>d__8.System.Collections.IEnumerator.Reset
void HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ViewControllerTransitionHelpers::$AnimationCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView
#include "HMUI/AnimatedSwitchView.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.<>c
#include "HMUI/AnimatedSwitchView_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _knobRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::AnimatedSwitchView::dyn__knobRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__knobRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_knobRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _backgroundImage
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& HMUI::AnimatedSwitchView::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _knobImage
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& HMUI::AnimatedSwitchView::dyn__knobImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__knobImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_knobImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _onText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& HMUI::AnimatedSwitchView::dyn__onText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__onText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _offText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& HMUI::AnimatedSwitchView::dyn__offText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__offText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _switchAnimationSmooth
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__switchAnimationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__switchAnimationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchAnimationSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disableAnimationDuration
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__disableAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__disableAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableAnimationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _highlightAnimationDuration
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__highlightAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__highlightAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightAnimationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _horizontalStretchAmount
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__horizontalStretchAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__horizontalStretchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_horizontalStretchAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _verticalStretchAmount
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__verticalStretchAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__verticalStretchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalStretchAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _onColors
[[deprecated("Use field access instead!")]] ::HMUI::AnimatedSwitchView::ColorBlock*& HMUI::AnimatedSwitchView::dyn__onColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__onColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onColors"))->offset;
  return *reinterpret_cast<::HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _offColors
[[deprecated("Use field access instead!")]] ::HMUI::AnimatedSwitchView::ColorBlock*& HMUI::AnimatedSwitchView::dyn__offColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__offColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColors"))->offset;
  return *reinterpret_cast<::HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _onHighlightedColors
[[deprecated("Use field access instead!")]] ::HMUI::AnimatedSwitchView::ColorBlock*& HMUI::AnimatedSwitchView::dyn__onHighlightedColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__onHighlightedColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onHighlightedColors"))->offset;
  return *reinterpret_cast<::HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _offHighlightedColors
[[deprecated("Use field access instead!")]] ::HMUI::AnimatedSwitchView::ColorBlock*& HMUI::AnimatedSwitchView::dyn__offHighlightedColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__offHighlightedColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offHighlightedColors"))->offset;
  return *reinterpret_cast<::HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.ColorBlock _disabledColors
[[deprecated("Use field access instead!")]] ::HMUI::AnimatedSwitchView::ColorBlock*& HMUI::AnimatedSwitchView::dyn__disabledColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__disabledColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColors"))->offset;
  return *reinterpret_cast<::HMUI::AnimatedSwitchView::ColorBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AnimatedSwitchView/HMUI.AnimationState _animationState
[[deprecated("Use field access instead!")]] ::HMUI::AnimatedSwitchView::AnimationState& HMUI::AnimatedSwitchView::dyn__animationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__animationState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationState"))->offset;
  return *reinterpret_cast<::HMUI::AnimatedSwitchView::AnimationState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _switchAmount
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__switchAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__switchAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _highlightAmount
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__highlightAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__highlightAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disabledAmount
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__disabledAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__disabledAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalKnobWidth
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__originalKnobWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__originalKnobWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalKnobWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalKnobHeight
[[deprecated("Use field access instead!")]] float& HMUI::AnimatedSwitchView::dyn__originalKnobHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__originalKnobHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalKnobHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleWithCallbacks _toggle
[[deprecated("Use field access instead!")]] ::HMUI::ToggleWithCallbacks*& HMUI::AnimatedSwitchView::dyn__toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::dyn__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  return *reinterpret_cast<::HMUI::ToggleWithCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.AnimatedSwitchView.Awake
void HMUI::AnimatedSwitchView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.Start
void HMUI::AnimatedSwitchView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.OnDestroy
void HMUI::AnimatedSwitchView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.Update
void HMUI::AnimatedSwitchView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpPosition
void HMUI::AnimatedSwitchView::LerpPosition(float switchAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::LerpPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(switchAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, switchAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpStretch
void HMUI::AnimatedSwitchView::LerpStretch(float switchAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::LerpStretch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpStretch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(switchAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, switchAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpColors
void HMUI::AnimatedSwitchView::LerpColors(float switchAmount, float highlightAmount, float disabledAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::LerpColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(switchAmount), ::il2cpp_utils::ExtractType(highlightAmount), ::il2cpp_utils::ExtractType(disabledAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, switchAmount, highlightAmount, disabledAmount);
}
// Autogenerated method: HMUI.AnimatedSwitchView.LerpColor
::UnityEngine::Color HMUI::AnimatedSwitchView::LerpColor(float switchAmount, float highlightAmount, float disabledAmount, ::HMUI::AnimatedSwitchView::GetColorDelegate* getColorDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::LerpColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LerpColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(switchAmount), ::il2cpp_utils::ExtractType(highlightAmount), ::il2cpp_utils::ExtractType(disabledAmount), ::il2cpp_utils::ExtractType(getColorDelegate)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, switchAmount, highlightAmount, disabledAmount, getColorDelegate);
}
// Autogenerated method: HMUI.AnimatedSwitchView.HandleOnValueChanged
void HMUI::AnimatedSwitchView::HandleOnValueChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::HandleOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.AnimatedSwitchView.HandleStateDidChange
void HMUI::AnimatedSwitchView::HandleStateDidChange(::HMUI::ToggleWithCallbacks::SelectionState selectionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::HandleStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectionState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView/HMUI.ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color knobColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::AnimatedSwitchView::ColorBlock::dyn_knobColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::ColorBlock::dyn_knobColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color knobColor0
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::AnimatedSwitchView::ColorBlock::dyn_knobColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::ColorBlock::dyn_knobColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color knobColor1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::AnimatedSwitchView::ColorBlock::dyn_knobColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::ColorBlock::dyn_knobColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "knobColor1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color backgroundColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::AnimatedSwitchView::ColorBlock::dyn_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::ColorBlock::dyn_backgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color backgroundColor0
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::AnimatedSwitchView::ColorBlock::dyn_backgroundColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::ColorBlock::dyn_backgroundColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color backgroundColor1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::AnimatedSwitchView::ColorBlock::dyn_backgroundColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::ColorBlock::dyn_backgroundColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView/HMUI.AnimationState
#include "HMUI/AnimatedSwitchView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState Idle
::HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_get_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "Idle"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState Idle
void HMUI::AnimatedSwitchView::AnimationState::_set_Idle(::HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_set_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "Idle", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState SwitchingOn
::HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_SwitchingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_get_SwitchingOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "SwitchingOn"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState SwitchingOn
void HMUI::AnimatedSwitchView::AnimationState::_set_SwitchingOn(::HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_set_SwitchingOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "SwitchingOn", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState SwitchingOff
::HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_SwitchingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_get_SwitchingOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "SwitchingOff"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState SwitchingOff
void HMUI::AnimatedSwitchView::AnimationState::_set_SwitchingOff(::HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_set_SwitchingOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "SwitchingOff", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState HighlightingOn
::HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_HighlightingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_get_HighlightingOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "HighlightingOn"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState HighlightingOn
void HMUI::AnimatedSwitchView::AnimationState::_set_HighlightingOn(::HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_set_HighlightingOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "HighlightingOn", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState HighlightingOff
::HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_HighlightingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_get_HighlightingOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "HighlightingOff"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState HighlightingOff
void HMUI::AnimatedSwitchView::AnimationState::_set_HighlightingOff(::HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_set_HighlightingOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "HighlightingOff", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState DisablingOn
::HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_DisablingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_get_DisablingOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "DisablingOn"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState DisablingOn
void HMUI::AnimatedSwitchView::AnimationState::_set_DisablingOn(::HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_set_DisablingOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "DisablingOn", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState DisablingOff
::HMUI::AnimatedSwitchView::AnimationState HMUI::AnimatedSwitchView::AnimationState::_get_DisablingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_get_DisablingOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::AnimationState>("HMUI", "AnimatedSwitchView/AnimationState", "DisablingOff"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.AnimationState DisablingOff
void HMUI::AnimatedSwitchView::AnimationState::_set_DisablingOff(::HMUI::AnimatedSwitchView::AnimationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::_set_DisablingOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/AnimationState", "DisablingOff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::AnimatedSwitchView::AnimationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::AnimationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate.Invoke
::UnityEngine::Color HMUI::AnimatedSwitchView::GetColorDelegate::Invoke(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::GetColorDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate.BeginInvoke
::System::IAsyncResult* HMUI::AnimatedSwitchView::GetColorDelegate::BeginInvoke(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::GetColorDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, colorBlock, callback, object);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate.EndInvoke
::UnityEngine::Color HMUI::AnimatedSwitchView::GetColorDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::GetColorDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.AnimatedSwitchView/HMUI.<>c
#include "HMUI/AnimatedSwitchView_--c.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.GetColorDelegate
#include "HMUI/AnimatedSwitchView_GetColorDelegate.hpp"
// Including type: HMUI.AnimatedSwitchView/HMUI.ColorBlock
#include "HMUI/AnimatedSwitchView_ColorBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HMUI.AnimatedSwitchView/HMUI.<>c <>9
::HMUI::AnimatedSwitchView::$$c* HMUI::AnimatedSwitchView::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::$$c*>("HMUI", "AnimatedSwitchView/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HMUI.AnimatedSwitchView/HMUI.<>c <>9
void HMUI::AnimatedSwitchView::$$c::_set_$$9(::HMUI::AnimatedSwitchView::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_0
::HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_get_$$9__31_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_0")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_0
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_0(::HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_set_$$9__31_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_0", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_1
::HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_get_$$9__31_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_1")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_1
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_1(::HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_set_$$9__31_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_1", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_2
::HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_get_$$9__31_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_2")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_2
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_2(::HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_set_$$9__31_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_2", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_3
::HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_get_$$9__31_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_3")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_3
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_3(::HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_set_$$9__31_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_3", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_4
::HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_get_$$9__31_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_4")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_4
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_4(::HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_set_$$9__31_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_4", value)));
}
// Autogenerated static field getter
// Get static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_5
::HMUI::AnimatedSwitchView::GetColorDelegate* HMUI::AnimatedSwitchView::$$c::_get_$$9__31_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_get_$$9__31_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::AnimatedSwitchView::GetColorDelegate*>("HMUI", "AnimatedSwitchView/<>c", "<>9__31_5")));
}
// Autogenerated static field setter
// Set static field: static public HMUI.AnimatedSwitchView/HMUI.GetColorDelegate <>9__31_5
void HMUI::AnimatedSwitchView::$$c::_set_$$9__31_5(::HMUI::AnimatedSwitchView::GetColorDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::_set_$$9__31_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "AnimatedSwitchView/<>c", "<>9__31_5", value)));
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c..cctor
void HMUI::AnimatedSwitchView::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "AnimatedSwitchView/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_0
::UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_0(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_1
::UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_1(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_2
::UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_2(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_3
::UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_3(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_4
::UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_4(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, colorBlock);
}
// Autogenerated method: HMUI.AnimatedSwitchView/HMUI.<>c.<LerpColors>b__31_5
::UnityEngine::Color HMUI::AnimatedSwitchView::$$c::$LerpColors$b__31_5(::HMUI::AnimatedSwitchView::ColorBlock* colorBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::AnimatedSwitchView::$$c::<LerpColors>b__31_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LerpColors>b__31_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorBlock)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, colorBlock);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ButtonSpriteSwap
#include "HMUI/ButtonSpriteSwap.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Sprite _normalStateSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& HMUI::ButtonSpriteSwap::dyn__normalStateSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::dyn__normalStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalStateSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Sprite _highlightStateSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& HMUI::ButtonSpriteSwap::dyn__highlightStateSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::dyn__highlightStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightStateSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Sprite _pressedStateSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& HMUI::ButtonSpriteSwap::dyn__pressedStateSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::dyn__pressedStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedStateSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Sprite _disabledStateSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& HMUI::ButtonSpriteSwap::dyn__disabledStateSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::dyn__disabledStateSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledStateSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.NoTransitionsButton _button
[[deprecated("Use field access instead!")]] ::HMUI::NoTransitionsButton*& HMUI::ButtonSpriteSwap::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::HMUI::NoTransitionsButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Image[] _images
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Image*>& HMUI::ButtonSpriteSwap::dyn__images() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::dyn__images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_images"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Image*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _didStart
[[deprecated("Use field access instead!")]] bool& HMUI::ButtonSpriteSwap::dyn__didStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::dyn__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.Awake
void HMUI::ButtonSpriteSwap::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.Start
void HMUI::ButtonSpriteSwap::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.OnEnable
void HMUI::ButtonSpriteSwap::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.OnDestroy
void HMUI::ButtonSpriteSwap::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.HandleButtonSelectionStateDidChange
void HMUI::ButtonSpriteSwap::HandleButtonSelectionStateDidChange(::HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::HandleButtonSelectionStateDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: HMUI.ButtonSpriteSwap.RefreshVisualState
void HMUI::ButtonSpriteSwap::RefreshVisualState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwap::RefreshVisualState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisualState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ButtonSpriteSwapToggle
#include "HMUI/ButtonSpriteSwapToggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _resetToggleOnEnable
[[deprecated("Use field access instead!")]] bool& HMUI::ButtonSpriteSwapToggle::dyn__resetToggleOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwapToggle::dyn__resetToggleOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetToggleOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreHighlight
[[deprecated("Use field access instead!")]] bool& HMUI::ButtonSpriteSwapToggle::dyn__ignoreHighlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwapToggle::dyn__ignoreHighlight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreHighlight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isToggled
[[deprecated("Use field access instead!")]] bool& HMUI::ButtonSpriteSwapToggle::dyn__isToggled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwapToggle::dyn__isToggled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isToggled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ButtonSpriteSwapToggle.get_isToggled
bool HMUI::ButtonSpriteSwapToggle::get_isToggled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwapToggle::get_isToggled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isToggled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwapToggle.set_isToggled
void HMUI::ButtonSpriteSwapToggle::set_isToggled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwapToggle::set_isToggled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isToggled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ButtonSpriteSwapToggle.OnEnable
void HMUI::ButtonSpriteSwapToggle::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwapToggle::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonSpriteSwapToggle.HandleButtonSelectionStateDidChange
void HMUI::ButtonSpriteSwapToggle::HandleButtonSelectionStateDidChange(::HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonSpriteSwapToggle::HandleButtonSelectionStateDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ButtonStaticAnimations
#include "HMUI/ButtonStaticAnimations.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.NoTransitionsButton _button
[[deprecated("Use field access instead!")]] ::HMUI::NoTransitionsButton*& HMUI::ButtonStaticAnimations::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::HMUI::NoTransitionsButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::ButtonStaticAnimations::dyn__normalClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::dyn__normalClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _highlightedClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::ButtonStaticAnimations::dyn__highlightedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::dyn__highlightedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _pressedClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::ButtonStaticAnimations::dyn__pressedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::dyn__pressedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _disabledClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::ButtonStaticAnimations::dyn__disabledClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::dyn__disabledClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didStart
[[deprecated("Use field access instead!")]] bool& HMUI::ButtonStaticAnimations::dyn__didStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::dyn__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.Awake
void HMUI::ButtonStaticAnimations::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.Start
void HMUI::ButtonStaticAnimations::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.OnEnable
void HMUI::ButtonStaticAnimations::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.OnDestroy
void HMUI::ButtonStaticAnimations::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ButtonStaticAnimations.HandleButtonSelectionStateDidChange
void HMUI::ButtonStaticAnimations::HandleButtonSelectionStateDidChange(::HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ButtonStaticAnimations::HandleButtonSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.NoTransitionsButton
#include "HMUI/NoTransitionsButton.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.NoTransitionsButton/HMUI.SelectionState> selectionStateDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::HMUI::NoTransitionsButton::SelectionState>*& HMUI::NoTransitionsButton::dyn_selectionStateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::dyn_selectionStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionStateDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::HMUI::NoTransitionsButton::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.NoTransitionsButton/HMUI.SelectionState _selectionState
[[deprecated("Use field access instead!")]] ::HMUI::NoTransitionsButton::SelectionState& HMUI::NoTransitionsButton::dyn__selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::dyn__selectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionState"))->offset;
  return *reinterpret_cast<::HMUI::NoTransitionsButton::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.NoTransitionsButton.get_selectionState
::HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::get_selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::get_selectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::NoTransitionsButton::SelectionState, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.NoTransitionsButton.add_selectionStateDidChangeEvent
void HMUI::NoTransitionsButton::add_selectionStateDidChangeEvent(::System::Action_1<::HMUI::NoTransitionsButton::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::add_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.NoTransitionsButton.remove_selectionStateDidChangeEvent
void HMUI::NoTransitionsButton::remove_selectionStateDidChangeEvent(::System::Action_1<::HMUI::NoTransitionsButton::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::remove_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.NoTransitionsButton.DoStateTransition
void HMUI::NoTransitionsButton::DoStateTransition(::UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.NoTransitionsButton/HMUI.SelectionState
#include "HMUI/NoTransitionsButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Normal
::HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::SelectionState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::NoTransitionsButton::SelectionState>("HMUI", "NoTransitionsButton/SelectionState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Normal
void HMUI::NoTransitionsButton::SelectionState::_set_Normal(::HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "NoTransitionsButton/SelectionState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Highlighted
::HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::NoTransitionsButton::SelectionState>("HMUI", "NoTransitionsButton/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Highlighted
void HMUI::NoTransitionsButton::SelectionState::_set_Highlighted(::HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "NoTransitionsButton/SelectionState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Pressed
::HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::SelectionState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::NoTransitionsButton::SelectionState>("HMUI", "NoTransitionsButton/SelectionState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Pressed
void HMUI::NoTransitionsButton::SelectionState::_set_Pressed(::HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "NoTransitionsButton/SelectionState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Disabled
::HMUI::NoTransitionsButton::SelectionState HMUI::NoTransitionsButton::SelectionState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::NoTransitionsButton::SelectionState>("HMUI", "NoTransitionsButton/SelectionState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.NoTransitionsButton/HMUI.SelectionState Disabled
void HMUI::NoTransitionsButton::SelectionState::_set_Disabled(::HMUI::NoTransitionsButton::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "NoTransitionsButton/SelectionState", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::NoTransitionsButton::SelectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsButton::SelectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.TableView/HMUI.IDataSource
#include "HMUI/TableView_IDataSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& HMUI::DropdownWithTableView::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& HMUI::DropdownWithTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ModalView _modalView
[[deprecated("Use field access instead!")]] ::HMUI::ModalView*& HMUI::DropdownWithTableView::dyn__modalView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::dyn__modalView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modalView"))->offset;
  return *reinterpret_cast<::HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfVisibleCells
[[deprecated("Use field access instead!")]] int& HMUI::DropdownWithTableView::dyn__numberOfVisibleCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::dyn__numberOfVisibleCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfVisibleCells"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<HMUI.DropdownWithTableView,System.Int32> didSelectCellWithIdxEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::HMUI::DropdownWithTableView*, int>*& HMUI::DropdownWithTableView::dyn_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::dyn_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::HMUI::DropdownWithTableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <selectedIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& HMUI::DropdownWithTableView::dyn_$selectedIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::dyn_$selectedIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectedIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.DropdownWithTableView.get_tableViewDataSource
::HMUI::TableView::IDataSource* HMUI::DropdownWithTableView::get_tableViewDataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::get_tableViewDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tableViewDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableView::IDataSource*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.get_selectedIndex
int HMUI::DropdownWithTableView::get_selectedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::get_selectedIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.set_selectedIndex
void HMUI::DropdownWithTableView::set_selectedIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::set_selectedIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectedIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.DropdownWithTableView.add_didSelectCellWithIdxEvent
void HMUI::DropdownWithTableView::add_didSelectCellWithIdxEvent(::System::Action_2<::HMUI::DropdownWithTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.DropdownWithTableView.remove_didSelectCellWithIdxEvent
void HMUI::DropdownWithTableView::remove_didSelectCellWithIdxEvent(::System::Action_2<::HMUI::DropdownWithTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.DropdownWithTableView.Init
void HMUI::DropdownWithTableView::Init(::HMUI::TableView::IDataSource* tableViewDataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableViewDataSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableViewDataSource);
}
// Autogenerated method: HMUI.DropdownWithTableView.ReloadData
void HMUI::DropdownWithTableView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::ReloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.SelectCellWithIdx
void HMUI::DropdownWithTableView::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::SelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: HMUI.DropdownWithTableView.Awake
void HMUI::DropdownWithTableView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.OnDisable
void HMUI::DropdownWithTableView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.OnDestroy
void HMUI::DropdownWithTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.RefreshSize
void HMUI::DropdownWithTableView::RefreshSize(::HMUI::TableView::IDataSource* dataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::RefreshSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataSource);
}
// Autogenerated method: HMUI.DropdownWithTableView.OnButtonClick
void HMUI::DropdownWithTableView::OnButtonClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::OnButtonClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnButtonClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.DropdownWithTableView.HandleTableViewDidSelectCellWithIdx
void HMUI::DropdownWithTableView::HandleTableViewDidSelectCellWithIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::HandleTableViewDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTableViewDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: HMUI.DropdownWithTableView.Hide
void HMUI::DropdownWithTableView::Hide(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: HMUI.DropdownWithTableView.Show
void HMUI::DropdownWithTableView::Show(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: HMUI.DropdownWithTableView.HandleModalViewBlockerClicked
void HMUI::DropdownWithTableView::HandleModalViewBlockerClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::DropdownWithTableView::HandleModalViewBlockerClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleModalViewBlockerClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.GradientImage
#include "HMUI/GradientImage.hpp"
// Including type: HMUI.CurvedCanvasSettingsHelper
#include "HMUI/CurvedCanvasSettingsHelper.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B0A8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 kVec2Zero
::UnityEngine::Vector2 HMUI::GradientImage::_get_kVec2Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_get_kVec2Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("HMUI", "GradientImage", "kVec2Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 kVec2Zero
void HMUI::GradientImage::_set_kVec2Zero(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_set_kVec2Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "kVec2Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B0B8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 kVec3Zero
::UnityEngine::Vector3 HMUI::GradientImage::_get_kVec3Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_get_kVec3Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("HMUI", "GradientImage", "kVec3Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 kVec3Zero
void HMUI::GradientImage::_set_kVec3Zero(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_set_kVec3Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "kVec3Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B0C8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 kVec4Zero
::UnityEngine::Vector4 HMUI::GradientImage::_get_kVec4Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_get_kVec4Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("HMUI", "GradientImage", "kVec4Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 kVec4Zero
void HMUI::GradientImage::_set_kVec4Zero(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_set_kVec4Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "kVec4Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B0D8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_VertScratch
::ArrayW<::UnityEngine::Vector2> HMUI::GradientImage::_get_s_VertScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_get_s_VertScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector2>>("HMUI", "GradientImage", "s_VertScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_VertScratch
void HMUI::GradientImage::_set_s_VertScratch(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_set_s_VertScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_VertScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B0E8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UVScratch
::ArrayW<::UnityEngine::Vector2> HMUI::GradientImage::_get_s_UVScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_get_s_UVScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector2>>("HMUI", "GradientImage", "s_UVScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UVScratch
void HMUI::GradientImage::_set_s_UVScratch(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_set_s_UVScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_UVScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B0F8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color[] s_ColorScratch
::ArrayW<::UnityEngine::Color> HMUI::GradientImage::_get_s_ColorScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_get_s_ColorScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Color>>("HMUI", "GradientImage", "s_ColorScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color[] s_ColorScratch
void HMUI::GradientImage::_set_s_ColorScratch(::ArrayW<::UnityEngine::Color> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_set_s_ColorScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_ColorScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B108
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Xy
::ArrayW<::UnityEngine::Vector3> HMUI::GradientImage::_get_s_Xy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_get_s_Xy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("HMUI", "GradientImage", "s_Xy"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Xy
void HMUI::GradientImage::_set_s_Xy(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_set_s_Xy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_Xy", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B118
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Uv
::ArrayW<::UnityEngine::Vector3> HMUI::GradientImage::_get_s_Uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_get_s_Uv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("HMUI", "GradientImage", "s_Uv"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Uv
void HMUI::GradientImage::_set_s_Uv(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::_set_s_Uv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "GradientImage", "s_Uv", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color0
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::GradientImage::dyn__color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::dyn__color0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::GradientImage::dyn__color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::dyn__color1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.CurvedCanvasSettingsHelper _curvedCanvasSettingsHelper
[[deprecated("Use field access instead!")]] ::HMUI::CurvedCanvasSettingsHelper*& HMUI::GradientImage::dyn__curvedCanvasSettingsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::dyn__curvedCanvasSettingsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curvedCanvasSettingsHelper"))->offset;
  return *reinterpret_cast<::HMUI::CurvedCanvasSettingsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.GradientImage.get_color0
::UnityEngine::Color HMUI::GradientImage::get_color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::get_color0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.GradientImage.set_color0
void HMUI::GradientImage::set_color0(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::set_color0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.GradientImage.get_color1
::UnityEngine::Color HMUI::GradientImage::get_color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::get_color1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.GradientImage.set_color1
void HMUI::GradientImage::set_color1(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::set_color1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.GradientImage..cctor
void HMUI::GradientImage::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.GradientImage.GenerateSimpleSprite
void HMUI::GradientImage::GenerateSimpleSprite(::UnityEngine::UI::VertexHelper* vh, bool lPreserveAspect, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::GenerateSimpleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSimpleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(lPreserveAspect), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh, lPreserveAspect, curvedUIRadius);
}
// Autogenerated method: HMUI.GradientImage.GenerateSlicedSprite
void HMUI::GradientImage::GenerateSlicedSprite(::UnityEngine::UI::VertexHelper* vh, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::GenerateSlicedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSlicedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh, curvedUIRadius);
}
// Autogenerated method: HMUI.GradientImage.GenerateTiledSprite
void HMUI::GradientImage::GenerateTiledSprite(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::GenerateTiledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTiledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(::UnityEngine::UI::VertexHelper* vertexHelper, ::ArrayW<::UnityEngine::Vector3> quadPositions, ::UnityEngine::Color32 color, ::ArrayW<::UnityEngine::Vector3> quadUVs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(quadPositions), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(quadUVs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, quadPositions, color, quadUVs);
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(::UnityEngine::UI::VertexHelper* vertexHelper, ::UnityEngine::Vector2 posMin, ::UnityEngine::Vector2 posMax, ::UnityEngine::Color32 color, ::UnityEngine::Vector2 uvMin, ::UnityEngine::Vector2 uvMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uvMin), ::il2cpp_utils::ExtractType(uvMax)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uvMin, uvMax);
}
// Autogenerated method: HMUI.GradientImage.AddQuad
void HMUI::GradientImage::AddQuad(::UnityEngine::UI::VertexHelper* vertexHelper, ::UnityEngine::Vector2 posMin, ::UnityEngine::Vector2 posMax, ::UnityEngine::Color32 color0, ::UnityEngine::Color32 color1, ::UnityEngine::Vector2 uv0Min, ::UnityEngine::Vector2 uv0Max, float elementWidthScale, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color0), ::il2cpp_utils::ExtractType(color1), ::il2cpp_utils::ExtractType(uv0Min), ::il2cpp_utils::ExtractType(uv0Max), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, elementWidthScale, curvedUIRadius);
}
// Autogenerated method: HMUI.GradientImage.GetAdjustedBorders
::UnityEngine::Vector4 HMUI::GradientImage::GetAdjustedBorders(::UnityEngine::Vector4 border, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::GetAdjustedBorders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdjustedBorders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, border, rect);
}
// Autogenerated method: HMUI.GradientImage.GenerateFilledSprite
void HMUI::GradientImage::GenerateFilledSprite(::UnityEngine::UI::VertexHelper* toFill, bool preserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::GenerateFilledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateFilledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(preserveAspect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill, preserveAspect);
}
// Autogenerated method: HMUI.GradientImage.RadialCut
bool HMUI::GradientImage::RadialCut(::ArrayW<::UnityEngine::Vector3> xy, ::ArrayW<::UnityEngine::Vector3> uv, float fill, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(fill), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xy, uv, fill, invert, corner);
}
// Autogenerated method: HMUI.GradientImage.RadialCut
void HMUI::GradientImage::RadialCut(::ArrayW<::UnityEngine::Vector3> xy, float cos, float sin, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "GradientImage", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(cos), ::il2cpp_utils::ExtractType(sin), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xy, cos, sin, invert, corner);
}
// Autogenerated method: HMUI.GradientImage.GetDrawingDimensions
::UnityEngine::Vector4 HMUI::GradientImage::GetDrawingDimensions(bool shouldPreserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::GetDrawingDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDrawingDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldPreserveAspect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, shouldPreserveAspect);
}
// Autogenerated method: HMUI.GradientImage.OnPopulateMesh
void HMUI::GradientImage::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::GradientImage::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: HMUI.CurvedCanvasSettingsHelper
#include "HMUI/CurvedCanvasSettingsHelper.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B240
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 kVec2Zero
::UnityEngine::Vector2 HMUI::ImageView::_get_kVec2Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_kVec2Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("HMUI", "ImageView", "kVec2Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 kVec2Zero
void HMUI::ImageView::_set_kVec2Zero(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_kVec2Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec2Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B250
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 kVec3Zero
::UnityEngine::Vector3 HMUI::ImageView::_get_kVec3Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_kVec3Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("HMUI", "ImageView", "kVec3Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 kVec3Zero
void HMUI::ImageView::_set_kVec3Zero(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_kVec3Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec3Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B260
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 kVec4Zero
::UnityEngine::Vector4 HMUI::ImageView::_get_kVec4Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_kVec4Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("HMUI", "ImageView", "kVec4Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 kVec4Zero
void HMUI::ImageView::_set_kVec4Zero(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_kVec4Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "kVec4Zero", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B270
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_VertScratch
::ArrayW<::UnityEngine::Vector2> HMUI::ImageView::_get_s_VertScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_s_VertScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector2>>("HMUI", "ImageView", "s_VertScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_VertScratch
void HMUI::ImageView::_set_s_VertScratch(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_s_VertScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_VertScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B280
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UVScratch
::ArrayW<::UnityEngine::Vector2> HMUI::ImageView::_get_s_UVScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_s_UVScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector2>>("HMUI", "ImageView", "s_UVScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UVScratch
void HMUI::ImageView::_set_s_UVScratch(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_s_UVScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_UVScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B290
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2[] s_UV1Scratch
::ArrayW<::UnityEngine::Vector2> HMUI::ImageView::_get_s_UV1Scratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_s_UV1Scratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector2>>("HMUI", "ImageView", "s_UV1Scratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2[] s_UV1Scratch
void HMUI::ImageView::_set_s_UV1Scratch(::ArrayW<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_s_UV1Scratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_UV1Scratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B2A0
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color[] s_ColorScratch
::ArrayW<::UnityEngine::Color> HMUI::ImageView::_get_s_ColorScratch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_s_ColorScratch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Color>>("HMUI", "ImageView", "s_ColorScratch"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color[] s_ColorScratch
void HMUI::ImageView::_set_s_ColorScratch(::ArrayW<::UnityEngine::Color> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_s_ColorScratch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_ColorScratch", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B2B0
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Xy
::ArrayW<::UnityEngine::Vector3> HMUI::ImageView::_get_s_Xy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_s_Xy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("HMUI", "ImageView", "s_Xy"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Xy
void HMUI::ImageView::_set_s_Xy(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_s_Xy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_Xy", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x110B2C0
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Uv
::ArrayW<::UnityEngine::Vector3> HMUI::ImageView::_get_s_Uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_get_s_Uv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Vector3>>("HMUI", "ImageView", "s_Uv"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Uv
void HMUI::ImageView::_set_s_Uv(::ArrayW<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::_set_s_Uv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView", "s_Uv", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useScriptableObjectColors
[[deprecated("Use field access instead!")]] bool& HMUI::ImageView::dyn__useScriptableObjectColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__useScriptableObjectColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useScriptableObjectColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _colorSo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSO*& HMUI::ImageView::dyn__colorSo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__colorSo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _color0So
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSO*& HMUI::ImageView::dyn__color0So() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__color0So");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color0So"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _color1So
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSO*& HMUI::ImageView::dyn__color1So() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__color1So");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color1So"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _skew
[[deprecated("Use field access instead!")]] float& HMUI::ImageView::dyn__skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__skew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skew"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _gradient
[[deprecated("Use field access instead!")]] bool& HMUI::ImageView::dyn__gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__gradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color0
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::ImageView::dyn__color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__color0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& HMUI::ImageView::dyn__color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__color1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView/HMUI.GradientDirection _gradientDirection
[[deprecated("Use field access instead!")]] ::HMUI::ImageView::GradientDirection& HMUI::ImageView::dyn__gradientDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__gradientDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradientDirection"))->offset;
  return *reinterpret_cast<::HMUI::ImageView::GradientDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _flipGradientColors
[[deprecated("Use field access instead!")]] bool& HMUI::ImageView::dyn__flipGradientColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__flipGradientColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flipGradientColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.CurvedCanvasSettingsHelper _curvedCanvasSettingsHelper
[[deprecated("Use field access instead!")]] ::HMUI::CurvedCanvasSettingsHelper*& HMUI::ImageView::dyn__curvedCanvasSettingsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::dyn__curvedCanvasSettingsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curvedCanvasSettingsHelper"))->offset;
  return *reinterpret_cast<::HMUI::CurvedCanvasSettingsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ImageView.get_useScriptableObjectColors
bool HMUI::ImageView::get_useScriptableObjectColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::get_useScriptableObjectColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useScriptableObjectColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.set_useScriptableObjectColors
void HMUI::ImageView::set_useScriptableObjectColors(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::set_useScriptableObjectColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useScriptableObjectColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView.get_skew
float HMUI::ImageView::get_skew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::get_skew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.get_gradient
bool HMUI::ImageView::get_gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::get_gradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.set_gradient
void HMUI::ImageView::set_gradient(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::set_gradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView.get_color0
::UnityEngine::Color HMUI::ImageView::get_color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::get_color0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.set_color0
void HMUI::ImageView::set_color0(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::set_color0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView.get_color1
::UnityEngine::Color HMUI::ImageView::get_color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::get_color1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.set_color1
void HMUI::ImageView::set_color1(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::set_color1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView..cctor
void HMUI::ImageView::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.ImageView.__Refresh
void HMUI::ImageView::__Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::__Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.GenerateSimpleSprite
void HMUI::ImageView::GenerateSimpleSprite(::UnityEngine::UI::VertexHelper* vh, bool lPreserveAspect, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GenerateSimpleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSimpleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh), ::il2cpp_utils::ExtractType(lPreserveAspect), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vh, lPreserveAspect, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.GenerateSlicedSprite
void HMUI::ImageView::GenerateSlicedSprite(::UnityEngine::UI::VertexHelper* toFill, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GenerateSlicedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSlicedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.GenerateTiledSprite
void HMUI::ImageView::GenerateTiledSprite(::UnityEngine::UI::VertexHelper* toFill, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GenerateTiledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTiledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(::UnityEngine::UI::VertexHelper* vertexHelper, ::ArrayW<::UnityEngine::Vector3> quadPositions, ::UnityEngine::Color32 color, ::ArrayW<::UnityEngine::Vector3> quadUVs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(quadPositions), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(quadUVs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, quadPositions, color, quadUVs);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(::UnityEngine::UI::VertexHelper* vertexHelper, ::UnityEngine::Vector2 posMin, ::UnityEngine::Vector2 posMax, ::UnityEngine::Color32 color, ::UnityEngine::Vector2 uvMin, ::UnityEngine::Vector2 uvMax, float elementWidthScale, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uvMin), ::il2cpp_utils::ExtractType(uvMax), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uvMin, uvMax, elementWidthScale, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.AddQuad
void HMUI::ImageView::AddQuad(::UnityEngine::UI::VertexHelper* vertexHelper, ::UnityEngine::Vector2 posMin, ::UnityEngine::Vector2 posMax, ::UnityEngine::Color32 color, ::UnityEngine::Vector2 uv0Min, ::UnityEngine::Vector2 uv0Max, ::UnityEngine::Vector2 uv1Min, ::UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::AddQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0Min), ::il2cpp_utils::ExtractType(uv0Max), ::il2cpp_utils::ExtractType(uv1Min), ::il2cpp_utils::ExtractType(uv1Max), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(skewFactor), ::il2cpp_utils::ExtractType(skewOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.AddQuadWithHorizontalGradient
void HMUI::ImageView::AddQuadWithHorizontalGradient(::UnityEngine::UI::VertexHelper* vertexHelper, ::UnityEngine::Vector2 posMin, ::UnityEngine::Vector2 posMax, ::UnityEngine::Color32 color0, ::UnityEngine::Color32 color1, ::UnityEngine::Vector2 uv0Min, ::UnityEngine::Vector2 uv0Max, ::UnityEngine::Vector2 uv1Min, ::UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::AddQuadWithHorizontalGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuadWithHorizontalGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color0), ::il2cpp_utils::ExtractType(color1), ::il2cpp_utils::ExtractType(uv0Min), ::il2cpp_utils::ExtractType(uv0Max), ::il2cpp_utils::ExtractType(uv1Min), ::il2cpp_utils::ExtractType(uv1Max), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(skewFactor), ::il2cpp_utils::ExtractType(skewOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.AddQuadWithVerticalGradient
void HMUI::ImageView::AddQuadWithVerticalGradient(::UnityEngine::UI::VertexHelper* vertexHelper, ::UnityEngine::Vector2 posMin, ::UnityEngine::Vector2 posMax, ::UnityEngine::Color32 color0, ::UnityEngine::Color32 color1, ::UnityEngine::Vector2 uv0Min, ::UnityEngine::Vector2 uv0Max, ::UnityEngine::Vector2 uv1Min, ::UnityEngine::Vector2 uv1Max, float elementWidthScale, float curvedUIRadius, float skewFactor, float skewOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::AddQuadWithVerticalGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "AddQuadWithVerticalGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexHelper), ::il2cpp_utils::ExtractType(posMin), ::il2cpp_utils::ExtractType(posMax), ::il2cpp_utils::ExtractType(color0), ::il2cpp_utils::ExtractType(color1), ::il2cpp_utils::ExtractType(uv0Min), ::il2cpp_utils::ExtractType(uv0Max), ::il2cpp_utils::ExtractType(uv1Min), ::il2cpp_utils::ExtractType(uv1Max), ::il2cpp_utils::ExtractType(elementWidthScale), ::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(skewFactor), ::il2cpp_utils::ExtractType(skewOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vertexHelper, posMin, posMax, color0, color1, uv0Min, uv0Max, uv1Min, uv1Max, elementWidthScale, curvedUIRadius, skewFactor, skewOffset);
}
// Autogenerated method: HMUI.ImageView.GetAdjustedBorders
::UnityEngine::Vector4 HMUI::ImageView::GetAdjustedBorders(::UnityEngine::Vector4 border, ::UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GetAdjustedBorders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "GetAdjustedBorders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, border, rect);
}
// Autogenerated method: HMUI.ImageView.GenerateFilledSprite
void HMUI::ImageView::GenerateFilledSprite(::UnityEngine::UI::VertexHelper* toFill, bool preserveAspect, float curvedUIRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GenerateFilledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateFilledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill), ::il2cpp_utils::ExtractType(preserveAspect), ::il2cpp_utils::ExtractType(curvedUIRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill, preserveAspect, curvedUIRadius);
}
// Autogenerated method: HMUI.ImageView.RadialCut
bool HMUI::ImageView::RadialCut(::ArrayW<::UnityEngine::Vector3> xy, ::ArrayW<::UnityEngine::Vector3> uv, float fill, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(uv), ::il2cpp_utils::ExtractType(fill), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xy, uv, fill, invert, corner);
}
// Autogenerated method: HMUI.ImageView.RadialCut
void HMUI::ImageView::RadialCut(::ArrayW<::UnityEngine::Vector3> xy, float cos, float sin, bool invert, int corner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::RadialCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "RadialCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xy), ::il2cpp_utils::ExtractType(cos), ::il2cpp_utils::ExtractType(sin), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(corner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xy, cos, sin, invert, corner);
}
// Autogenerated method: HMUI.ImageView.GetNumberOfElements
int HMUI::ImageView::GetNumberOfElements(float curvedUIRadius, float width) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GetNumberOfElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ImageView", "GetNumberOfElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curvedUIRadius), ::il2cpp_utils::ExtractType(width)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, curvedUIRadius, width);
}
// Autogenerated method: HMUI.ImageView.GetDrawingDimensions
::UnityEngine::Vector4 HMUI::ImageView::GetDrawingDimensions(bool shouldPreserveAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GetDrawingDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDrawingDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldPreserveAspect)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, shouldPreserveAspect);
}
// Autogenerated method: HMUI.ImageView.get_color
::UnityEngine::Color HMUI::ImageView::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.set_color
void HMUI::ImageView::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::set_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageView.OnEnable
void HMUI::ImageView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageView.OnPopulateMesh
void HMUI::ImageView::OnPopulateMesh(::UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ImageView/HMUI.GradientDirection
#include "HMUI/ImageView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ImageView/HMUI.GradientDirection Horizontal
::HMUI::ImageView::GradientDirection HMUI::ImageView::GradientDirection::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GradientDirection::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ImageView::GradientDirection>("HMUI", "ImageView/GradientDirection", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ImageView/HMUI.GradientDirection Horizontal
void HMUI::ImageView::GradientDirection::_set_Horizontal(::HMUI::ImageView::GradientDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GradientDirection::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView/GradientDirection", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ImageView/HMUI.GradientDirection Vertical
::HMUI::ImageView::GradientDirection HMUI::ImageView::GradientDirection::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GradientDirection::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ImageView::GradientDirection>("HMUI", "ImageView/GradientDirection", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ImageView/HMUI.GradientDirection Vertical
void HMUI::ImageView::GradientDirection::_set_Vertical(::HMUI::ImageView::GradientDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GradientDirection::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ImageView/GradientDirection", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::ImageView::GradientDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageView::GradientDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ImageWithHint
#include "HMUI/ImageWithHint.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& HMUI::ImageWithHint::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageWithHint::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _hoverHint
[[deprecated("Use field access instead!")]] ::HMUI::HoverHint*& HMUI::ImageWithHint::dyn__hoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageWithHint::dyn__hoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverHint"))->offset;
  return *reinterpret_cast<::HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ImageWithHint.get_sprite
::UnityEngine::Sprite* HMUI::ImageWithHint::get_sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageWithHint::get_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ImageWithHint.set_sprite
void HMUI::ImageWithHint::set_sprite(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageWithHint::set_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ImageWithHint.set_hintText
void HMUI::ImageWithHint::set_hintText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ImageWithHint::set_hintText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hintText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.InputFieldView/HMUI.InputFieldChanged
#include "HMUI/InputFieldView_InputFieldChanged.hpp"
// Including type: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43
#include "HMUI/InputFieldView_-BlinkingCaretCoroutine-d__43.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBlinkingRate
float HMUI::InputFieldView::_get_kBlinkingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::_get_kBlinkingRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("HMUI", "InputFieldView", "kBlinkingRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBlinkingRate
void HMUI::InputFieldView::_set_kBlinkingRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::_set_kBlinkingRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView", "kBlinkingRate", value));
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _textView
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& HMUI::InputFieldView::dyn__textView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__textView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textView"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _textViewCanvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& HMUI::InputFieldView::dyn__textViewCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__textViewCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textViewCanvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _blinkingCaret
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& HMUI::InputFieldView::dyn__blinkingCaret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__blinkingCaret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blinkingCaret"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _placeholderText
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& HMUI::InputFieldView::dyn__placeholderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__placeholderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_placeholderText"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _clearSearchButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& HMUI::InputFieldView::dyn__clearSearchButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__clearSearchButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearSearchButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useGlobalKeyboard
[[deprecated("Use field access instead!")]] bool& HMUI::InputFieldView::dyn__useGlobalKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__useGlobalKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useGlobalKeyboard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _keyboardPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& HMUI::InputFieldView::dyn__keyboardPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__keyboardPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useUppercase
[[deprecated("Use field access instead!")]] bool& HMUI::InputFieldView::dyn__useUppercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__useUppercase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useUppercase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _textLengthLimit
[[deprecated("Use field access instead!")]] int& HMUI::InputFieldView::dyn__textLengthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__textLengthLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textLengthLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _caretOffset
[[deprecated("Use field access instead!")]] float& HMUI::InputFieldView::dyn__caretOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__caretOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caretOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.InputFieldView/HMUI.SelectionState> selectionStateDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::HMUI::InputFieldView::SelectionState>*& HMUI::InputFieldView::dyn_selectionStateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn_selectionStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionStateDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::HMUI::InputFieldView::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView/HMUI.SelectionState _selectionState
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView::SelectionState& HMUI::InputFieldView::dyn__selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__selectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionState"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView::SelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _text
[[deprecated("Use field access instead!")]] ::StringW& HMUI::InputFieldView::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasKeyboardAssigned
[[deprecated("Use field access instead!")]] bool& HMUI::InputFieldView::dyn__hasKeyboardAssigned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__hasKeyboardAssigned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasKeyboardAssigned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& HMUI::InputFieldView::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView/HMUI.InputFieldChanged _onValueChanged
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView::InputFieldChanged*& HMUI::InputFieldView::dyn__onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__onValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onValueChanged"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView::InputFieldChanged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.YieldInstruction _blinkWaitYieldInstruction
[[deprecated("Use field access instead!")]] ::UnityEngine::YieldInstruction*& HMUI::InputFieldView::dyn__blinkWaitYieldInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::dyn__blinkWaitYieldInstruction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blinkWaitYieldInstruction"))->offset;
  return *reinterpret_cast<::UnityEngine::YieldInstruction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.InputFieldView.get_selectionState
::HMUI::InputFieldView::SelectionState HMUI::InputFieldView::get_selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::get_selectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::InputFieldView::SelectionState, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.get_keyboardPositionOffset
::UnityEngine::Vector3 HMUI::InputFieldView::get_keyboardPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::get_keyboardPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboardPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.get_onValueChanged
::HMUI::InputFieldView::InputFieldChanged* HMUI::InputFieldView::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::InputFieldView::InputFieldChanged*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.set_onValueChanged
void HMUI::InputFieldView::set_onValueChanged(::HMUI::InputFieldView::InputFieldChanged* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.get_useGlobalKeyboard
bool HMUI::InputFieldView::get_useGlobalKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::get_useGlobalKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGlobalKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.get_text
::StringW HMUI::InputFieldView::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.set_text
void HMUI::InputFieldView::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.add_selectionStateDidChangeEvent
void HMUI::InputFieldView::add_selectionStateDidChangeEvent(::System::Action_1<::HMUI::InputFieldView::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::add_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.remove_selectionStateDidChangeEvent
void HMUI::InputFieldView::remove_selectionStateDidChangeEvent(::System::Action_1<::HMUI::InputFieldView::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::remove_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.ActivateKeyboard
void HMUI::InputFieldView::ActivateKeyboard(::HMUI::UIKeyboard* keyboard) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::ActivateKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboard)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyboard);
}
// Autogenerated method: HMUI.InputFieldView.DeactivateKeyboard
void HMUI::InputFieldView::DeactivateKeyboard(::HMUI::UIKeyboard* keyboard) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::DeactivateKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboard)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyboard);
}
// Autogenerated method: HMUI.InputFieldView.SetText
void HMUI::InputFieldView::SetText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.InputFieldView.ClearInput
void HMUI::InputFieldView::ClearInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::ClearInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.KeyboardKeyPressed
void HMUI::InputFieldView::KeyboardKeyPressed(::Il2CppChar letter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::KeyboardKeyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardKeyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(letter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, letter);
}
// Autogenerated method: HMUI.InputFieldView.KeyboardDeletePressed
void HMUI::InputFieldView::KeyboardDeletePressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::KeyboardDeletePressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyboardDeletePressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.BlinkingCaretCoroutine
::System::Collections::IEnumerator* HMUI::InputFieldView::BlinkingCaretCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::BlinkingCaretCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkingCaretCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.UpdateCaretPosition
void HMUI::InputFieldView::UpdateCaretPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::UpdateCaretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCaretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.UpdatePlaceholder
void HMUI::InputFieldView::UpdatePlaceholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::UpdatePlaceholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlaceholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.UpdateClearButton
void HMUI::InputFieldView::UpdateClearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::UpdateClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.<Awake>b__34_0
void HMUI::InputFieldView::$Awake$b__34_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::<Awake>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.Awake
void HMUI::InputFieldView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.OnDestroy
void HMUI::InputFieldView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView.DoStateTransition
void HMUI::InputFieldView::DoStateTransition(::UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.InputFieldView/HMUI.SelectionState
#include "HMUI/InputFieldView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Normal
::HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Normal
void HMUI::InputFieldView::SelectionState::_set_Normal(::HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Highlighted
::HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Highlighted
void HMUI::InputFieldView::SelectionState::_set_Highlighted(::HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Pressed
::HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Pressed
void HMUI::InputFieldView::SelectionState::_set_Pressed(::HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Disabled
::HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Disabled
void HMUI::InputFieldView::SelectionState::_set_Disabled(::HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.InputFieldView/HMUI.SelectionState Selected
::HMUI::InputFieldView::SelectionState HMUI::InputFieldView::SelectionState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::InputFieldView::SelectionState>("HMUI", "InputFieldView/SelectionState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.InputFieldView/HMUI.SelectionState Selected
void HMUI::InputFieldView::SelectionState::_set_Selected(::HMUI::InputFieldView::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "InputFieldView/SelectionState", "Selected", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::InputFieldView::SelectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::SelectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.InputFieldView/HMUI.InputFieldChanged
#include "HMUI/InputFieldView_InputFieldChanged.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43
#include "HMUI/InputFieldView_-BlinkingCaretCoroutine-d__43.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.InputFieldView <>4__this
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView*& HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.System.Collections.IEnumerator.get_Current
::Il2CppObject* HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.System.IDisposable.Dispose
void HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.MoveNext
bool HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldView/HMUI.<BlinkingCaretCoroutine>d__43.System.Collections.IEnumerator.Reset
void HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldView::$BlinkingCaretCoroutine$d__43::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.InputFieldViewStaticAnimations
#include "HMUI/InputFieldViewStaticAnimations.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _inputFieldView
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView*& HMUI::InputFieldViewStaticAnimations::dyn__inputFieldView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::dyn__inputFieldView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFieldView"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::InputFieldViewStaticAnimations::dyn__normalClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::dyn__normalClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _highlightedClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::InputFieldViewStaticAnimations::dyn__highlightedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::dyn__highlightedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _pressedClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::InputFieldViewStaticAnimations::dyn__pressedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::dyn__pressedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _disabledClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::InputFieldViewStaticAnimations::dyn__disabledClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::dyn__disabledClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::InputFieldViewStaticAnimations::dyn__selectedClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::dyn__selectedClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didStart
[[deprecated("Use field access instead!")]] bool& HMUI::InputFieldViewStaticAnimations::dyn__didStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::dyn__didStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.Awake
void HMUI::InputFieldViewStaticAnimations::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.Start
void HMUI::InputFieldViewStaticAnimations::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.OnEnable
void HMUI::InputFieldViewStaticAnimations::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.OnDestroy
void HMUI::InputFieldViewStaticAnimations::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.InputFieldViewStaticAnimations.HandleInputFieldViewSelectionStateDidChange
void HMUI::InputFieldViewStaticAnimations::HandleInputFieldViewSelectionStateDidChange(::HMUI::InputFieldView::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::InputFieldViewStaticAnimations::HandleInputFieldViewSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFieldViewSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: HMUI.ModalView/HMUI.<>c__DisplayClass17_0
#include "HMUI/ModalView_--c__DisplayClass17_0.hpp"
// Including type: HMUI.ModalView/HMUI.<>c__DisplayClass21_0
#include "HMUI/ModalView_--c__DisplayClass21_0.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _presentPanelAnimations
[[deprecated("Use field access instead!")]] ::HMUI::PanelAnimationSO*& HMUI::ModalView::dyn__presentPanelAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__presentPanelAnimations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimations"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
[[deprecated("Use field access instead!")]] ::HMUI::PanelAnimationSO*& HMUI::ModalView::dyn__dismissPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _animateParentCanvas
[[deprecated("Use field access instead!")]] bool& HMUI::ModalView::dyn__animateParentCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__animateParentCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animateParentCanvas"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& HMUI::ModalView::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action blockerClickedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& HMUI::ModalView::dyn_blockerClickedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn_blockerClickedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockerClickedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _previousParent
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& HMUI::ModalView::dyn__previousParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__previousParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isShown
[[deprecated("Use field access instead!")]] bool& HMUI::ModalView::dyn__isShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__isShown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isShown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _viewIsValid
[[deprecated("Use field access instead!")]] bool& HMUI::ModalView::dyn__viewIsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__viewIsValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewIsValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _mainCanvas
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& HMUI::ModalView::dyn__mainCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__mainCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCanvas"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _parentCanvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& HMUI::ModalView::dyn__parentCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__parentCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentCanvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _blockerGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& HMUI::ModalView::dyn__blockerGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__blockerGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockerGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _test
[[deprecated("Use field access instead!")]] int& HMUI::ModalView::dyn__test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::dyn__test");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_test"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ModalView.add_blockerClickedEvent
void HMUI::ModalView::add_blockerClickedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::add_blockerClickedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_blockerClickedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ModalView.remove_blockerClickedEvent
void HMUI::ModalView::remove_blockerClickedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::remove_blockerClickedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_blockerClickedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ModalView.OnDisable
void HMUI::ModalView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ModalView.OnDestroy
void HMUI::ModalView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ModalView.SetupView
void HMUI::ModalView::SetupView(::UnityEngine::Transform* screenTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::SetupView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screenTransform);
}
// Autogenerated method: HMUI.ModalView.Hide
void HMUI::ModalView::Hide(bool animated, ::System::Action* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated, finishedCallback);
}
// Autogenerated method: HMUI.ModalView.Show
void HMUI::ModalView::Show(bool animated, bool moveToCenter, ::System::Action* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(moveToCenter), ::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated, moveToCenter, finishedCallback);
}
// Autogenerated method: HMUI.ModalView.CreateBlocker
::UnityEngine::GameObject* HMUI::ModalView::CreateBlocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::CreateBlocker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBlocker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ModalView.HandleBlockerButtonClicked
void HMUI::ModalView::HandleBlockerButtonClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::HandleBlockerButtonClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBlockerButtonClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ModalView.HandleParentViewControllerDidDeactivate
void HMUI::ModalView::HandleParentViewControllerDidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::HandleParentViewControllerDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleParentViewControllerDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HMUI.ModalView.GetModalRootTransform
::UnityEngine::Transform* HMUI::ModalView::GetModalRootTransform(::UnityEngine::Transform* transform, ByRef<::UnityEngine::Canvas*> canvas, ByRef<::HMUI::ViewController*> viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::GetModalRootTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ModalView", "GetModalRootTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Canvas*&>(), ::il2cpp_utils::ExtractIndependentType<::HMUI::ViewController*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, byref(canvas), byref(viewController));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ModalView/HMUI.<>c__DisplayClass17_0
#include "HMUI/ModalView_--c__DisplayClass17_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HMUI.ModalView <>4__this
[[deprecated("Use field access instead!")]] ::HMUI::ModalView*& HMUI::ModalView::$$c__DisplayClass17_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::$$c__DisplayClass17_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
[[deprecated("Use field access instead!")]] ::System::Action*& HMUI::ModalView::$$c__DisplayClass17_0::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::$$c__DisplayClass17_0::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ModalView/HMUI.<>c__DisplayClass17_0.<Hide>b__0
void HMUI::ModalView::$$c__DisplayClass17_0::$Hide$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::$$c__DisplayClass17_0::<Hide>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Hide>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ModalView/HMUI.<>c__DisplayClass21_0
#include "HMUI/ModalView_--c__DisplayClass21_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HMUI.ModalView <>4__this
[[deprecated("Use field access instead!")]] ::HMUI::ModalView*& HMUI::ModalView::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean prevAnimateParentCanvas
[[deprecated("Use field access instead!")]] bool& HMUI::ModalView::$$c__DisplayClass21_0::dyn_prevAnimateParentCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::$$c__DisplayClass21_0::dyn_prevAnimateParentCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevAnimateParentCanvas"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ModalView/HMUI.<>c__DisplayClass21_0.<HandleParentViewControllerDidDeactivate>b__0
void HMUI::ModalView::$$c__DisplayClass21_0::$HandleParentViewControllerDidDeactivate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ModalView::$$c__DisplayClass21_0::<HandleParentViewControllerDidDeactivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleParentViewControllerDidDeactivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.NoTransitionsToggle
#include "HMUI/NoTransitionsToggle.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.UISelectionState> selectionStateDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::HMUI::UISelectionState>*& HMUI::NoTransitionsToggle::dyn_selectionStateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsToggle::dyn_selectionStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionStateDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::HMUI::UISelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.UISelectionState _selectionState
[[deprecated("Use field access instead!")]] ::HMUI::UISelectionState& HMUI::NoTransitionsToggle::dyn__selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsToggle::dyn__selectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionState"))->offset;
  return *reinterpret_cast<::HMUI::UISelectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.NoTransitionsToggle.get_selectionState
::HMUI::UISelectionState HMUI::NoTransitionsToggle::get_selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsToggle::get_selectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::UISelectionState, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.NoTransitionsToggle.add_selectionStateDidChangeEvent
void HMUI::NoTransitionsToggle::add_selectionStateDidChangeEvent(::System::Action_1<::HMUI::UISelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsToggle::add_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.NoTransitionsToggle.remove_selectionStateDidChangeEvent
void HMUI::NoTransitionsToggle::remove_selectionStateDidChangeEvent(::System::Action_1<::HMUI::UISelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsToggle::remove_selectionStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.NoTransitionsToggle.<Start>b__6_0
void HMUI::NoTransitionsToggle::$Start$b__6_0(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsToggle::<Start>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: HMUI.NoTransitionsToggle.Start
void HMUI::NoTransitionsToggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsToggle::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.NoTransitionsToggle.DoStateTransition
void HMUI::NoTransitionsToggle::DoStateTransition(::UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::NoTransitionsToggle::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ItemForFocussedScrolling
#include "HMUI/ItemForFocussedScrolling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollToTopOnEnable
#include "HMUI/ScrollToTopOnEnable.hpp"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView _scrollView
[[deprecated("Use field access instead!")]] ::HMUI::ScrollView*& HMUI::ScrollToTopOnEnable::dyn__scrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollToTopOnEnable::dyn__scrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollView"))->offset;
  return *reinterpret_cast<::HMUI::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ScrollToTopOnEnable.OnEnable
void HMUI::ScrollToTopOnEnable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollToTopOnEnable::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c
#include "HMUI/ScrollView_--c.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass50_0
#include "HMUI/ScrollView_--c__DisplayClass50_0.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass51_0
#include "HMUI/ScrollView_--c__DisplayClass51_0.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass56_0
#include "HMUI/ScrollView_--c__DisplayClass56_0.hpp"
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass56_1
#include "HMUI/ScrollView_--c__DisplayClass56_1.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.VerticalScrollIndicator
#include "HMUI/VerticalScrollIndicator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.EventSystemListener
#include "HMUI/EventSystemListener.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: HMUI.ItemForFocussedScrolling
#include "HMUI/ItemForFocussedScrolling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewport
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::ScrollView::dyn__viewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__viewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewport"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::ScrollView::dyn__contentRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__contentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView/HMUI.ScrollViewDirection _scrollViewDirection
[[deprecated("Use field access instead!")]] ::HMUI::ScrollView::ScrollViewDirection& HMUI::ScrollView::dyn__scrollViewDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__scrollViewDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollViewDirection"))->offset;
  return *reinterpret_cast<::HMUI::ScrollView::ScrollViewDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _pageUpButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& HMUI::ScrollView::dyn__pageUpButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__pageUpButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageUpButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _pageDownButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& HMUI::ScrollView::dyn__pageDownButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__pageDownButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageDownButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.VerticalScrollIndicator _verticalScrollIndicator
[[deprecated("Use field access instead!")]] ::HMUI::VerticalScrollIndicator*& HMUI::ScrollView::dyn__verticalScrollIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__verticalScrollIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalScrollIndicator"))->offset;
  return *reinterpret_cast<::HMUI::VerticalScrollIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joystickScrollSpeed
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::dyn__joystickScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__joystickScrollSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickScrollSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joystickQuickSnapMaxTime
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::dyn__joystickQuickSnapMaxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__joystickQuickSnapMaxTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickQuickSnapMaxTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.ScrollView/HMUI.ScrollType _scrollType
[[deprecated("Use field access instead!")]] ::HMUI::ScrollView::ScrollType& HMUI::ScrollView::dyn__scrollType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__scrollType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollType"))->offset;
  return *reinterpret_cast<::HMUI::ScrollView::ScrollType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _fixedCellSize
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::dyn__fixedCellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__fixedCellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixedCellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _scrollItemRelativeThresholdPosition
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::dyn__scrollItemRelativeThresholdPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__scrollItemRelativeThresholdPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollItemRelativeThresholdPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _pageStepNormalizedSize
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::dyn__pageStepNormalizedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__pageStepNormalizedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageStepNormalizedSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _platformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& HMUI::ScrollView::dyn__platformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__platformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> scrollPositionChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& HMUI::ScrollView::dyn_scrollPositionChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn_scrollPositionChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scrollPositionChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& HMUI::ScrollView::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destinationPos
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::dyn__destinationPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__destinationPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destinationPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _scrollFocusPositions
[[deprecated("Use field access instead!")]] ::ArrayW<float>& HMUI::ScrollView::dyn__scrollFocusPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__scrollFocusPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollFocusPositions"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.EventSystemListener _eventSystemListener
[[deprecated("Use field access instead!")]] ::HMUI::EventSystemListener*& HMUI::ScrollView::dyn__eventSystemListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__eventSystemListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventSystemListener"))->offset;
  return *reinterpret_cast<::HMUI::EventSystemListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView/HMUI.ScrollDirection _lastJoystickScrollDirection
[[deprecated("Use field access instead!")]] ::HMUI::ScrollView::ScrollDirection& HMUI::ScrollView::dyn__lastJoystickScrollDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__lastJoystickScrollDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastJoystickScrollDirection"))->offset;
  return *reinterpret_cast<::HMUI::ScrollView::ScrollDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joystickScrollStartTime
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::dyn__joystickScrollStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::dyn__joystickScrollStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joystickScrollStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ScrollView.get_viewportTransform
::UnityEngine::RectTransform* HMUI::ScrollView::get_viewportTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::get_viewportTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewportTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_contentTransform
::UnityEngine::RectTransform* HMUI::ScrollView::get_contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::get_contentTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_position
float HMUI::ScrollView::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_scrollableSize
float HMUI::ScrollView::get_scrollableSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::get_scrollableSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollableSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_scrollPageSize
float HMUI::ScrollView::get_scrollPageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::get_scrollPageSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollPageSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.get_contentSize
float HMUI::ScrollView::get_contentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::get_contentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.add_scrollPositionChangedEvent
void HMUI::ScrollView::add_scrollPositionChangedEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::add_scrollPositionChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scrollPositionChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ScrollView.remove_scrollPositionChangedEvent
void HMUI::ScrollView::remove_scrollPositionChangedEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::remove_scrollPositionChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scrollPositionChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ScrollView.Awake
void HMUI::ScrollView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.OnDestroy
void HMUI::ScrollView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.Update
void HMUI::ScrollView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.SetContentSize
void HMUI::ScrollView::SetContentSize(float contentSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::SetContentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contentSize);
}
// Autogenerated method: HMUI.ScrollView.UpdateContentSize
void HMUI::ScrollView::UpdateContentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::UpdateContentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateContentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.ScrollToEnd
void HMUI::ScrollView::ScrollToEnd(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollToEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: HMUI.ScrollView.ScrollToWorldPosition
void HMUI::ScrollView::ScrollToWorldPosition(::UnityEngine::Vector3 worldPosition, float pageRelativePosition, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollToWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(pageRelativePosition), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition, pageRelativePosition, animated);
}
// Autogenerated method: HMUI.ScrollView.ScrollToWorldPositionIfOutsideArea
void HMUI::ScrollView::ScrollToWorldPositionIfOutsideArea(::UnityEngine::Vector3 worldPosition, float pageRelativePosition, float relativeBoundaryStart, float relativeBoundaryEnd, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollToWorldPositionIfOutsideArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToWorldPositionIfOutsideArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(pageRelativePosition), ::il2cpp_utils::ExtractType(relativeBoundaryStart), ::il2cpp_utils::ExtractType(relativeBoundaryEnd), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition, pageRelativePosition, relativeBoundaryStart, relativeBoundaryEnd, animated);
}
// Autogenerated method: HMUI.ScrollView.ScrollTo
void HMUI::ScrollView::ScrollTo(float destinationPos, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationPos), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destinationPos, animated);
}
// Autogenerated method: HMUI.ScrollView.WorldPositionToScrollViewPosition
::UnityEngine::Vector2 HMUI::ScrollView::WorldPositionToScrollViewPosition(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::WorldPositionToScrollViewPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldPositionToScrollViewPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: HMUI.ScrollView.SetDestinationPos
void HMUI::ScrollView::SetDestinationPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::SetDestinationPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDestinationPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ScrollView.UpdateVerticalScrollIndicator
void HMUI::ScrollView::UpdateVerticalScrollIndicator(float posY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::UpdateVerticalScrollIndicator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVerticalScrollIndicator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(posY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, posY);
}
// Autogenerated method: HMUI.ScrollView.PageUpButtonPressed
void HMUI::ScrollView::PageUpButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::PageUpButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageUpButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.PageDownButtonPressed
void HMUI::ScrollView::PageDownButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::PageDownButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageDownButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.RefreshButtons
void HMUI::ScrollView::RefreshButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::RefreshButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.HandlePointerDidEnter
void HMUI::ScrollView::HandlePointerDidEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::HandlePointerDidEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerDidEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: HMUI.ScrollView.HandlePointerDidExit
void HMUI::ScrollView::HandlePointerDidExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::HandlePointerDidExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerDidExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: HMUI.ScrollView.HandleJoystickWasNotCenteredThisFrame
void HMUI::ScrollView::HandleJoystickWasNotCenteredThisFrame(::UnityEngine::Vector2 deltaPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::HandleJoystickWasNotCenteredThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoystickWasNotCenteredThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deltaPos);
}
// Autogenerated method: HMUI.ScrollView.HandleJoystickWasCenteredThisFrame
void HMUI::ScrollView::HandleJoystickWasCenteredThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::HandleJoystickWasCenteredThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoystickWasCenteredThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollView.ResolveScrollDirection
::HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ResolveScrollDirection(::UnityEngine::Vector2 deltaPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ResolveScrollDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveScrollDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ScrollView::ScrollDirection, false>(this, ___internal__method, deltaPos);
}
// Autogenerated method: HMUI.ScrollView.<Awake>b__38_0
float HMUI::ScrollView::$Awake$b__38_0(::HMUI::ItemForFocussedScrolling* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::<Awake>b__38_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__38_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, item);
}
// Autogenerated method: HMUI.ScrollView.<Awake>b__38_2
float HMUI::ScrollView::$Awake$b__38_2(::HMUI::ItemForFocussedScrolling* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::<Awake>b__38_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__38_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.ScrollType
#include "HMUI/ScrollView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollType PageSize
::HMUI::ScrollView::ScrollType HMUI::ScrollView::ScrollType::_get_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollType::_get_PageSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollType>("HMUI", "ScrollView/ScrollType", "PageSize"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollType PageSize
void HMUI::ScrollView::ScrollType::_set_PageSize(::HMUI::ScrollView::ScrollType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollType::_set_PageSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollType", "PageSize", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollType FixedCellSize
::HMUI::ScrollView::ScrollType HMUI::ScrollView::ScrollType::_get_FixedCellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollType::_get_FixedCellSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollType>("HMUI", "ScrollView/ScrollType", "FixedCellSize"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollType FixedCellSize
void HMUI::ScrollView::ScrollType::_set_FixedCellSize(::HMUI::ScrollView::ScrollType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollType::_set_FixedCellSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollType", "FixedCellSize", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollType FocusItems
::HMUI::ScrollView::ScrollType HMUI::ScrollView::ScrollType::_get_FocusItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollType::_get_FocusItems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollType>("HMUI", "ScrollView/ScrollType", "FocusItems"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollType FocusItems
void HMUI::ScrollView::ScrollType::_set_FocusItems(::HMUI::ScrollView::ScrollType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollType::_set_FocusItems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollType", "FocusItems", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::ScrollView::ScrollType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.ScrollDirection
#include "HMUI/ScrollView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection None
::HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "None"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection None
void HMUI::ScrollView::ScrollDirection::_set_None(::HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "None", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection Up
::HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection Up
void HMUI::ScrollView::ScrollDirection::_set_Up(::HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection Down
::HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection Down
void HMUI::ScrollView::ScrollDirection::_set_Down(::HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection Left
::HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection Left
void HMUI::ScrollView::ScrollDirection::_set_Left(::HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollDirection Right
::HMUI::ScrollView::ScrollDirection HMUI::ScrollView::ScrollDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollDirection>("HMUI", "ScrollView/ScrollDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollDirection Right
void HMUI::ScrollView::ScrollDirection::_set_Right(::HMUI::ScrollView::ScrollDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollDirection", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::ScrollView::ScrollDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.ScrollViewDirection
#include "HMUI/ScrollView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollViewDirection Vertical
::HMUI::ScrollView::ScrollViewDirection HMUI::ScrollView::ScrollViewDirection::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollViewDirection::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollViewDirection>("HMUI", "ScrollView/ScrollViewDirection", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollViewDirection Vertical
void HMUI::ScrollView::ScrollViewDirection::_set_Vertical(::HMUI::ScrollView::ScrollViewDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollViewDirection::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollViewDirection", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ScrollView/HMUI.ScrollViewDirection Horizontal
::HMUI::ScrollView::ScrollViewDirection HMUI::ScrollView::ScrollViewDirection::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollViewDirection::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ScrollView::ScrollViewDirection>("HMUI", "ScrollView/ScrollViewDirection", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ScrollView/HMUI.ScrollViewDirection Horizontal
void HMUI::ScrollView::ScrollViewDirection::_set_Horizontal(::HMUI::ScrollView::ScrollViewDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollViewDirection::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ScrollView/ScrollViewDirection", "Horizontal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::ScrollView::ScrollViewDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::ScrollViewDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c
#include "HMUI/ScrollView_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HMUI.ScrollView/HMUI.<>c <>9
::HMUI::ScrollView::$$c* HMUI::ScrollView::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::ScrollView::$$c*>("HMUI", "ScrollView/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HMUI.ScrollView/HMUI.<>c <>9
void HMUI::ScrollView::$$c::_set_$$9(::HMUI::ScrollView::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollView/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single,System.Single> <>9__38_1
::System::Func_2<float, float>* HMUI::ScrollView::$$c::_get_$$9__38_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::_get_$$9__38_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<float, float>*>("HMUI", "ScrollView/<>c", "<>9__38_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single,System.Single> <>9__38_1
void HMUI::ScrollView::$$c::_set_$$9__38_1(::System::Func_2<float, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::_set_$$9__38_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollView/<>c", "<>9__38_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single,System.Single> <>9__38_3
::System::Func_2<float, float>* HMUI::ScrollView::$$c::_get_$$9__38_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::_get_$$9__38_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<float, float>*>("HMUI", "ScrollView/<>c", "<>9__38_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single,System.Single> <>9__38_3
void HMUI::ScrollView::$$c::_set_$$9__38_3(::System::Func_2<float, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::_set_$$9__38_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollView/<>c", "<>9__38_3", value)));
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c..cctor
void HMUI::ScrollView::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ScrollView/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c.<Awake>b__38_1
float HMUI::ScrollView::$$c::$Awake$b__38_1(float i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::<Awake>b__38_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__38_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, i);
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c.<Awake>b__38_3
float HMUI::ScrollView::$$c::$Awake$b__38_3(float i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c::<Awake>b__38_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__38_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass50_0
#include "HMUI/ScrollView_--c__DisplayClass50_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::$$c__DisplayClass50_0::dyn_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c__DisplayClass50_0::dyn_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c__DisplayClass50_0.<PageUpButtonPressed>b__0
bool HMUI::ScrollView::$$c__DisplayClass50_0::$PageUpButtonPressed$b__0(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c__DisplayClass50_0::<PageUpButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PageUpButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass51_0
#include "HMUI/ScrollView_--c__DisplayClass51_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::$$c__DisplayClass51_0::dyn_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c__DisplayClass51_0::dyn_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c__DisplayClass51_0.<PageDownButtonPressed>b__0
bool HMUI::ScrollView::$$c__DisplayClass51_0::$PageDownButtonPressed$b__0(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c__DisplayClass51_0::<PageDownButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PageDownButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass56_0
#include "HMUI/ScrollView_--c__DisplayClass56_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::$$c__DisplayClass56_0::dyn_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c__DisplayClass56_0::dyn_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c__DisplayClass56_0.<HandleJoystickWasCenteredThisFrame>b__0
bool HMUI::ScrollView::$$c__DisplayClass56_0::$HandleJoystickWasCenteredThisFrame$b__0(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c__DisplayClass56_0::<HandleJoystickWasCenteredThisFrame>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleJoystickWasCenteredThisFrame>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollView/HMUI.<>c__DisplayClass56_1
#include "HMUI/ScrollView_--c__DisplayClass56_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single threshold
[[deprecated("Use field access instead!")]] float& HMUI::ScrollView::$$c__DisplayClass56_1::dyn_threshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c__DisplayClass56_1::dyn_threshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ScrollView/HMUI.<>c__DisplayClass56_1.<HandleJoystickWasCenteredThisFrame>b__1
bool HMUI::ScrollView::$$c__DisplayClass56_1::$HandleJoystickWasCenteredThisFrame$b__1(float pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollView::$$c__DisplayClass56_1::<HandleJoystickWasCenteredThisFrame>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleJoystickWasCenteredThisFrame>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollViewItemForVisibilityController
#include "HMUI/ScrollViewItemForVisibilityController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ScrollViewItemForVisibilityController.GetWorldCorners
void HMUI::ScrollViewItemForVisibilityController::GetWorldCorners(::ArrayW<::UnityEngine::Vector3> fourCornersArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemForVisibilityController::GetWorldCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fourCornersArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fourCornersArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollViewItemsVisibilityController
#include "HMUI/ScrollViewItemsVisibilityController.hpp"
// Including type: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c
#include "HMUI/ScrollViewItemsVisibilityController_--c.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.ScrollViewItemForVisibilityController
#include "HMUI/ScrollViewItemForVisibilityController.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewport
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::ScrollViewItemsVisibilityController::dyn__viewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__viewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewport"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::ScrollViewItemsVisibilityController::dyn__contentRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__contentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollViewItemForVisibilityController[] _items
[[deprecated("Use field access instead!")]] ::ArrayW<::HMUI::ScrollViewItemForVisibilityController*>& HMUI::ScrollViewItemsVisibilityController::dyn__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::ArrayW<::HMUI::ScrollViewItemForVisibilityController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastContentAnchoredPositionY
[[deprecated("Use field access instead!")]] float& HMUI::ScrollViewItemsVisibilityController::dyn__lastContentAnchoredPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__lastContentAnchoredPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastContentAnchoredPositionY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _viewportWorldCorners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& HMUI::ScrollViewItemsVisibilityController::dyn__viewportWorldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__viewportWorldCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportWorldCorners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>[] _upperItemsCornes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*>& HMUI::ScrollViewItemsVisibilityController::dyn__upperItemsCornes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__upperItemsCornes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upperItemsCornes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>[] _lowerItemsCornes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*>& HMUI::ScrollViewItemsVisibilityController::dyn__lowerItemsCornes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__lowerItemsCornes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowerItemsCornes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lowerLastVisibleIndex
[[deprecated("Use field access instead!")]] int& HMUI::ScrollViewItemsVisibilityController::dyn__lowerLastVisibleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__lowerLastVisibleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowerLastVisibleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _upperLastVisibleIndex
[[deprecated("Use field access instead!")]] int& HMUI::ScrollViewItemsVisibilityController::dyn__upperLastVisibleIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__upperLastVisibleIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upperLastVisibleIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _contentMaxY
[[deprecated("Use field access instead!")]] float& HMUI::ScrollViewItemsVisibilityController::dyn__contentMaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__contentMaxY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentMaxY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _contentMinY
[[deprecated("Use field access instead!")]] float& HMUI::ScrollViewItemsVisibilityController::dyn__contentMinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::dyn__contentMinY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentMinY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController.Start
void HMUI::ScrollViewItemsVisibilityController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController.Update
void HMUI::ScrollViewItemsVisibilityController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController.UpdateVisibilityUpDirection
void HMUI::ScrollViewItemsVisibilityController::UpdateVisibilityUpDirection(float newContentAnchoredPositionY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::UpdateVisibilityUpDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisibilityUpDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContentAnchoredPositionY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newContentAnchoredPositionY);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController.UpdateVisibilityDownDirection
void HMUI::ScrollViewItemsVisibilityController::UpdateVisibilityDownDirection(float newContentAnchoredPositionY) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::UpdateVisibilityDownDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisibilityDownDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContentAnchoredPositionY)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newContentAnchoredPositionY);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c
#include "HMUI/ScrollViewItemsVisibilityController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.ScrollViewItemForVisibilityController
#include "HMUI/ScrollViewItemForVisibilityController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly HMUI.ScrollViewItemsVisibilityController/HMUI.<>c <>9
::HMUI::ScrollViewItemsVisibilityController::$$c* HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::HMUI::ScrollViewItemsVisibilityController::$$c*>("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly HMUI.ScrollViewItemsVisibilityController/HMUI.<>c <>9
void HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9(::HMUI::ScrollViewItemsVisibilityController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>,System.Single> <>9__11_0
::System::Func_2<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*, float>* HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*, float>*>("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>,System.Single> <>9__11_0
void HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9__11_0(::System::Func_2<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9__11_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>,System.Single> <>9__11_1
::System::Func_2<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*, float>* HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*, float>*>("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<HMUI.ScrollViewItemForVisibilityController,System.Single>,System.Single> <>9__11_1
void HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9__11_1(::System::Func_2<::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("HMUI", "ScrollViewItemsVisibilityController/<>c", "<>9__11_1", value)));
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c..cctor
void HMUI::ScrollViewItemsVisibilityController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "ScrollViewItemsVisibilityController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c.<Start>b__11_0
float HMUI::ScrollViewItemsVisibilityController::$$c::$Start$b__11_0(::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::<Start>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, item);
}
// Autogenerated method: HMUI.ScrollViewItemsVisibilityController/HMUI.<>c.<Start>b__11_1
float HMUI::ScrollViewItemsVisibilityController::$$c::$Start$b__11_1(::System::Tuple_2<::HMUI::ScrollViewItemForVisibilityController*, float>* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ScrollViewItemsVisibilityController::$$c::<Start>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SelectableCell
#include "HMUI/SelectableCell.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal _wasPressedSignal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Signal*& HMUI::SelectableCell::dyn__wasPressedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::dyn__wasPressedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasPressedSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<HMUI.SelectableCell,HMUI.SelectableCell/HMUI.TransitionType,System.Object> selectionDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_3<::HMUI::SelectableCell*, ::HMUI::SelectableCell::TransitionType, ::Il2CppObject*>*& HMUI::SelectableCell::dyn_selectionDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::dyn_selectionDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::HMUI::SelectableCell*, ::HMUI::SelectableCell::TransitionType, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<HMUI.SelectableCell,HMUI.SelectableCell/HMUI.TransitionType> highlightDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::HMUI::SelectableCell*, ::HMUI::SelectableCell::TransitionType>*& HMUI::SelectableCell::dyn_highlightDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::dyn_highlightDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highlightDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::HMUI::SelectableCell*, ::HMUI::SelectableCell::TransitionType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <highlighted>k__BackingField
[[deprecated("Use field access instead!")]] bool& HMUI::SelectableCell::dyn_$highlighted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::dyn_$highlighted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<highlighted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <selected>k__BackingField
[[deprecated("Use field access instead!")]] bool& HMUI::SelectableCell::dyn_$selected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::dyn_$selected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selected>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.SelectableCell.get_highlighted
bool HMUI::SelectableCell::get_highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::get_highlighted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlighted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCell.set_highlighted
void HMUI::SelectableCell::set_highlighted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::set_highlighted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highlighted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.get_selected
bool HMUI::SelectableCell::get_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::get_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCell.set_selected
void HMUI::SelectableCell::set_selected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::set_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.add_selectionDidChangeEvent
void HMUI::SelectableCell::add_selectionDidChangeEvent(::System::Action_3<::HMUI::SelectableCell*, ::HMUI::SelectableCell::TransitionType, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::add_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.remove_selectionDidChangeEvent
void HMUI::SelectableCell::remove_selectionDidChangeEvent(::System::Action_3<::HMUI::SelectableCell*, ::HMUI::SelectableCell::TransitionType, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::remove_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.add_highlightDidChangeEvent
void HMUI::SelectableCell::add_highlightDidChangeEvent(::System::Action_2<::HMUI::SelectableCell*, ::HMUI::SelectableCell::TransitionType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::add_highlightDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_highlightDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.remove_highlightDidChangeEvent
void HMUI::SelectableCell::remove_highlightDidChangeEvent(::System::Action_2<::HMUI::SelectableCell*, ::HMUI::SelectableCell::TransitionType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::remove_highlightDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_highlightDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SelectableCell.Start
void HMUI::SelectableCell::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCell.SetSelected
void HMUI::SelectableCell::SetSelected(bool value, ::HMUI::SelectableCell::TransitionType transitionType, ::Il2CppObject* changeOwner, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(changeOwner), ::il2cpp_utils::ExtractType(ignoreCurrentValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, transitionType, changeOwner, ignoreCurrentValue);
}
// Autogenerated method: HMUI.SelectableCell.ClearHighlight
void HMUI::SelectableCell::ClearHighlight(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::ClearHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: HMUI.SelectableCell.SetHighlight
void HMUI::SelectableCell::SetHighlight(bool value, ::HMUI::SelectableCell::TransitionType transitionType, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::SetHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(ignoreCurrentValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, transitionType, ignoreCurrentValue);
}
// Autogenerated method: HMUI.SelectableCell.InternalToggle
void HMUI::SelectableCell::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::InternalToggle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCell.SelectionDidChange
void HMUI::SelectableCell::SelectionDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: HMUI.SelectableCell.HighlightDidChange
void HMUI::SelectableCell::HighlightDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: HMUI.SelectableCell.OnPointerClick
void HMUI::SelectableCell::OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: HMUI.SelectableCell.OnSubmit
void HMUI::SelectableCell::OnSubmit(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: HMUI.SelectableCell.OnPointerEnter
void HMUI::SelectableCell::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: HMUI.SelectableCell.OnPointerExit
void HMUI::SelectableCell::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SelectableCell/HMUI.TransitionType
#include "HMUI/SelectableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.SelectableCell/HMUI.TransitionType Instant
::HMUI::SelectableCell::TransitionType HMUI::SelectableCell::TransitionType::_get_Instant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::TransitionType::_get_Instant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::SelectableCell::TransitionType>("HMUI", "SelectableCell/TransitionType", "Instant"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.SelectableCell/HMUI.TransitionType Instant
void HMUI::SelectableCell::TransitionType::_set_Instant(::HMUI::SelectableCell::TransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::TransitionType::_set_Instant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SelectableCell/TransitionType", "Instant", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.SelectableCell/HMUI.TransitionType Animated
::HMUI::SelectableCell::TransitionType HMUI::SelectableCell::TransitionType::_get_Animated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::TransitionType::_get_Animated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::SelectableCell::TransitionType>("HMUI", "SelectableCell/TransitionType", "Animated"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.SelectableCell/HMUI.TransitionType Animated
void HMUI::SelectableCell::TransitionType::_set_Animated(::HMUI::SelectableCell::TransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::TransitionType::_set_Animated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SelectableCell/TransitionType", "Animated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::SelectableCell::TransitionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCell::TransitionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.SelectableCellStaticAnimations
#include "HMUI/SelectableCellStaticAnimations.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SelectableCell _selectableCell
[[deprecated("Use field access instead!")]] ::HMUI::SelectableCell*& HMUI::SelectableCellStaticAnimations::dyn__selectableCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::dyn__selectableCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectableCell"))->offset;
  return *reinterpret_cast<::HMUI::SelectableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SelectableCellStaticAnimations::dyn__normalAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::dyn__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _highlightedAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SelectableCellStaticAnimations::dyn__highlightedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::dyn__highlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SelectableCellStaticAnimations::dyn__selectedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::dyn__selectedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedAndHighlightedAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SelectableCellStaticAnimations::dyn__selectedAndHighlightedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::dyn__selectedAndHighlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.Awake
void HMUI::SelectableCellStaticAnimations::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.Start
void HMUI::SelectableCellStaticAnimations::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.OnDestroy
void HMUI::SelectableCellStaticAnimations::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.HandleSelectionDidChange
void HMUI::SelectableCellStaticAnimations::HandleSelectionDidChange(::HMUI::SelectableCell* selectableCell, ::HMUI::SelectableCell::TransitionType transitionType, ::Il2CppObject* changeOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::HandleSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(changeOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectableCell, transitionType, changeOwner);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.HandleHighlightDidChange
void HMUI::SelectableCellStaticAnimations::HandleHighlightDidChange(::HMUI::SelectableCell* selectableCell, ::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::HandleHighlightDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectableCell, transitionType);
}
// Autogenerated method: HMUI.SelectableCellStaticAnimations.RefreshVisuals
void HMUI::SelectableCellStaticAnimations::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SelectableCellStaticAnimations::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SetPropertyUtility
#include "HMUI/SetPropertyUtility.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SetPropertyUtility.SetColor
bool HMUI::SetPropertyUtility::SetColor(ByRef<::UnityEngine::Color> currentValue, ::UnityEngine::Color newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SetPropertyUtility::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("HMUI", "SetPropertyUtility", "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(currentValue), newValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: SimpleTextTableCell
#include "GlobalNamespace/SimpleTextTableCell.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellReuseIdentifier
::StringW HMUI::SimpleTextDropdown::_get_kCellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::_get_kCellReuseIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("HMUI", "SimpleTextDropdown", "kCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellReuseIdentifier
void HMUI::SimpleTextDropdown::_set_kCellReuseIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::_set_kCellReuseIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SimpleTextDropdown", "kCellReuseIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& HMUI::SimpleTextDropdown::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleTextTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleTextTableCell*& HMUI::SimpleTextDropdown::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleTextTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellSize
[[deprecated("Use field access instead!")]] float& HMUI::SimpleTextDropdown::dyn__cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::dyn__cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.String> _texts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::StringW>*& HMUI::SimpleTextDropdown::dyn__texts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::dyn__texts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& HMUI::SimpleTextDropdown::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.SimpleTextDropdown.LazyInit
void HMUI::SimpleTextDropdown::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SimpleTextDropdown.SetTexts
void HMUI::SimpleTextDropdown::SetTexts(::System::Collections::Generic::IReadOnlyList_1<::StringW>* texts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::SetTexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texts);
}
// Autogenerated method: HMUI.SimpleTextDropdown.CellSize
float HMUI::SimpleTextDropdown::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SimpleTextDropdown.NumberOfCells
int HMUI::SimpleTextDropdown::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SimpleTextDropdown.CellForIdx
::HMUI::TableCell* HMUI::SimpleTextDropdown::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: HMUI.SimpleTextDropdown.HandleDidSelectCellWithIdx
void HMUI::SimpleTextDropdown::HandleDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::HandleDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: HMUI.SimpleTextDropdown.OnDestroy
void HMUI::SimpleTextDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SimpleTextDropdown.Init
void HMUI::SimpleTextDropdown::Init(::HMUI::TableView::IDataSource* initTableViewDataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initTableViewDataSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initTableViewDataSource);
}
// Autogenerated method: HMUI.SimpleTextDropdown.SelectCellWithIdx
void HMUI::SimpleTextDropdown::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SimpleTextDropdown::SelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SwitchView
#include "HMUI/SwitchView.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SwitchView/HMUI.AnimationType _animationType
[[deprecated("Use field access instead!")]] ::HMUI::SwitchView::AnimationType& HMUI::SwitchView::dyn__animationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__animationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationType"))->offset;
  return *reinterpret_cast<::HMUI::SwitchView::AnimationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SwitchView::dyn__normalAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _highlightedAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SwitchView::dyn__highlightedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__highlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _pressedAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SwitchView::dyn__pressedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__pressedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _disabledAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SwitchView::dyn__disabledAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__disabledAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _onAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SwitchView::dyn__onAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__onAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _offAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SwitchView::dyn__offAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__offAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SwitchView::dyn__selectedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__selectedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _selectedAndHighlightedAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::SwitchView::dyn__selectedAndHighlightedAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__selectedAndHighlightedAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleWithCallbacks _toggle
[[deprecated("Use field access instead!")]] ::HMUI::ToggleWithCallbacks*& HMUI::SwitchView::dyn__toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::dyn__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  return *reinterpret_cast<::HMUI::ToggleWithCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.SwitchView.Awake
void HMUI::SwitchView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SwitchView.Start
void HMUI::SwitchView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SwitchView.OnDestroy
void HMUI::SwitchView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SwitchView.HandleOnValueChanged
void HMUI::SwitchView::HandleOnValueChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::HandleOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SwitchView.HandleStateDidChange
void HMUI::SwitchView::HandleStateDidChange(::HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::HandleStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SwitchView.RefreshVisuals
void HMUI::SwitchView::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SwitchView/HMUI.AnimationType
#include "HMUI/SwitchView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.SwitchView/HMUI.AnimationType OnOff
::HMUI::SwitchView::AnimationType HMUI::SwitchView::AnimationType::_get_OnOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::AnimationType::_get_OnOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::SwitchView::AnimationType>("HMUI", "SwitchView/AnimationType", "OnOff"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.SwitchView/HMUI.AnimationType OnOff
void HMUI::SwitchView::AnimationType::_set_OnOff(::HMUI::SwitchView::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::AnimationType::_set_OnOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SwitchView/AnimationType", "OnOff", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.SwitchView/HMUI.AnimationType SelectedState
::HMUI::SwitchView::AnimationType HMUI::SwitchView::AnimationType::_get_SelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::AnimationType::_get_SelectedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::SwitchView::AnimationType>("HMUI", "SwitchView/AnimationType", "SelectedState"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.SwitchView/HMUI.AnimationType SelectedState
void HMUI::SwitchView::AnimationType::_set_SelectedState(::HMUI::SwitchView::AnimationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::AnimationType::_set_SelectedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "SwitchView/AnimationType", "SelectedState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::SwitchView::AnimationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SwitchView::AnimationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableViewSelectionType
#include "HMUI/TableViewSelectionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.TableViewSelectionType None
::HMUI::TableViewSelectionType HMUI::TableViewSelectionType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableViewSelectionType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::TableViewSelectionType>("HMUI", "TableViewSelectionType", "None"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableViewSelectionType None
void HMUI::TableViewSelectionType::_set_None(::HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableViewSelectionType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableViewSelectionType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableViewSelectionType Single
::HMUI::TableViewSelectionType HMUI::TableViewSelectionType::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableViewSelectionType::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::TableViewSelectionType>("HMUI", "TableViewSelectionType", "Single"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableViewSelectionType Single
void HMUI::TableViewSelectionType::_set_Single(::HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableViewSelectionType::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableViewSelectionType", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableViewSelectionType Multiple
::HMUI::TableViewSelectionType HMUI::TableViewSelectionType::_get_Multiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableViewSelectionType::_get_Multiple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::TableViewSelectionType>("HMUI", "TableViewSelectionType", "Multiple"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableViewSelectionType Multiple
void HMUI::TableViewSelectionType::_set_Multiple(::HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableViewSelectionType::_set_Multiple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableViewSelectionType", "Multiple", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::TableViewSelectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableViewSelectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ITableCellOwner
#include "HMUI/ITableCellOwner.hpp"
// Including type: HMUI.TableViewSelectionType
#include "HMUI/TableViewSelectionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.ITableCellOwner.get_selectionType
::HMUI::TableViewSelectionType HMUI::ITableCellOwner::get_selectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ITableCellOwner::get_selectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableViewSelectionType, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ITableCellOwner.get_canSelectSelectedCell
bool HMUI::ITableCellOwner::get_canSelectSelectedCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ITableCellOwner::get_canSelectSelectedCell");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSelectSelectedCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ITableCellOwner.get_numberOfCells
int HMUI::ITableCellOwner::get_numberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ITableCellOwner::get_numberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SectionTableView
#include "HMUI/SectionTableView.hpp"
// Including type: HMUI.SectionTableView/HMUI.IDataSource
#include "HMUI/SectionTableView_IDataSource.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: HMUI.TableView/HMUI.ScrollPositionType
#include "HMUI/TableView_ScrollPositionType.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _unfoldSectionsByDefault
[[deprecated("Use field access instead!")]] bool& HMUI::SectionTableView::dyn__unfoldSectionsByDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::dyn__unfoldSectionsByDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unfoldSectionsByDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<HMUI.SectionTableView,System.Int32,System.Int32> didSelectRowInSectionEvent
[[deprecated("Use field access instead!")]] ::System::Action_3<::HMUI::SectionTableView*, int, int>*& HMUI::SectionTableView::dyn_didSelectRowInSectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::dyn_didSelectRowInSectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectRowInSectionEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::HMUI::SectionTableView*, int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<HMUI.SectionTableView,System.Int32> didSelectHeaderEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::HMUI::SectionTableView*, int>*& HMUI::SectionTableView::dyn_didSelectHeaderEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::dyn_didSelectHeaderEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectHeaderEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::HMUI::SectionTableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.SectionTableView/HMUI.IDataSource _dataSource
[[deprecated("Use field access instead!")]] ::HMUI::SectionTableView::IDataSource*& HMUI::SectionTableView::dyn__dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::dyn__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  return *reinterpret_cast<::HMUI::SectionTableView::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.SectionTableView/HMUI.Section[] _sections
[[deprecated("Use field access instead!")]] ::ArrayW<::HMUI::SectionTableView::Section>& HMUI::SectionTableView::dyn__sections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::dyn__sections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sections"))->offset;
  return *reinterpret_cast<::ArrayW<::HMUI::SectionTableView::Section>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.SectionTableView.get_dataSource
::HMUI::SectionTableView::IDataSource* HMUI::SectionTableView::get_dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::get_dataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::SectionTableView::IDataSource*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.set_dataSource
void HMUI::SectionTableView::set_dataSource(::HMUI::SectionTableView::IDataSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::set_dataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.add_didSelectRowInSectionEvent
void HMUI::SectionTableView::add_didSelectRowInSectionEvent(::System::Action_3<::HMUI::SectionTableView*, int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::add_didSelectRowInSectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectRowInSectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.remove_didSelectRowInSectionEvent
void HMUI::SectionTableView::remove_didSelectRowInSectionEvent(::System::Action_3<::HMUI::SectionTableView*, int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::remove_didSelectRowInSectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectRowInSectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.add_didSelectHeaderEvent
void HMUI::SectionTableView::add_didSelectHeaderEvent(::System::Action_2<::HMUI::SectionTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::add_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.remove_didSelectHeaderEvent
void HMUI::SectionTableView::remove_didSelectHeaderEvent(::System::Action_2<::HMUI::SectionTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::remove_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.SectionTableView.IsSectionUnfolded
bool HMUI::SectionTableView::IsSectionUnfolded(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::IsSectionUnfolded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSectionUnfolded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.CellSize
float HMUI::SectionTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.NumberOfCells
int HMUI::SectionTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.CellForIdx
::HMUI::TableCell* HMUI::SectionTableView::CellForIdx(::HMUI::TableView* tableView, int baseRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(baseRow)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, baseRow);
}
// Autogenerated method: HMUI.SectionTableView.ReloadData
void HMUI::SectionTableView::ReloadData(bool resetFoldState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::ReloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resetFoldState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resetFoldState);
}
// Autogenerated method: HMUI.SectionTableView.UnfoldAllSections
void HMUI::SectionTableView::UnfoldAllSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::UnfoldAllSections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnfoldAllSections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.FoldAll
void HMUI::SectionTableView::FoldAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::FoldAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FoldAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.UnfoldSection
void HMUI::SectionTableView::UnfoldSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::UnfoldSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnfoldSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.FoldSection
void HMUI::SectionTableView::FoldSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::FoldSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FoldSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView.ScrollToRow
void HMUI::SectionTableView::ScrollToRow(int section, int row, ::HMUI::TableView::ScrollPositionType scrollPositionType, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::ScrollToRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(scrollPositionType), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, section, row, scrollPositionType, animated);
}
// Autogenerated method: HMUI.SectionTableView.SectionAndRowForBaseRow
void HMUI::SectionTableView::SectionAndRowForBaseRow(int baseRow, ByRef<int> section, ByRef<int> row, ByRef<bool> isSectionHeader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::SectionAndRowForBaseRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SectionAndRowForBaseRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseRow), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseRow, byref(section), byref(row), byref(isSectionHeader));
}
// Autogenerated method: HMUI.SectionTableView.ReloadData
void HMUI::SectionTableView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::ReloadData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView.DidSelectCellWithIdx
void HMUI::SectionTableView::DidSelectCellWithIdx(int baseRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::DidSelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseRow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseRow);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.SectionTableView/HMUI.IDataSource
#include "HMUI/SectionTableView_IDataSource.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.RowHeight
float HMUI::SectionTableView::IDataSource::RowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::IDataSource::RowHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RowHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.NumberOfSections
int HMUI::SectionTableView::IDataSource::NumberOfSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::IDataSource::NumberOfSections");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfSections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.NumberOfRowsInSection
int HMUI::SectionTableView::IDataSource::NumberOfRowsInSection(int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::IDataSource::NumberOfRowsInSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfRowsInSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, section);
}
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.CellForSectionHeader
::HMUI::TableCell* HMUI::SectionTableView::IDataSource::CellForSectionHeader(int section, bool unfolded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::IDataSource::CellForSectionHeader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForSectionHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section), ::il2cpp_utils::ExtractType(unfolded)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, section, unfolded);
}
// Autogenerated method: HMUI.SectionTableView/HMUI.IDataSource.CellForRowInSection
::HMUI::TableCell* HMUI::SectionTableView::IDataSource::CellForRowInSection(int section, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::SectionTableView::IDataSource::CellForRowInSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForRowInSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(section), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, section, row);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: HMUI.ITableCellOwner
#include "HMUI/ITableCellOwner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <idx>k__BackingField
[[deprecated("Use field access instead!")]] int& HMUI::TableCell::dyn_$idx$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::dyn_$idx$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<idx>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _reuseIdentifier
[[deprecated("Use field access instead!")]] ::StringW& HMUI::TableCell::dyn__reuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::dyn__reuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ITableCellOwner _tableCellOwner
[[deprecated("Use field access instead!")]] ::HMUI::ITableCellOwner*& HMUI::TableCell::dyn__tableCellOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::dyn__tableCellOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableCellOwner"))->offset;
  return *reinterpret_cast<::HMUI::ITableCellOwner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.TableCell.get_reuseIdentifier
::StringW HMUI::TableCell::get_reuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::get_reuseIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reuseIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.set_reuseIdentifier
void HMUI::TableCell::set_reuseIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::set_reuseIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reuseIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableCell.get_idx
int HMUI::TableCell::get_idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::get_idx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_idx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.set_idx
void HMUI::TableCell::set_idx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::set_idx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_idx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableCell.get_tableCellOwner
::HMUI::ITableCellOwner* HMUI::TableCell::get_tableCellOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::get_tableCellOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tableCellOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ITableCellOwner*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.TableViewSetup
void HMUI::TableCell::TableViewSetup(::HMUI::ITableCellOwner* tableCellOwner, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::TableViewSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TableViewSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableCellOwner), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableCellOwner, idx);
}
// Autogenerated method: HMUI.TableCell.MoveIdx
void HMUI::TableCell::MoveIdx(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::MoveIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offset);
}
// Autogenerated method: HMUI.TableCell.__WasPreparedForReuse
void HMUI::TableCell::__WasPreparedForReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::__WasPreparedForReuse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__WasPreparedForReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.WasPreparedForReuse
void HMUI::TableCell::WasPreparedForReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::WasPreparedForReuse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WasPreparedForReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableCell.InternalToggle
void HMUI::TableCell::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableCell::InternalToggle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.TableView/HMUI.ScrollPositionType
#include "HMUI/TableView_ScrollPositionType.hpp"
// Including type: HMUI.TableView/HMUI.CellsGroup
#include "HMUI/TableView_CellsGroup.hpp"
// Including type: HMUI.TableView/HMUI.IDataSource
#include "HMUI/TableView_IDataSource.hpp"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.RectTransform/UnityEngine.Axis
#include "UnityEngine/RectTransform_Axis.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView _scrollView
[[deprecated("Use field access instead!")]] ::HMUI::ScrollView*& HMUI::TableView::dyn__scrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__scrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollView"))->offset;
  return *reinterpret_cast<::HMUI::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _scrollToTopOnEnable
[[deprecated("Use field access instead!")]] bool& HMUI::TableView::dyn__scrollToTopOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__scrollToTopOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollToTopOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _alignToCenter
[[deprecated("Use field access instead!")]] bool& HMUI::TableView::dyn__alignToCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__alignToCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alignToCenter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView/HMUI.TableType _tableType
[[deprecated("Use field access instead!")]] ::HMUI::TableView::TableType& HMUI::TableView::dyn__tableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__tableType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableType"))->offset;
  return *reinterpret_cast<::HMUI::TableView::TableType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableViewSelectionType _selectionType
[[deprecated("Use field access instead!")]] ::HMUI::TableViewSelectionType& HMUI::TableView::dyn__selectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__selectionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionType"))->offset;
  return *reinterpret_cast<::HMUI::TableViewSelectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canSelectSelectedCell
[[deprecated("Use field access instead!")]] bool& HMUI::TableView::dyn__canSelectSelectedCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__canSelectSelectedCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canSelectSelectedCell"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView/HMUI.CellsGroup[] _preallocatedCells
[[deprecated("Use field access instead!")]] ::ArrayW<::HMUI::TableView::CellsGroup*>& HMUI::TableView::dyn__preallocatedCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__preallocatedCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preallocatedCells"))->offset;
  return *reinterpret_cast<::ArrayW<::HMUI::TableView::CellsGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<HMUI.TableView,System.Int32> didSelectCellWithIdxEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::HMUI::TableView*, int>*& HMUI::TableView::dyn_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::HMUI::TableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.TableView> didReloadDataEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::HMUI::TableView*>*& HMUI::TableView::dyn_didReloadDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn_didReloadDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didReloadDataEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.TableView> didInsertCellsEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::HMUI::TableView*>*& HMUI::TableView::dyn_didInsertCellsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn_didInsertCellsEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInsertCellsEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.TableView> didDeleteCellsEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::HMUI::TableView*>*& HMUI::TableView::dyn_didDeleteCellsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn_didDeleteCellsEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDeleteCellsEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.TableView> didChangeRectSizeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::HMUI::TableView*>*& HMUI::TableView::dyn_didChangeRectSizeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn_didChangeRectSizeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeRectSizeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::HMUI::TableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::TableView::dyn__contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__contentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewportTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::TableView::dyn__viewportTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__viewportTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected HMUI.TableView/HMUI.IDataSource _dataSource
[[deprecated("Use field access instead!")]] ::HMUI::TableView::IDataSource*& HMUI::TableView::dyn__dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  return *reinterpret_cast<::HMUI::TableView::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfCells
[[deprecated("Use field access instead!")]] int& HMUI::TableView::dyn__numberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__numberOfCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfCells"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellSize
[[deprecated("Use field access instead!")]] float& HMUI::TableView::dyn__cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<HMUI.TableCell> _visibleCells
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::HMUI::TableCell*>*& HMUI::TableView::dyn__visibleCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__visibleCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visibleCells"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::HMUI::TableCell*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<HMUI.TableCell>> _reusableCells
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::HMUI::TableCell*>*>*& HMUI::TableView::dyn__reusableCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__reusableCells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reusableCells"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::HMUI::TableCell*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _selectedCellIdxs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<int>*& HMUI::TableView::dyn__selectedCellIdxs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__selectedCellIdxs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedCellIdxs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevMinIdx
[[deprecated("Use field access instead!")]] int& HMUI::TableView::dyn__prevMinIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__prevMinIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMinIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevMaxIdx
[[deprecated("Use field access instead!")]] int& HMUI::TableView::dyn__prevMaxIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__prevMaxIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMaxIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& HMUI::TableView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _refreshCellsOnEnable
[[deprecated("Use field access instead!")]] bool& HMUI::TableView::dyn__refreshCellsOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::dyn__refreshCellsOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshCellsOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.TableView.get_selectionType
::HMUI::TableViewSelectionType HMUI::TableView::get_selectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_selectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableViewSelectionType, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.set_selectionType
void HMUI::TableView::set_selectionType(::HMUI::TableViewSelectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::set_selectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.get_canSelectSelectedCell
bool HMUI::TableView::get_canSelectSelectedCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_canSelectSelectedCell");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSelectSelectedCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_dataSource
::HMUI::TableView::IDataSource* HMUI::TableView::get_dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_dataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableView::IDataSource*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_visibleCells
::System::Collections::Generic::IEnumerable_1<::HMUI::TableCell*>* HMUI::TableView::get_visibleCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_visibleCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_visibleCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::HMUI::TableCell*>*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_viewportTransform
::UnityEngine::RectTransform* HMUI::TableView::get_viewportTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_viewportTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewportTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_contentTransform
::UnityEngine::RectTransform* HMUI::TableView::get_contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_contentTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_numberOfCells
int HMUI::TableView::get_numberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_numberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_cellSize
float HMUI::TableView::get_cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_cellSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_tableType
::HMUI::TableView::TableType HMUI::TableView::get_tableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_tableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableView::TableType, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.get_scrollView
::HMUI::ScrollView* HMUI::TableView::get_scrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::get_scrollView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ScrollView*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.add_didSelectCellWithIdxEvent
void HMUI::TableView::add_didSelectCellWithIdxEvent(::System::Action_2<::HMUI::TableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didSelectCellWithIdxEvent
void HMUI::TableView::remove_didSelectCellWithIdxEvent(::System::Action_2<::HMUI::TableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.add_didReloadDataEvent
void HMUI::TableView::add_didReloadDataEvent(::System::Action_1<::HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::add_didReloadDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReloadDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didReloadDataEvent
void HMUI::TableView::remove_didReloadDataEvent(::System::Action_1<::HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::remove_didReloadDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReloadDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.add_didInsertCellsEvent
void HMUI::TableView::add_didInsertCellsEvent(::System::Action_1<::HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::add_didInsertCellsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInsertCellsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didInsertCellsEvent
void HMUI::TableView::remove_didInsertCellsEvent(::System::Action_1<::HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::remove_didInsertCellsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInsertCellsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.add_didDeleteCellsEvent
void HMUI::TableView::add_didDeleteCellsEvent(::System::Action_1<::HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::add_didDeleteCellsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDeleteCellsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didDeleteCellsEvent
void HMUI::TableView::remove_didDeleteCellsEvent(::System::Action_1<::HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::remove_didDeleteCellsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDeleteCellsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.add_didChangeRectSizeEvent
void HMUI::TableView::add_didChangeRectSizeEvent(::System::Action_1<::HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::add_didChangeRectSizeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeRectSizeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.remove_didChangeRectSizeEvent
void HMUI::TableView::remove_didChangeRectSizeEvent(::System::Action_1<::HMUI::TableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::remove_didChangeRectSizeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeRectSizeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.TableView.SetDataSource
void HMUI::TableView::SetDataSource(::HMUI::TableView::IDataSource* newDataSource, bool reloadData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::SetDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDataSource), ::il2cpp_utils::ExtractType(reloadData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newDataSource, reloadData);
}
// Autogenerated method: HMUI.TableView.Awake
void HMUI::TableView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.OnDestroy
void HMUI::TableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.OnEnable
void HMUI::TableView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.LazyInit
void HMUI::TableView::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.Hide
void HMUI::TableView::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.Show
void HMUI::TableView::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.RefreshContentSize
void HMUI::TableView::RefreshContentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::RefreshContentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.RefreshCellsContent
void HMUI::TableView::RefreshCellsContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::RefreshCellsContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCellsContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.GetVisibleCellsIdRange
::System::Tuple_2<int, int>* HMUI::TableView::GetVisibleCellsIdRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::GetVisibleCellsIdRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVisibleCellsIdRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Tuple_2<int, int>*, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.RefreshCells
void HMUI::TableView::RefreshCells(bool forcedVisualsRefresh, bool forcedContentRefresh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::RefreshCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forcedVisualsRefresh), ::il2cpp_utils::ExtractType(forcedContentRefresh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forcedVisualsRefresh, forcedContentRefresh);
}
// Autogenerated method: HMUI.TableView.LayoutCellForIdx
void HMUI::TableView::LayoutCellForIdx(::HMUI::TableCell* cell, int idx, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::LayoutCellForIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutCellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cell), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cell, idx, offset);
}
// Autogenerated method: HMUI.TableView.AddCellToReusableCells
void HMUI::TableView::AddCellToReusableCells(::HMUI::TableCell* cell) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::AddCellToReusableCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCellToReusableCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cell)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cell);
}
// Autogenerated method: HMUI.TableView.HandleScrollRectValueChanged
void HMUI::TableView::HandleScrollRectValueChanged(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::HandleScrollRectValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScrollRectValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: HMUI.TableView.HandleCellSelectionDidChange
void HMUI::TableView::HandleCellSelectionDidChange(::HMUI::SelectableCell* selectableCell, ::HMUI::SelectableCell::TransitionType transitionType, ::Il2CppObject* changeOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::HandleCellSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellSelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(changeOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectableCell, transitionType, changeOwner);
}
// Autogenerated method: HMUI.TableView.DidSelectCellWithIdx
void HMUI::TableView::DidSelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::DidSelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: HMUI.TableView.ReloadDataKeepingPosition
void HMUI::TableView::ReloadDataKeepingPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ReloadDataKeepingPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadDataKeepingPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.ReloadData
void HMUI::TableView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ReloadData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.InsertCells
void HMUI::TableView::InsertCells(int idx, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::InsertCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, count);
}
// Autogenerated method: HMUI.TableView.DeleteCells
void HMUI::TableView::DeleteCells(int idx, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::DeleteCells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, count);
}
// Autogenerated method: HMUI.TableView.DequeueReusableCellForIdentifier
::HMUI::TableCell* HMUI::TableView::DequeueReusableCellForIdentifier(::StringW identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::DequeueReusableCellForIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DequeueReusableCellForIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, identifier);
}
// Autogenerated method: HMUI.TableView.SelectCellWithIdx
void HMUI::TableView::SelectCellWithIdx(int idx, bool callbackTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::SelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(callbackTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, callbackTable);
}
// Autogenerated method: HMUI.TableView.ClearSelection
void HMUI::TableView::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.ClearHighlights
void HMUI::TableView::ClearHighlights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ClearHighlights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHighlights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView.ScrollToCellWithIdx
void HMUI::TableView::ScrollToCellWithIdx(int idx, ::HMUI::TableView::ScrollPositionType scrollPositionType, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ScrollToCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(scrollPositionType), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, scrollPositionType, animated);
}
// Autogenerated method: HMUI.TableView.ChangeRectSize
void HMUI::TableView::ChangeRectSize(::UnityEngine::RectTransform::Axis axis, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ChangeRectSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeRectSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableView/HMUI.TableType
#include "HMUI/TableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.TableType Vertical
::HMUI::TableView::TableType HMUI::TableView::TableType::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::TableType::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::TableView::TableType>("HMUI", "TableView/TableType", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.TableType Vertical
void HMUI::TableView::TableType::_set_Vertical(::HMUI::TableView::TableType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::TableType::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/TableType", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.TableType Horizontal
::HMUI::TableView::TableType HMUI::TableView::TableType::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::TableType::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::TableView::TableType>("HMUI", "TableView/TableType", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.TableType Horizontal
void HMUI::TableView::TableType::_set_Horizontal(::HMUI::TableView::TableType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::TableType::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/TableType", "Horizontal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::TableView::TableType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::TableType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableView/HMUI.ScrollPositionType
#include "HMUI/TableView_ScrollPositionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.ScrollPositionType Beginning
::HMUI::TableView::ScrollPositionType HMUI::TableView::ScrollPositionType::_get_Beginning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ScrollPositionType::_get_Beginning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::TableView::ScrollPositionType>("HMUI", "TableView/ScrollPositionType", "Beginning"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.ScrollPositionType Beginning
void HMUI::TableView::ScrollPositionType::_set_Beginning(::HMUI::TableView::ScrollPositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ScrollPositionType::_set_Beginning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/ScrollPositionType", "Beginning", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.ScrollPositionType Center
::HMUI::TableView::ScrollPositionType HMUI::TableView::ScrollPositionType::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ScrollPositionType::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::TableView::ScrollPositionType>("HMUI", "TableView/ScrollPositionType", "Center"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.ScrollPositionType Center
void HMUI::TableView::ScrollPositionType::_set_Center(::HMUI::TableView::ScrollPositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ScrollPositionType::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/ScrollPositionType", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.TableView/HMUI.ScrollPositionType End
::HMUI::TableView::ScrollPositionType HMUI::TableView::ScrollPositionType::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ScrollPositionType::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::TableView::ScrollPositionType>("HMUI", "TableView/ScrollPositionType", "End"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.TableView/HMUI.ScrollPositionType End
void HMUI::TableView::ScrollPositionType::_set_End(::HMUI::TableView::ScrollPositionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ScrollPositionType::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "TableView/ScrollPositionType", "End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::TableView::ScrollPositionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::ScrollPositionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableView/HMUI.CellsGroup
#include "HMUI/TableView_CellsGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _reuseIdentifier
[[deprecated("Use field access instead!")]] ::StringW& HMUI::TableView::CellsGroup::dyn__reuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::CellsGroup::dyn__reuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<HMUI.TableCell> _cells
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::HMUI::TableCell*>*& HMUI::TableView::CellsGroup::dyn__cells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::CellsGroup::dyn__cells");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cells"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::HMUI::TableCell*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.TableView/HMUI.CellsGroup.get_reuseIdentifier
::StringW HMUI::TableView::CellsGroup::get_reuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::CellsGroup::get_reuseIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reuseIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView/HMUI.CellsGroup.get_cells
::System::Collections::Generic::List_1<::HMUI::TableCell*>* HMUI::TableView::CellsGroup::get_cells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::CellsGroup::get_cells");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::HMUI::TableCell*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TableView/HMUI.IDataSource
#include "HMUI/TableView_IDataSource.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HMUI.TableView/HMUI.IDataSource.CellSize
float HMUI::TableView::IDataSource::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::IDataSource::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView/HMUI.IDataSource.NumberOfCells
int HMUI::TableView::IDataSource::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::IDataSource::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.TableView/HMUI.IDataSource.CellForIdx
::HMUI::TableCell* HMUI::TableView::IDataSource::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TableView::IDataSource::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& HMUI::TextPageScrollView::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TextPageScrollView::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.TextPageScrollView.SetText
void HMUI::TextPageScrollView::SetText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::TextPageScrollView::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ToggleWithCallbacks
#include "HMUI/ToggleWithCallbacks.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HMUI.ToggleWithCallbacks/HMUI.SelectionState> stateDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::HMUI::ToggleWithCallbacks::SelectionState>*& HMUI::ToggleWithCallbacks::dyn_stateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::dyn_stateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::HMUI::ToggleWithCallbacks::SelectionState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.ToggleWithCallbacks.get_selectionState
::HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::get_selectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::get_selectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ToggleWithCallbacks::SelectionState, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.ToggleWithCallbacks.add_stateDidChangeEvent
void HMUI::ToggleWithCallbacks::add_stateDidChangeEvent(::System::Action_1<::HMUI::ToggleWithCallbacks::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::add_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ToggleWithCallbacks.remove_stateDidChangeEvent
void HMUI::ToggleWithCallbacks::remove_stateDidChangeEvent(::System::Action_1<::HMUI::ToggleWithCallbacks::SelectionState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::remove_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.ToggleWithCallbacks.DoStateTransition
void HMUI::ToggleWithCallbacks::DoStateTransition(::UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.ToggleWithCallbacks/HMUI.SelectionState
#include "HMUI/ToggleWithCallbacks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Normal
::HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Normal
void HMUI::ToggleWithCallbacks::SelectionState::_set_Normal(::HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Highlighted
::HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Highlighted
void HMUI::ToggleWithCallbacks::SelectionState::_set_Highlighted(::HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Pressed
::HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Pressed
void HMUI::ToggleWithCallbacks::SelectionState::_set_Pressed(::HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Selected
::HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Selected
void HMUI::ToggleWithCallbacks::SelectionState::_set_Selected(::HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Disabled
::HMUI::ToggleWithCallbacks::SelectionState HMUI::ToggleWithCallbacks::SelectionState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HMUI::ToggleWithCallbacks::SelectionState>("HMUI", "ToggleWithCallbacks/SelectionState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public HMUI.ToggleWithCallbacks/HMUI.SelectionState Disabled
void HMUI::ToggleWithCallbacks::SelectionState::_set_Disabled(::HMUI::ToggleWithCallbacks::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HMUI", "ToggleWithCallbacks/SelectionState", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HMUI::ToggleWithCallbacks::SelectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::ToggleWithCallbacks::SelectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HMUI.VerticalScrollIndicator
#include "HMUI/VerticalScrollIndicator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _handle
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& HMUI::VerticalScrollIndicator::dyn__handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::dyn__handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handle"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _normalAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::VerticalScrollIndicator::dyn__normalAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::dyn__normalAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _disabledAnimationClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& HMUI::VerticalScrollIndicator::dyn__disabledAnimationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::dyn__disabledAnimationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAnimationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _padding
[[deprecated("Use field access instead!")]] float& HMUI::VerticalScrollIndicator::dyn__padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::dyn__padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _progress
[[deprecated("Use field access instead!")]] float& HMUI::VerticalScrollIndicator::dyn__progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::dyn__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _normalizedPageHeight
[[deprecated("Use field access instead!")]] float& HMUI::VerticalScrollIndicator::dyn__normalizedPageHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::dyn__normalizedPageHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalizedPageHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.get_progress
float HMUI::VerticalScrollIndicator::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::get_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.set_progress
void HMUI::VerticalScrollIndicator::set_progress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::set_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.get_normalizedPageHeight
float HMUI::VerticalScrollIndicator::get_normalizedPageHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::get_normalizedPageHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalizedPageHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.set_normalizedPageHeight
void HMUI::VerticalScrollIndicator::set_normalizedPageHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::set_normalizedPageHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedPageHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.set_disabled
void HMUI::VerticalScrollIndicator::set_disabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::set_disabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.OnEnable
void HMUI::VerticalScrollIndicator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HMUI.VerticalScrollIndicator.RefreshHandle
void HMUI::VerticalScrollIndicator::RefreshHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HMUI::VerticalScrollIndicator::RefreshHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HEU_BoundingVolume
#include "GlobalNamespace/HEU_BoundingVolume.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HEU_BoundingVolume.get_BoundingCollider
::UnityEngine::Collider* GlobalNamespace::HEU_BoundingVolume::get_BoundingCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_BoundingVolume::get_BoundingCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BoundingCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: HEU_BoundingVolume.GetAllIntersectingObjects
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::HEU_BoundingVolume::GetAllIntersectingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_BoundingVolume::GetAllIntersectingObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllIntersectingObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HEU_ExampleEvergreenQuery
#include "GlobalNamespace/HEU_ExampleEvergreenQuery.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HoudiniEngineUnity.HEU_SessionBase
#include "HoudiniEngineUnity/HEU_SessionBase.hpp"
// Including type: HoudiniEngineUnity.HAPI_GeoInfo
#include "HoudiniEngineUnity/HAPI_GeoInfo.hpp"
// Including type: HoudiniEngineUnity.HAPI_AttributeOwner
#include "HoudiniEngineUnity/HAPI_AttributeOwner.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: HoudiniEngineUnity.HAPI_AttributeInfo
#include "HoudiniEngineUnity/HAPI_AttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HEU_ExampleEvergreenQuery.StartQuery
void GlobalNamespace::HEU_ExampleEvergreenQuery::StartQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::StartQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "StartQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: HEU_ExampleEvergreenQuery.QueryHoudiniAsset
::HoudiniEngineUnity::HEU_HoudiniAsset* GlobalNamespace::HEU_ExampleEvergreenQuery::QueryHoudiniAsset(::UnityEngine::GameObject* rootGO) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::QueryHoudiniAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "QueryHoudiniAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootGO)})));
  return ::il2cpp_utils::RunMethodRethrow<::HoudiniEngineUnity::HEU_HoudiniAsset*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rootGO);
}
// Autogenerated method: HEU_ExampleEvergreenQuery.CookAsset
void GlobalNamespace::HEU_ExampleEvergreenQuery::CookAsset(::HoudiniEngineUnity::HEU_HoudiniAsset* houdiniAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::CookAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "CookAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(houdiniAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, houdiniAsset);
}
// Autogenerated method: HEU_ExampleEvergreenQuery.ChangeParmsAndCook
void GlobalNamespace::HEU_ExampleEvergreenQuery::ChangeParmsAndCook(::HoudiniEngineUnity::HEU_HoudiniAsset* houdiniAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::ChangeParmsAndCook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "ChangeParmsAndCook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(houdiniAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, houdiniAsset);
}
// Autogenerated method: HEU_ExampleEvergreenQuery.QueryObjects
void GlobalNamespace::HEU_ExampleEvergreenQuery::QueryObjects(::HoudiniEngineUnity::HEU_HoudiniAsset* houdiniAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::QueryObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "QueryObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(houdiniAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, houdiniAsset);
}
// Autogenerated method: HEU_ExampleEvergreenQuery.QueryGeoParts
void GlobalNamespace::HEU_ExampleEvergreenQuery::QueryGeoParts(::HoudiniEngineUnity::HEU_SessionBase* session, ByRef<::HoudiniEngineUnity::HAPI_GeoInfo> geoInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::QueryGeoParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "QueryGeoParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(session), ::il2cpp_utils::ExtractType(geoInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, session, byref(geoInfo));
}
// Autogenerated method: HEU_ExampleEvergreenQuery.QueryPartAttributeByOwner
void GlobalNamespace::HEU_ExampleEvergreenQuery::QueryPartAttributeByOwner(::HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ::HoudiniEngineUnity::HAPI_AttributeOwner owner, int count, ::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::QueryPartAttributeByOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "QueryPartAttributeByOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(session), ::il2cpp_utils::ExtractType(geoID), ::il2cpp_utils::ExtractType(partID), ::il2cpp_utils::ExtractType(owner), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, session, geoID, partID, owner, count, sb);
}
// Autogenerated method: HEU_ExampleEvergreenQuery.QueryAttributeByStorageType
void GlobalNamespace::HEU_ExampleEvergreenQuery::QueryAttributeByStorageType(::HoudiniEngineUnity::HEU_SessionBase* session, int geoID, int partID, ByRef<::HoudiniEngineUnity::HAPI_AttributeInfo> attrInfo, ::StringW attrName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::QueryAttributeByStorageType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "QueryAttributeByStorageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(session), ::il2cpp_utils::ExtractType(geoID), ::il2cpp_utils::ExtractType(partID), ::il2cpp_utils::ExtractType(attrInfo), ::il2cpp_utils::ExtractType(attrName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, session, geoID, partID, byref(attrInfo), attrName);
}
// Autogenerated method: HEU_ExampleEvergreenQuery.QueryAttribute
void GlobalNamespace::HEU_ExampleEvergreenQuery::QueryAttribute(::HoudiniEngineUnity::HEU_HoudiniAsset* houdiniAsset, ::StringW objName, ::StringW geoName, int partID, ::StringW attrName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleEvergreenQuery::QueryAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleEvergreenQuery", "QueryAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(houdiniAsset), ::il2cpp_utils::ExtractType(objName), ::il2cpp_utils::ExtractType(geoName), ::il2cpp_utils::ExtractType(partID), ::il2cpp_utils::ExtractType(attrName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, houdiniAsset, objName, geoName, partID, attrName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HEU_ExampleInstanceCustomAttribute
#include "GlobalNamespace/HEU_ExampleInstanceCustomAttribute.hpp"
// Including type: HoudiniEngineUnity.HEU_OutputAttribute
#include "HoudiniEngineUnity/HEU_OutputAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HEU_ExampleInstanceCustomAttribute.InstancerCallback
void GlobalNamespace::HEU_ExampleInstanceCustomAttribute::InstancerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleInstanceCustomAttribute::InstancerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstancerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HEU_ExampleInstanceCustomAttribute.LogAttr
void GlobalNamespace::HEU_ExampleInstanceCustomAttribute::LogAttr(::HoudiniEngineUnity::HEU_OutputAttribute* outAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ExampleInstanceCustomAttribute::LogAttr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ExampleInstanceCustomAttribute", "LogAttr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outAttr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, outAttr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HEU_ScriptCallbackExample
#include "GlobalNamespace/HEU_ScriptCallbackExample.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String _msg
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::HEU_ScriptCallbackExample::dyn__msg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptCallbackExample::dyn__msg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_msg"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HEU_ScriptCallbackExample.AssetCallbackWithMsg
void GlobalNamespace::HEU_ScriptCallbackExample::AssetCallbackWithMsg(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptCallbackExample::AssetCallbackWithMsg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssetCallbackWithMsg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: HEU_ScriptCallbackExample.AssetCallbackNoMsg
void GlobalNamespace::HEU_ScriptCallbackExample::AssetCallbackNoMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptCallbackExample::AssetCallbackNoMsg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssetCallbackNoMsg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HEU_ScriptMeshInputUVLayoutExample
#include "GlobalNamespace/HEU_ScriptMeshInputUVLayoutExample.hpp"
// Including type: HEU_ScriptMeshInputUVLayoutExample/OutputMode
#include "GlobalNamespace/HEU_ScriptMeshInputUVLayoutExample_OutputMode.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HEU_ScriptMeshInputUVLayoutExample.ApplyUVLayoutTo
void GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::ApplyUVLayoutTo(::ArrayW<::UnityEngine::GameObject*> gameObjects, ::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode outputMode, ::StringW output_name_suffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::ApplyUVLayoutTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HEU_ScriptMeshInputUVLayoutExample", "ApplyUVLayoutTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjects), ::il2cpp_utils::ExtractType(outputMode), ::il2cpp_utils::ExtractType(output_name_suffix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObjects, outputMode, output_name_suffix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HEU_ScriptMeshInputUVLayoutExample/OutputMode
#include "GlobalNamespace/HEU_ScriptMeshInputUVLayoutExample_OutputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HEU_ScriptMeshInputUVLayoutExample/OutputMode COPY
::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::_get_COPY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::_get_COPY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode>("", "HEU_ScriptMeshInputUVLayoutExample/OutputMode", "COPY"));
}
// Autogenerated static field setter
// Set static field: static public HEU_ScriptMeshInputUVLayoutExample/OutputMode COPY
void GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::_set_COPY(::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::_set_COPY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HEU_ScriptMeshInputUVLayoutExample/OutputMode", "COPY", value));
}
// Autogenerated static field getter
// Get static field: static public HEU_ScriptMeshInputUVLayoutExample/OutputMode REPLACE
::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::_get_REPLACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::_get_REPLACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode>("", "HEU_ScriptMeshInputUVLayoutExample/OutputMode", "REPLACE"));
}
// Autogenerated static field setter
// Set static field: static public HEU_ScriptMeshInputUVLayoutExample/OutputMode REPLACE
void GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::_set_REPLACE(::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::_set_REPLACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HEU_ScriptMeshInputUVLayoutExample/OutputMode", "REPLACE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptMeshInputUVLayoutExample::OutputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HEU_ScriptParameterExample
#include "GlobalNamespace/HEU_ScriptParameterExample.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject _evergreenGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HEU_ScriptParameterExample::dyn__evergreenGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptParameterExample::dyn__evergreenGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_evergreenGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HoudiniEngineUnity.HEU_HoudiniAsset _evergreenAsset
[[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HEU_HoudiniAsset*& GlobalNamespace::HEU_ScriptParameterExample::dyn__evergreenAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptParameterExample::dyn__evergreenAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_evergreenAsset"))->offset;
  return *reinterpret_cast<::HoudiniEngineUnity::HEU_HoudiniAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _updateRate
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HEU_ScriptParameterExample::dyn__updateRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptParameterExample::dyn__updateRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _scale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::HEU_ScriptParameterExample::dyn__scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptParameterExample::dyn__scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HEU_ScriptParameterExample.Start
void GlobalNamespace::HEU_ScriptParameterExample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptParameterExample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HEU_ScriptParameterExample.UpdateGravity
void GlobalNamespace::HEU_ScriptParameterExample::UpdateGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_ScriptParameterExample::UpdateGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HEU_AssetEventReceiverTest
#include "GlobalNamespace/HEU_AssetEventReceiverTest.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HEU_AssetEventReceiverTest.ReloadCallback
void GlobalNamespace::HEU_AssetEventReceiverTest::ReloadCallback(::HoudiniEngineUnity::HEU_HoudiniAsset* asset, bool success, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* outputList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_AssetEventReceiverTest::ReloadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(outputList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, success, outputList);
}
// Autogenerated method: HEU_AssetEventReceiverTest.CookedCallback
void GlobalNamespace::HEU_AssetEventReceiverTest::CookedCallback(::HoudiniEngineUnity::HEU_HoudiniAsset* asset, bool success, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* outputList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_AssetEventReceiverTest::CookedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CookedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(outputList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, success, outputList);
}
// Autogenerated method: HEU_AssetEventReceiverTest.BakedCallback
void GlobalNamespace::HEU_AssetEventReceiverTest::BakedCallback(::HoudiniEngineUnity::HEU_HoudiniAsset* asset, bool success, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* outputList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HEU_AssetEventReceiverTest::BakedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BakedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(outputList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, success, outputList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.HEU_AssetEventType
#include "HoudiniEngineUnity/HEU_AssetEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HoudiniEngineUnity.HEU_AssetEventType UNKNOWN
::HoudiniEngineUnity::HEU_AssetEventType HoudiniEngineUnity::HEU_AssetEventType::_get_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_get_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HoudiniEngineUnity::HEU_AssetEventType>("HoudiniEngineUnity", "HEU_AssetEventType", "UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public HoudiniEngineUnity.HEU_AssetEventType UNKNOWN
void HoudiniEngineUnity::HEU_AssetEventType::_set_UNKNOWN(::HoudiniEngineUnity::HEU_AssetEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_set_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HoudiniEngineUnity", "HEU_AssetEventType", "UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public HoudiniEngineUnity.HEU_AssetEventType RELOAD
::HoudiniEngineUnity::HEU_AssetEventType HoudiniEngineUnity::HEU_AssetEventType::_get_RELOAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_get_RELOAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HoudiniEngineUnity::HEU_AssetEventType>("HoudiniEngineUnity", "HEU_AssetEventType", "RELOAD"));
}
// Autogenerated static field setter
// Set static field: static public HoudiniEngineUnity.HEU_AssetEventType RELOAD
void HoudiniEngineUnity::HEU_AssetEventType::_set_RELOAD(::HoudiniEngineUnity::HEU_AssetEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_set_RELOAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HoudiniEngineUnity", "HEU_AssetEventType", "RELOAD", value));
}
// Autogenerated static field getter
// Get static field: static public HoudiniEngineUnity.HEU_AssetEventType COOK
::HoudiniEngineUnity::HEU_AssetEventType HoudiniEngineUnity::HEU_AssetEventType::_get_COOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_get_COOK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HoudiniEngineUnity::HEU_AssetEventType>("HoudiniEngineUnity", "HEU_AssetEventType", "COOK"));
}
// Autogenerated static field setter
// Set static field: static public HoudiniEngineUnity.HEU_AssetEventType COOK
void HoudiniEngineUnity::HEU_AssetEventType::_set_COOK(::HoudiniEngineUnity::HEU_AssetEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_set_COOK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HoudiniEngineUnity", "HEU_AssetEventType", "COOK", value));
}
// Autogenerated static field getter
// Get static field: static public HoudiniEngineUnity.HEU_AssetEventType BAKE_NEW
::HoudiniEngineUnity::HEU_AssetEventType HoudiniEngineUnity::HEU_AssetEventType::_get_BAKE_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_get_BAKE_NEW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HoudiniEngineUnity::HEU_AssetEventType>("HoudiniEngineUnity", "HEU_AssetEventType", "BAKE_NEW"));
}
// Autogenerated static field setter
// Set static field: static public HoudiniEngineUnity.HEU_AssetEventType BAKE_NEW
void HoudiniEngineUnity::HEU_AssetEventType::_set_BAKE_NEW(::HoudiniEngineUnity::HEU_AssetEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_set_BAKE_NEW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HoudiniEngineUnity", "HEU_AssetEventType", "BAKE_NEW", value));
}
// Autogenerated static field getter
// Get static field: static public HoudiniEngineUnity.HEU_AssetEventType BAKE_UPDATE
::HoudiniEngineUnity::HEU_AssetEventType HoudiniEngineUnity::HEU_AssetEventType::_get_BAKE_UPDATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_get_BAKE_UPDATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::HoudiniEngineUnity::HEU_AssetEventType>("HoudiniEngineUnity", "HEU_AssetEventType", "BAKE_UPDATE"));
}
// Autogenerated static field setter
// Set static field: static public HoudiniEngineUnity.HEU_AssetEventType BAKE_UPDATE
void HoudiniEngineUnity::HEU_AssetEventType::_set_BAKE_UPDATE(::HoudiniEngineUnity::HEU_AssetEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::_set_BAKE_UPDATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("HoudiniEngineUnity", "HEU_AssetEventType", "BAKE_UPDATE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& HoudiniEngineUnity::HEU_AssetEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.HEU_AssetEventData
#include "HoudiniEngineUnity/HEU_AssetEventData.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HoudiniEngineUnity.HEU_HoudiniAsset Asset
[[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HEU_HoudiniAsset*& HoudiniEngineUnity::HEU_AssetEventData::dyn_Asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventData::dyn_Asset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Asset"))->offset;
  return *reinterpret_cast<::HoudiniEngineUnity::HEU_HoudiniAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CookSuccess
[[deprecated("Use field access instead!")]] bool& HoudiniEngineUnity::HEU_AssetEventData::dyn_CookSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventData::dyn_CookSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CookSuccess"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.GameObject> OutputObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& HoudiniEngineUnity::HEU_AssetEventData::dyn_OutputObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventData::dyn_OutputObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutputObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HoudiniEngineUnity.HEU_AssetEventType EventType
[[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HEU_AssetEventType& HoudiniEngineUnity::HEU_AssetEventData::dyn_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_AssetEventData::dyn_EventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventType"))->offset;
  return *reinterpret_cast<::HoudiniEngineUnity::HEU_AssetEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.HEU_ReloadEventData
#include "HoudiniEngineUnity/HEU_ReloadEventData.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.HEU_CookedEventData
#include "HoudiniEngineUnity/HEU_CookedEventData.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.HEU_BakedEventData
#include "HoudiniEngineUnity/HEU_BakedEventData.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsNewBake
[[deprecated("Use field access instead!")]] bool& HoudiniEngineUnity::HEU_BakedEventData::dyn_IsNewBake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_BakedEventData::dyn_IsNewBake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsNewBake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.HEU_PreAssetEventData
#include "HoudiniEngineUnity/HEU_PreAssetEventData.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HoudiniEngineUnity.HEU_HoudiniAsset Asset
[[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HEU_HoudiniAsset*& HoudiniEngineUnity::HEU_PreAssetEventData::dyn_Asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_PreAssetEventData::dyn_Asset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Asset"))->offset;
  return *reinterpret_cast<::HoudiniEngineUnity::HEU_HoudiniAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HoudiniEngineUnity.HEU_AssetEventType AssetType
[[deprecated("Use field access instead!")]] ::HoudiniEngineUnity::HEU_AssetEventType& HoudiniEngineUnity::HEU_PreAssetEventData::dyn_AssetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::HoudiniEngineUnity::HEU_PreAssetEventData::dyn_AssetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetType"))->offset;
  return *reinterpret_cast<::HoudiniEngineUnity::HEU_AssetEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.ReloadEvent
#include "HoudiniEngineUnity/ReloadEvent.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.HEU_ReloadDataEvent
#include "HoudiniEngineUnity/HEU_ReloadDataEvent.hpp"
// Including type: HoudiniEngineUnity.HEU_ReloadEventData
#include "HoudiniEngineUnity/HEU_ReloadEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HoudiniEngineUnity.CookedEvent
#include "HoudiniEngineUnity/CookedEvent.hpp"
// Including type: HoudiniEngineUnity.HEU_HoudiniAsset
#include "HoudiniEngineUnity/HEU_HoudiniAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
